{"version":3,"sources":["webpack:///src/app/pages/client-core/affiliate/affiliate-core/affiliate-core.component.ts","webpack:///src/app/pages/client-core/affiliate/affiliate-core/affiliate-core.component.html","webpack:///src/app/pages/client-core/affiliate/affiliate-core/affiliate-request-details/affiliate-request-details.component.ts","webpack:///src/app/pages/client-core/affiliate/affiliate-core/affiliate-request-details/affiliate-request-details.component.html","webpack:///src/app/pages/client-core/affiliate/affiliate-core/affiliate-request/affiliate-request.component.ts","webpack:///src/app/pages/client-core/affiliate/affiliate-core/affiliate-request/affiliate-request.component.html","webpack:///src/app/pages/client-core/affiliate/affiliate-core/new-affiliate-request/new-affiliate-request.component.ts","webpack:///src/app/pages/client-core/affiliate/affiliate-core/new-affiliate-request/new-affiliate-request.component.html","webpack:///src/app/pages/client-core/affiliate/affiliate-core/referred-users/referred-users.component.ts","webpack:///src/app/pages/client-core/affiliate/affiliate-core/referred-users/referred-users.component.html","webpack:///src/app/pages/client-core/affiliate/affiliate-routing.module.ts","webpack:///src/app/pages/client-core/affiliate/affiliate.module.ts","webpack:///src/app/shared/services/affiliate.service.ts"],"names":["AffiliateCoreComponent","selector","templateUrl","styleUrls","AffiliateRequestDetailsComponent","headerService","globalService","subscription1","castLoggedUserDetail","subscribe","resData","LoggedParams","getBannerDetail","setTimeout","affiliateLinkCode","referCode","params","ProfileId","sProfile","sMasterId","subscription2","getAflbanner","data","console","log","BannerDetail","lstBanner","ReferCode","unsubscribe","AffiliateRequestComponent","affiliateService","router","activatedRoute","isLoading","isAffiliateAvaliable","editAffiliate","getAffilateStatus","getAffStatus","length","AffiliateStatus","navigate","relativeTo","getupdateAffiliateStatus","getAffilateDataToUpdate","selectedItem","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","then","result","value","Account","DELETE_AFFILIATE_PROFILE","NewAffiliateRequestComponent","notificationService","ErrorMsqBlock","successMsqBlock","liveAccountData","isAffiliateUpdate","subscription3","castUpdateAffiliateStatus","status","getProfileAccounts","LoginId","GET_PROFILE_ACCOUNTS","lstAccount","map","acc","Object","assign","sUserInfo","sAccountPlan","Affiliateid","affiliateSignup","accountnumber","PkgId","PkgName","Name","uPersonalInfo","First","Email","uContactInfo","Company","cname","Company_Addr","caddress","uStatus","SocialInfo","FaceBook","GitHub","GooglePlus","LinkedIn","PInterest","RSSLink","Skype","Telegram","Twitter","Website","WhatsApp","YouTube","makeAffReq","Result","showSuccess","onErrorMsqDisplay","showError","messageToDisplay","msq","onSubmit","static","ReferredUsersComponent","orderPipe","TotalCount","p","pageSize","order","reverse","IsDataNotFound","sortedData","transform","AffiliatedUsersList","cat","indexval","countVal","setParams","Affiliate","DealerID","sDealerId","Count","Index","getAffProfiles","AffiliatedUsersProfile","lstProfile","setOrder","routes","path","component","children","pathMatch","redirectTo","breadcrumb","AffiliateRoutingModule","forChild","imports","exports","AffiliateModule","declarations","providers","AffiliateService","updateAffiliateStatus","setUpdateAffiliateStatus","asObservable","setAffilateDataToUpdate","affilateDataToUpdate","castAffilateDataToUpdate","next","providedIn"],"mappings":"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","file":"client-core-affiliate-affiliate-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-affiliate-core',\n  templateUrl: './affiliate-core.component.html',\n  styleUrls: ['./affiliate-core.component.scss']\n})\nexport class AffiliateCoreComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<router-outlet></router-outlet>","import { AffiliateService } from './../../../../../shared/services/affiliate.service';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { GlobalService } from './../../../../../shared/services/global.service';\nimport { HeaderService } from './../../../../../shared/services/header.service';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-affiliate-request-details',\n  templateUrl: './affiliate-request-details.component.html',\n  styleUrls: ['./affiliate-request-details.component.scss']\n})\nexport class AffiliateRequestDetailsComponent implements OnInit, OnDestroy {\n\n  public isLoading: false;\n  public walletId: string;\n  public dealerId: string;\n  public LoggedParams: any;\n  public BannerDetail: any;\n  public referCode: any;\n  public subscription1: Subscription;\n  public subscription2: Subscription;\n  public affiliateLinkCode: any;\n  public htmlBannerCode: any;\n  constructor(\n    private headerService: HeaderService,\n    private globalService: GlobalService,\n  ) {\n  }\n  ngOnInit(): void {\n    this.subscription1 = this.headerService.castLoggedUserDetail.subscribe(\n      resData => (this.LoggedParams = resData)\n    );\n    this.getBannerDetail();\n    setTimeout(() => {\n      this.affiliateLinkCode = `http://client.traderscabinet.com/tr_test/#/auth/signup/?affiliate=${this.referCode}`;\n      // tslint:disable-next-line: max-line-length\n      // this.htmlBannerCode = `<a href=\"\" onClick=\"this.href='https://my.cabanacapitals.com/#/?affiliate=ft@txttt'\"> <img src=\"http://207.180.199.14:8021/docs/P1563769743855/banner.jpeg\" ></a>`;\n     }, 1000);\n  }\n  getBannerDetail() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n    };\n    this.subscription2 = this.globalService.getAflbanner(params).subscribe(\n      data => {\n        console.log(data);\n        this.BannerDetail = data.lstBanner;\n        this.referCode = data.ReferCode;\n       }\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription1.unsubscribe();\n    this.subscription2.unsubscribe();\n  }\n\n}\n","<div class=\"small-content-section position-relative\" style=\"background: transparent\">\n    <div class=\"title p-3  border-bottom bd-color text-size-15 font-weight-500\">\n        Affiliate Information\n    </div>\n    <div class=\"banner-container\">\n        <div class=\"affiliate-link border-bottom bd-color py-3\">\n            <div class=\"left-area\">\n                <h5 class=\"title\">Affiliate Link</h5>\n                <small>This is your affiliate link just copy the link and paste anywhere you want.</small>\n                <!-- <small>This is your affiliate link just copy the link and paste anywaere you want.</small> -->\n            </div>\n            <div class=\"right-area\">\n                <span>{{affiliateLinkCode}}</span>\n            </div>\n        </div>\n        <div class=\"banner-detail border-bottom bd-color py-3\" *ngFor=\"let item of BannerDetail; let i = index\">\n            <div class=\"affiliate-html\">\n                <div class=\"left-area\">\n                    <!-- <h5 class=\"title\">Affiliate Baner HTML Code {{i + 1}}</h5> -->\n                    <h5 class=\"title\">Affiliate Baner HTML Code</h5>\n                    <small>This is your affiliate Banner html code just copy the link and paste anywhere you want.</small>\n                </div>\n                <div class=\"right-area\">\n                    <div class=\"form-group\">\n                        <textarea style=\"width:350px; height: 130px\" rowspan=\"20\" class=\"form-control\" id=\"exampleFormControlTextarea1\" value='<a href=\"http://client.traderscabinet.com/tr_test/auth/signup/?affiliate={{referCode}}\" target=\"_blank\"><img src=\"{{item.BannerPath}}\" alt=\"{{item.BannerName}}\"></a>'\n                            disabled></textarea>\n                    </div>\n                </div>\n            </div>\n            <div class=\"affiliate-banner\">\n                <div class=\"left-area\">\n                    <h5 class=\"title\">Affiliate Banner Preview</h5>\n                    <small>This is your affiliate Banner Preview.</small>\n                </div>\n                <div class=\"right-area\">\n                    <span><img class=\"preview-img\" [src]=\"item.BannerPath\" alt=\"{{item.BannerName}}\" id=\"{{item.BannerId}}\"></span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Router, ActivatedRoute } from '@angular/router';\nimport { AffiliateService } from './../../../../../shared/services/affiliate.service';\nimport { GlobalService } from './../../../../../shared/services/global.service';\nimport { HeaderService } from './../../../../../shared/services/header.service';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-affiliate-request',\n  templateUrl: './affiliate-request.component.html',\n  styleUrls: ['./affiliate-request.component.scss']\n})\nexport class AffiliateRequestComponent implements OnInit, OnDestroy {\n\n  public isLoading = false;\n  public walletId: string;\n  public dealerId: string;\n  public LoggedParams: any;\n  public AffiliateStatus: any[];\n  public isAffiliateAvaliable = true;\n  public subscription1: Subscription;\n  public editAffiliate = false;\n\n  constructor(\n    private headerService: HeaderService,\n    private globalService: GlobalService,\n    private affiliateService: AffiliateService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.subscription1 = this.headerService.castLoggedUserDetail.subscribe(\n      resData => (this.LoggedParams = resData)\n    );\n    this.getAffilateStatus();\n  }\n  getAffilateStatus() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n    };\n    this.subscription1 = this.globalService.getAffStatus(params).subscribe(\n      data => {\n        if (data.length !== 0) {\n          this.AffiliateStatus = data;\n          this.isAffiliateAvaliable = true;\n          this.isLoading = false;\n        } else {\n          this.AffiliateStatus = data;\n          this.isAffiliateAvaliable = false;\n          this.router.navigate(['../new-affiliate-request'], {relativeTo: this.activatedRoute});\n          this.isLoading = false;\n        }\n        console.log(data);\n       }\n    );\n  }\n  onEditAffiliate() {\n    this.editAffiliate = true;\n    this.affiliateService.getupdateAffiliateStatus(true);\n    this.affiliateService.getAffilateDataToUpdate(this.AffiliateStatus);\n  }\n  onDelete(selectedItem) {\n    Swal.fire({\n      title: 'Are you Sure!',\n      text: 'Do you really want to delete these Affiliate? This process cannot undone',\n      icon: 'error',\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      cancelButtonText: 'Cancel',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n        const params = {\n          ProfileId: this.LoggedParams.sProfile.sMasterId,\n          Account: selectedItem.Account\n        };\n        console.log(params);\n        this.globalService.DELETE_AFFILIATE_PROFILE(params).subscribe(data => {\n          console.log(data);\n          this.getAffilateStatus();\n        });\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.subscription1.unsubscribe();\n  }\n\n}\n","<div *ngIf=\"!isAffiliateAvaliable\">\n    <app-new-affiliate-request></app-new-affiliate-request>\n</div>\n<div *ngIf=\"isAffiliateAvaliable\" class=\"small-content-section position-relative border bd-color rounded-top\">\n    <div class=\"affiliate-container\" *ngFor=\"let item of AffiliateStatus\">\n        <div *ngIf=\"isLoading\">\n            Loading data ...\n        </div>\n        <div *ngIf=\"!isLoading\" class=\"affiliate-profile\">\n            <div class=\"profile-header\">\n                <div class=\"media\">\n                    <div class=\"icon-area\">\n                        <i-feather class=\"icon-size-27\" name=\"user\"></i-feather>\n                    </div>\n                    <div class=\"media-body\">\n                        <h5 class=\"title\">{{item.Name}}</h5>\n                        <span class=\"id\">Affiliate Id: #{{item.Affiliateid}}</span>\n                        <span class=\"del-btn\" (click)=\"onDelete(item) \" tooltip=\"Delete Affiliate\"><i-feather class=\"icon-size-19 cursor-pointer ml-2\" style=\"color:red \" name=\"trash-2\"></i-feather></span>\n                        <div class=\"status\">\n                            <span *ngIf=\"item.uStatus===1\" class=\"badge badge-warning font-weight-600 rounded-pill\">Pending</span>\n                            <span *ngIf=\"item.uStatus===2\" class=\"badge badge-success font-weight-600 \">Approved</span>\n                            <span *ngIf=\"item.uStatus===3\" class=\"badge badge-danger font-weight-600 \">Reject</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"profile-body\">\n                <div class=\"action-area text-right\">\n                    <!-- <span (click)=\"onEditAffiliate()\" tooltip=\"Edit Affiliate\"><i-feather class=\"icon-size-19 cursor-pointer mx-1\" style=\"color:green \"name=\"edit\"></i-feather></span> -->\n                    <!-- <span (click)=\"onDelete(item) \" tooltip=\"Delete Affiliate \"><i-feather class=\"icon-size-19 cursor-pointer \" style=\"color:red \" name=\"trash-2\"></i-feather></span> -->\n                </div>\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item\">\n                        <div class=\"left-side\">\n                            <span class=\"icon px-2\">\n                                    <i-feather class=\"icon-size-21\" name=\"lock\"></i-feather></span>\n                            <span>Account Number :</span>\n                        </div>\n                        <div class=\"right-side\"> {{item.Account}}</div>\n                    </li>\n                    <li class=\"list-group-item\">\n                        <div class=\"left-side\">\n                            <span class=\"icon px-2\">\n                                    <i-feather class=\"icon-size-21\" name=\"mail\"></i-feather></span>\n                            <span>Email Address :</span>\n                        </div>\n                        <div class=\"right-side\"> {{item.Email}}</div>\n                    </li>\n                    <li class=\"list-group-item\">\n                        <div class=\"left-side\">\n                            <span class=\"icon px-2\">\n                                    <i-feather class=\"icon-size-21\" name=\"image\"></i-feather></span>\n                            <span>Company Name :</span>\n                        </div>\n                        <div class=\"right-side\"> {{item.Company}}</div>\n                    </li>\n                    <li class=\"list-group-item\">\n                        <div class=\"left-side\">\n                            <span class=\"icon px-2\">\n                                    <i-feather class=\"icon-size-21\" name=\"map-pin\"></i-feather></span>\n                            <span>Company Address :</span>\n                        </div>\n                        <div class=\"right-side\"> {{item.Company_Addr}}</div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div *ngIf=\"!editAffiliate && item.uStatus === 2\" class=\"Affiliate-detail\">\n            <app-affiliate-request-details></app-affiliate-request-details>\n        </div>\n        <div *ngIf=\"item.uStatus !== 2\" class=\"Affiliate-detail\">\n            <div class=\"not-approved p-5\">\n                <h1 class=\"p-5\">Your affiliate request has not been approved</h1>\n            </div>\n        </div>\n        <div *ngIf=\"editAffiliate\" class=\"affiliate-edit\">\n            <app-new-affiliate-request></app-new-affiliate-request>\n        </div>\n    </div>\n</div>","import { NotificationService } from './../../../../../shared/services/notification.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AffiliateService } from './../../../../../shared/services/affiliate.service';\nimport { Subscription } from 'rxjs';\nimport { GlobalService } from './../../../../../shared/services/global.service';\nimport { HeaderService } from './../../../../../shared/services/header.service';\nimport { NgForm } from '@angular/forms';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-new-affiliate-request',\n  templateUrl: './new-affiliate-request.component.html',\n  styleUrls: ['./new-affiliate-request.component.scss']\n})\nexport class NewAffiliateRequestComponent implements OnInit, OnDestroy {\n  LoggedParams: any;\n  isLoading = false;\n  messageToDisplay: string;\n  ErrorMsqBlock = false;\n  successMsqBlock = false;\n  liveAccountData: any[] = [];\n  subscription1: Subscription;\n  subscription2: Subscription;\n  subscription3: Subscription;\n  selectedSocialSite: any;\n  isAffiliateUpdate = false;\n  @ViewChild('formData', {static: false}) affiliateSignup: NgForm;\n  constructor(\n    private headerService: HeaderService,\n    private globalService: GlobalService,\n    private affiliateService: AffiliateService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private notificationService: NotificationService\n  ) {\n    this.subscription3 = this.affiliateService.castUpdateAffiliateStatus.subscribe(\n      status => (this.isAffiliateUpdate = status)\n    );\n    this.subscription1 = this.headerService.castLoggedUserDetail.subscribe(\n      resData => (this.LoggedParams = resData)\n    );\n    console.log(this.isAffiliateUpdate);\n   }\n\n  ngOnInit(): void {\n    this.getProfileAccounts();\n  }\n  getProfileAccounts() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n      LoginId: this.LoggedParams.sProfile.sMasterId\n    };\n    this.subscription2 = this.globalService.GET_PROFILE_ACCOUNTS(params).subscribe(\n      data => {\n        this.liveAccountData = data.lstAccount.map( acc => {\n          if (acc) {\n            return Object.assign(acc.sUserInfo, acc.sAccountPlan);\n          }\n        });\n        console.log( this.liveAccountData);\n      }\n    );\n  }\n  onSubmit() {\n    this.isLoading = true;\n    const params = {\n        Affiliateid: 0,\n        ProfileId: this.LoggedParams.sProfile.sMasterId,\n        Account: this.affiliateSignup.value.accountnumber,\n        PkgId: 0,\n        PkgName: 0,\n        Name: this.LoggedParams.sProfile.uPersonalInfo.First,\n        Email: this.LoggedParams.sProfile.uContactInfo.Email,\n        Company: this.affiliateSignup.value.cname,\n        Company_Addr: this.affiliateSignup.value.caddress,\n        uStatus: this.LoggedParams.sProfile.uStatus,\n        SocialInfo: {\n          FaceBook: this.affiliateSignup.value.FaceBook,\n          GitHub:  ' ',\n          GooglePlus: ' ',\n          LinkedIn: this.affiliateSignup.value.LinkedIn,\n          PInterest: ' ',\n          RSSLink: ' ',\n          Skype: ' ',\n          Telegram: ' ',\n          Twitter: this.affiliateSignup.value.Twitter,\n          Website: this.affiliateSignup.value.Website,\n          WhatsApp: ' ',\n          YouTube:  this.affiliateSignup.value.YouTube,\n        },\n        ReferCode: 0,\n      };\n    console.log(params);\n    this.globalService.makeAffReq(params).subscribe(data => {\n      if (data.Result === true) {\n        this.isLoading = false;\n        this.notificationService.showSuccess('Your request has been generated Successfully. Please wait for admin approval.', 'Success');\n        // this.onSuccessMsqDisplay('Affiliate Profile created Successfully');\n        // this.autoCloseMsqBlock();\n        this.router.navigate(['../affiliate-request'], {relativeTo: this.activatedRoute});\n      } else {\n        this.onErrorMsqDisplay('Faild to Create Affiliate Profile');\n        this.notificationService.showError('Faild to Create Affiliate Profile.', 'Error');\n        this.isLoading = false;\n        // this.autoCloseMsqBlock();\n      }\n      });\n    this.isLoading = false;\n  }\n  autoCloseMsqBlock() {\n    setTimeout(() => {\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n  onCloseMsqBlock() {\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = false;\n    this.messageToDisplay = '';\n  }\n  onSuccessMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.ErrorMsqBlock = false;\n    this.successMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  onErrorMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  ngOnDestroy() {\n    this.subscription1.unsubscribe();\n    this.subscription2.unsubscribe();\n    this.subscription3.unsubscribe();\n  }\n\n}\n","<div class=\"small-content-section bg-f position-relative\">\n    <div class=\"history-title px-3 border-bottom\">\n        Create New Affiliate Request\n        <!-- <small class=\"d-block text-size-12\">Please fill all the mandatory fields</small> -->\n    </div>\n    <div class=\"affiliate-container\">\n        <!-- <div class=\"transaction-form-container\"> -->\n        <div class=\"affiliate-from-box bg-b\">\n            <!-- <div class=\"heading\">\n                <div class=\"title\">Create New Affiliate Request</div>\n                <small>All Required field are nedd to be fill.</small>\n            </div> -->\n            <!-- Success Message After Submit section start -->\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n                        <strong>Success -: </strong>{{messageToDisplay}}\n                        <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                    </div>\n                </div>\n            </div>\n            <!-- Error Message After Submit section start -->\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n                        <strong>Oops... : </strong>{{messageToDisplay}}\n                        <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                    </div>\n                </div>\n            </div>\n\n            <form class=\"\" (ngSubmit)=\"onSubmit()\" #formData=\"ngForm\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label class=\"main-txt-color font-weight-500\" for=\"accountnumber\">Account Number</label>\n                            <span class=\"asterick\">*</span>\n                            <select required ngModel #accountnumber=\"ngModel\" name=\"accountnumber\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"accountnumber\">\n                                <option class=\"text-size-13\" value=\"\" [disabled]=\"true\" >Select Account Number</option>\n                                <option class=\"text-size-13\" *ngFor=\"let acc of liveAccountData\" name=\"accounts\" [ngValue]=\"acc.MT4Account\">{{acc.MT4Account}}</option>\n                            </select>\n                            <span class=\"help-block text-danger \" *ngIf=\"!accountnumber.valid && accountnumber.touched  \">Please Select an Account Number</span>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label class=\"main-txt-color font-weight-500\" for=\"cname\">Company Name</label>\n                            <input required ngModel #cname=\"ngModel\" name=\"cname\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"cname\" placeholder=\"Enter Company Name\" />\n                            <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                            <!-- <span class=\"help-block text-danger \" *ngIf=\"!cname.valid && cname.touched  \">Please Enter a valid Number</span> -->\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label class=\"main-txt-color font-weight-500\" for=\"caddress\">Company Address</label>\n                            <input required ngModel #caddress=\"ngModel\" name=\"caddress\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"caddress\" placeholder=\"Enter Company Address\" />\n                            <!-- <span class=\"help-block text-danger \" *ngIf=\"!cname.valid && cname.touched  \">Please Enter a valid Number</span> -->\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label class=\"main-txt-color font-weight-500\" for=\"Website\">Website link</label>\n                            <input ngModel #Website=\"ngModel\" name=\"Website\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"Website\" placeholder=\"Enter Website link\" />\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label class=\"main-txt-color font-weight-500\" for=\"FaceBook\">Facebook link</label>\n                            <input ngModel #FaceBook=\"ngModel\" name=\"FaceBook\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"FaceBook\" placeholder=\"Enter facebook link\" />\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label class=\"main-txt-color font-weight-500\" for=\"Twitter\">Twitter link</label>\n                            <input ngModel #Twitter=\"ngModel\" name=\"Twitter\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"Twitter\" placeholder=\"Enter Twitter link\" />\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label class=\"main-txt-color font-weight-500\" for=\"YouTube\">YouTube link</label>\n                            <input ngModel #YouTube=\"ngModel\" name=\"YouTube\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"YouTube\" placeholder=\"Enter YouTube link\" />\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label class=\"main-txt-color font-weight-500\" for=\"LinkedIn\">LinkedIn link</label>\n                            <input ngModel #LinkedIn=\"ngModel\" name=\"LinkedIn\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"LinkedIn\" placeholder=\"Enter LinkedIn link\" />\n                        </div>\n                    </div>\n                </div>\n\n\n\n                <div class=\"row\">\n                    <div class=\"col-md-8\">\n                        <div class=\"position-relative text-left\">\n                            <!-- <button routerLink=\"../view\" class=\"btn btn-info btn-sm px-4 py-2 position-relative mr-2\">\n                            <span [class.btn-spinner]=\"isLoading\"></span>Cancel</button> -->\n                            <button [disabled]=\"(!formData.valid || isLoading )\" class=\"btn btn-primary btn-sm px-4 position-relative\">\n                            <span [class.btn-spinner]=\"isLoading\"></span>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { GlobalService } from './../../../../../shared/services/global.service';\nimport { HeaderService } from './../../../../../shared/services/header.service';\nimport { Subscription } from 'rxjs';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-referred-users',\n  templateUrl: './referred-users.component.html',\n  styleUrls: ['./referred-users.component.scss']\n})\nexport class ReferredUsersComponent implements OnInit {\n  public isLoading = false;\n  public LoggedParams: any;\n  public AffiliatedUsersProfile: any;\n  public AffiliatedUsersList: any [];\n  public subscription1: Subscription;\n\n   // pagination Setting\n   public TotalCount = 0;\n   public cat;\n   public searchText: any; // Search Text property is used to filter text in table\n   public p: any = 1;          // Current page in pagination\n   public pageSize = 5;  // Table Rows Perpage property\n   public sortedData: any[]; // Sorted Product list array\n   public order = '';     // Order property to sort coloum of table\n   public reverse = true; // Reverse property is used to sort table coloum\n   public setParams: any;\n   public IsDataNotFound = false;\n  constructor(\n    private orderPipe: OrderPipe,\n    private headerService: HeaderService,\n    private globalService: GlobalService\n  ) {\n    this.sortedData = orderPipe.transform(this.AffiliatedUsersList, this.order);\n  }\n  setOrder(value: string) {\n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n    this.order = value;\n  }\n\n  ngOnInit(): void {\n    this.subscription1 = this.headerService.castLoggedUserDetail.subscribe(\n      resData => (this.LoggedParams = resData)\n    );\n    // this.getAffilateStatus(this.p, this.pageSize);\n    this.getAffilateStatus(1, this.cat);\n  }\n  getAffilateStatus(indexval, countVal) {\n    this.isLoading = true;\n    if (countVal) {\n      this.pageSize = indexval;\n      this.p = 1;\n      this.setParams = {\n        Affiliate: this.LoggedParams.sProfile.sMasterId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Count: this.p,\n        Index: this.pageSize\n      };\n    } else {\n      this.p = indexval;\n      this.setParams = {\n        Affiliate: this.LoggedParams.sProfile.sMasterId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Count:  (this.p - 1) * this.pageSize + 1,\n        Index: this.p * this.pageSize\n      };\n    }\n    this.subscription1 = this.globalService.getAffProfiles(this.setParams).subscribe(\n      data => {\n        if (data.length !== 0) {\n          this.IsDataNotFound = false;\n          this.isLoading = false;\n          this.TotalCount = data.TotalCount;\n          this.AffiliatedUsersProfile = data;\n          this.AffiliatedUsersList = this.AffiliatedUsersProfile.lstProfile;\n        } else {\n          this.IsDataNotFound = true;\n          this.isLoading = false;\n        }\n       }\n    );\n  }\n\n}\n","<div class=\"small-content-section bg-f\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card border-0 \">\n                <div class=\"card-body border-0 p-0\">\n                    <div class=\"tabs-container\">\n                        <div class=\"history-title px-3 border-bottom\">Users List\n                            <!-- <small class=\"d-block text-size-12\">your Affiliated users list</small> -->\n                        </div>\n                        <div class=\"tabs-body p-2\">\n                            <div class=\"tab-inner-content px-2\">\n                                <div class=\"table-filter-area\">\n                                    <div class=\"row no-gutters\">\n                                        <div class=\"col-md-4 form-inline d-none d-md-block\">\n                                            <div class=\"form-group mb-2\">\n                                                <label for=\"entries\" class=\" main-txt-color mr-1\">Show </label>\n                                                <select (change)=\"getAffilateStatus($event.target.value,true)\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"entries\">\n                                                    <option selected>5</option>\n                                                    <option>10</option>\n                                                    <option>15</option>\n                                                    <option>20</option>\n                                                    <option>25</option>\n                                                    <option>50</option>\n                                                </select>\n                                                <label for=\"entries\" class=\" main-txt-color ml-1\"> Entries</label>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-3 offset-md-5\">\n                                            <div class=\"form-group\">\n                                                <input [(ngModel)]=\"searchText\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"\" placeholder=\"Enter keyword to search\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"table-container table-responsive\">\n                                    <table class=\"table table-hover main-txt-color mb-0\">\n                                        <thead class=\"table-header-bg table-header-color\">\n                                            <tr>\n                                                <th [class.active]=\"order === 'First' \" (click)=\"setOrder('First')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Name</th>\n                                                <th [class.active]=\"order === 'Email' \" (click)=\"setOrder('Email')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Email</th>\n                                                <th [class.active]=\"order === 'Phone' \" (click)=\"setOrder('Phone')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Phone</th>\n                                                <th [class.active]=\"order === 'sCreadedOn_Str' \" (click)=\"setOrder('sCreadedOn_Str')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Date</th>\n                                                <th [class.active]=\"order === 'sCreadedOn_Str' \" (click)=\"setOrder('sCreadedOn_Str')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Time</th>\n                                                <th [class.active]=\"order === 'uKYCStatus' \" (click)=\"setOrder('uKYCStatus')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">KYC status</th>\n                                                <th [class.active]=\"order === 'Country' \" (click)=\"setOrder('Country')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Country</th>\n                                                <th [class.active]=\"order === 'State' \" (click)=\"setOrder('State')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">State</th>\n                                                <th [class.active]=\"order === 'City' \" (click)=\"setOrder('City')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">City</th>\n                                                <th [class.active]=\"order === 'Address1' \" (click)=\"setOrder('Address1')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Address</th>\n                                            </tr>\n                                        </thead>\n\n                                        <tbody *ngIf=\"(!IsDataNotFound)\" class=\"secondary-txt-color\">\n                                            <tr *ngIf=\"(isLoading)\">\n                                                <td colspan=\"10\" class=\"text-center\">\n                                                    <div class=\"text-size-17 font-weight-300\">Loading ...</div>\n                                                </td>\n                                            </tr>\n                                            <tr *ngFor=\"let user of AffiliatedUsersList | orderBy:order:reverse | filter:searchText | paginate: { itemsPerPage: pageSize, currentPage: p,  totalItems: TotalCount}; let i = index \">\n                                                <td>\n                                                    <span *ngIf=\"user.uPersonalInfo.First\">{{user.uPersonalInfo.First}}</span>\n                                                    <span *ngIf=\"!user.uPersonalInfo.First\">---</span>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf=\"user.uContactInfo.Email\">{{user.uContactInfo.Email}}</span>\n                                                    <span *ngIf=\"!user.uContactInfo.Email\">---</span>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf=\"user.uContactInfo.Phone\">{{user.uContactInfo.Phone}}</span>\n                                                    <span *ngIf=\"!user.uContactInfo.Phone\">---</span>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf=\"user.uTimestampInfo.sCreadedOn_Str\">{{user.uTimestampInfo.sCreadedOn_Str | date:'dd MMM yyyy'}}</span>\n                                                    <span *ngIf=\"!user.uTimestampInfo.sCreadedOn_Str\">---</span>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf=\"user.uTimestampInfo.sCreadedOn_Str\">{{user.uTimestampInfo.sCreadedOn_Str | date:'HH:mm:ss'}}</span>\n                                                    <span *ngIf=\"!user.uTimestampInfo.sCreadedOn_Str\">---</span>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf=\"(user.uKYCStatus === 1)\" class=\"badge badge-warning font-weight-600 rounded-pill\">Pending</span>\n                                                    <span *ngIf=\"(user.uKYCStatus === 2)\" class=\"badge badge-success font-weight-600 rounded-pill\">Approved</span>\n                                                    <span *ngIf=\"(user.uKYCStatus === 3)\" class=\"badge badge-danger font-weight-600 rounded-pill\">Rejected</span>\n                                                    <span *ngIf=\"(user.uKYCStatus === 4)\" class=\"badge badge-danger font-weight-600 rounded-pill\">Suspended</span>\n                                                    <span *ngIf=\"(user.uKYCStatus === 5)\" class=\"badge badge-info font-weight-600 rounded-pill\">onHold</span>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf=\"user.uAddressInfo.Country\">{{user.uAddressInfo.Country}}</span>\n                                                    <span *ngIf=\"!user.uAddressInfo.Country\">---</span>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf=\"user.uAddressInfo.State\">{{user.uAddressInfo.State}}</span>\n                                                    <span *ngIf=\"!user.uAddressInfo.State\">---</span>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf=\"user.uAddressInfo.City\">{{user.uAddressInfo.City}}</span>\n                                                    <span *ngIf=\"!user.uAddressInfo.City\">---</span>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf=\"user.uAddressInfo.Address1\">{{user.uAddressInfo.Address1}}</span>\n                                                    <span *ngIf=\"!user.uAddressInfo.Address1\">---</span>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                    <div *ngIf=\"(IsDataNotFound)\" class=\"text-size-17 font-weight-300 text-center p-4 mb-2\" style=\"background: #eff3f6;\">Data Not Found</div>\n                                </div>\n                                <div class=\"table-pagination text-right border-top-0 pt-4\">\n                                    <pagination-controls (pageChange)=\"getAffilateStatus($event,false)\"></pagination-controls>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NewAffiliateRequestComponent } from './affiliate-core/new-affiliate-request/new-affiliate-request.component';\nimport { ReferredUsersComponent } from './affiliate-core/referred-users/referred-users.component';\nimport { AffiliateRequestComponent } from './affiliate-core/affiliate-request/affiliate-request.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AffiliateCoreComponent } from './affiliate-core/affiliate-core.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AffiliateCoreComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'affiliate-request'\n      },\n      {\n        path: 'affiliate-request',\n        component: AffiliateRequestComponent,\n        data: {title: 'Affiliate Request', breadcrumb: 'Affiliate Request'}\n      },\n      {\n        path: 'new-affiliate-request',\n        component: NewAffiliateRequestComponent,\n        data: {title: 'Affiliate Request', breadcrumb: 'New Affiliate Request'}\n      },\n      {\n        path: 'referred-users-list',\n        component: ReferredUsersComponent,\n        data: {title: 'Referred Users', breadcrumb: 'Referred Users list'}\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AffiliateRoutingModule { }\n","import { AffiliateService } from './../../../shared/services/affiliate.service';\nimport { SharedModule } from './../../../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AffiliateRoutingModule } from './affiliate-routing.module';\nimport { AffiliateCoreComponent } from './affiliate-core/affiliate-core.component';\nimport { NewAffiliateRequestComponent } from './affiliate-core/new-affiliate-request/new-affiliate-request.component';\nimport { AffiliateRequestDetailsComponent } from './affiliate-core/affiliate-request-details/affiliate-request-details.component';\nimport { ReferredUsersComponent } from './affiliate-core/referred-users/referred-users.component';\nimport { AffiliateRequestComponent } from './affiliate-core/affiliate-request/affiliate-request.component';\n\n\n@NgModule({\n  declarations: [\n    AffiliateCoreComponent,\n    NewAffiliateRequestComponent,\n    AffiliateRequestDetailsComponent,\n    ReferredUsersComponent,\n    AffiliateRequestComponent],\n  imports: [\n    CommonModule,\n    AffiliateRoutingModule,\n    SharedModule\n  ],\n  providers: [AffiliateService],\n})\nexport class AffiliateModule { }\n","import { BehaviorSubject } from 'rxjs';\nimport { HeaderService } from './header.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AffiliateService {\nupdateAffiliateStatus = false;\naffilateDataToUpdate: any;\n\npublic setUpdateAffiliateStatus = new BehaviorSubject<any>(this.updateAffiliateStatus);\ncastUpdateAffiliateStatus = this.setUpdateAffiliateStatus.asObservable();\n\npublic setAffilateDataToUpdate = new BehaviorSubject<any>(this.affilateDataToUpdate);\ncastAffilateDataToUpdate = this.setUpdateAffiliateStatus.asObservable();\n\n  constructor(\n    private headerService: HeaderService\n  ) { }\n  getupdateAffiliateStatus(status: boolean) {\n     this.updateAffiliateStatus = status;\n     this.setUpdateAffiliateStatus.next(this.updateAffiliateStatus);\n  }\n  getAffilateDataToUpdate(data: any) {\n    this.affilateDataToUpdate = status;\n    this.setAffilateDataToUpdate.next(this.affilateDataToUpdate);\n  }\n}\n"]}