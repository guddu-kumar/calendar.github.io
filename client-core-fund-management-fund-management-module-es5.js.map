{"version":3,"sources":["webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-deposit/fund-deposit.component.ts","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-deposit/fund-deposit.component.html","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-deposit/to-account/to-account.component.ts","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-deposit/to-account/to-account.component.html","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-deposit/to-wallet/to-wallet.component.ts","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-deposit/to-wallet/to-wallet.component.html","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-management-core.component.ts","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-management-core.component.html","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/account-to-account/account-to-account.component.ts","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/account-to-account/account-to-account.component.html","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/account-to-wallet/account-to-wallet.component.ts","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/account-to-wallet/account-to-wallet.component.html","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/fund-transfer.component.ts","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/fund-transfer.component.html","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/wallet-to-wallet/wallet-to-wallet.component.ts","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/wallet-to-wallet/wallet-to-wallet.component.html","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-withdraw/fund-withdraw.component.ts","webpack:///src/app/pages/client-core/fund-management/fund-management-core/fund-withdraw/fund-withdraw.component.html","webpack:///src/app/pages/client-core/fund-management/fund-management-core/ledger-details/ledger-details.component.ts","webpack:///src/app/pages/client-core/fund-management/fund-management-core/ledger-details/ledger-details.component.html","webpack:///src/app/pages/client-core/fund-management/fund-management-routing.module.ts","webpack:///src/app/pages/client-core/fund-management/fund-management.module.ts","webpack:///src/app/shared/models/deposit-wallet.modal.ts","webpack:///src/app/shared/models/withdraw.modal.ts"],"names":["FundDepositComponent","selector","templateUrl","styleUrls","ToAccountComponent","globalService","headerService","notificationService","isLoading","walletToWalletLedger","isVisibleFormArea","ErrorMsqBlock","successMsqBlock","liveAccountData","LoggedParams","JSON","parse","localStorage","getItem","walletId","dealerId","senderEmailId","sProfile","uContactInfo","Email","getProfileAccounts","event","charCode","which","keyCode","params","ProfileId","sMasterId","LoginId","accountSubscription","GET_PROFILE_ACCOUNTS","subscribe","data","lstAccount","map","acc","Object","assign","sUserInfo","sAccountPlan","console","log","setTimeout","messageToDisplay","msq","Promise","resolve","reject","Dealer","sDealerId","getKycset","warn","KYCStatus","uKYCStatus","onErrorMsqDisplay","displayKYCPopup","autoCloseMsqBlock","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","then","result","value","redirect","formData","amount","selectedAccount","filter","MT4Account","account","sWalletId","getWalletInfo","uBalance","showError","uCommission","Amount","Comment","comment","uWalletId","DealerId","UuAccount","ManagerIndex","uManager","uSource","uTransType","walletTrans","oStatus","showSuccess","getUserWalletDetail","onCloseMsqBlock","fundTransactionForm","isBalanceAvaliable","resData","isKYCRequired","KYCResponse","isKYCApproved","approvalReponse","depositMt4Account","catch","err","error","unsubscribe","onSubmit","numberOnly","static","ToWalletComponent","global","http","deposit","paymentMethodAll","balanceError","kycSettingError","kycStatusError","withDrawSuccess","withDrawSuccessMsg","isModalShown","kycStatus","sDealerID","paySourceName","uPaySource","autoShownModal","hide","getManulGateway","res","element","file","files","reader","FileReader","readAsDataURL","onload","App","oData","post","uReceipt_Snap","resp","url","walletParans","localDealerwallet","uAmount","kycSettingParams","localDealerCode","kycset","makeManualDeposit","MSG_USER","Reference","hideModal","getPaymentGatewayManual","FundManagementCoreComponent","AccountToAccountComponent","orderPipe","srcAccountBalance","dstAccountBalance","headerSubscription","castLoggedUserDetail","getTransactionSettings","transactionSubscription","getSettings","transactionSettings","a2atransactionSettings","Acc_Auto_ITC","srcAcc","srcAccount","Balance","dstAcc","dstAccount","uComment","uDealerId","uSource_Account","uDest_Account","uManagerIndex","InternalTransfer","Status","showInfo","reset","toAccount","dstAccountValue","otherAccount","fromAccount","makeInternalTrans","toggleFormArea","AccountToWalletComponent","ledgersDetail","transactionTypeValue","IsDataNotFound","TotalCount","pageSize","order","reverse","getLedgerDetails","cat","length","transactionSettingW2A","Wallet_Auto_ITC","transactionSettingA2W","id","sLedgerId","uWalletID","claim","Result","indexval","countVal","p","setParams","WalletId","DealerID","Initial","MaxCount","ledgerDetailscription","getLedger","sLedger","Count","walletBalance","pendingBalance","uPending","lstLedger","transactionType","setOrder","FundTransferComponent","WalletToWalletComponent","getTransactionSetting","transactionSetting","transferAmount","uReceipt_Email","email","uSender_Email","uSender_WalletId","uReceipt_WalletId","RequestId","sStatus","uTimestamp","sCreadedOn","sUpdatedOn","sCreadedOn_Str","sUpdatedOn_Str","makeW2WTransfer","oRet","receiverEmailId","isEmailIdSame","emailIdreponse","BalanceResponse","makeWalletToWalletTransaction","FundWithdrawComponent","withdraw","withdrawForm","showWarning","makeManualWithdraw","LedgerDetailsComponent","subscription1","sortedData","transform","ledgerDetail","ledger","wallet","walletDetails","getWallet","routes","path","component","children","pathMatch","redirectTo","breadcrumb","FundManagementRoutingModule","forChild","imports","exports","FundManagementModule","forRoot","declarations","DepositWalletModalData","sTimestamp","sCreatedOn_Str","Date","sProcessedBy","uSourceInfo","uStatus","WithDrawModalData"],"mappings":"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","file":"client-core-fund-management-fund-management-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fund-deposit',\n  templateUrl: './fund-deposit.component.html',\n  styleUrls: ['./fund-deposit.component.scss']\n})\nexport class FundDepositComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"small-content-section bg-f\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card border-0 \">\r\n                <div class=\"card-body border-0 p-0\">\r\n                    <div class=\"tabs-container\">\r\n                        <ul class=\"tabs-heading d-flex flex-row border-bottom\">\r\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\r\n                                <a class=\"\" routerLink=\"/home/money/deposit-funds/deposit-to-wallet\">\r\n                                    <span class=\"material-icons\">account_balance_wallet</span>\r\n                                    <span class=\"tab-text\">Deposit To Wallet</span>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\r\n                                <a class=\"\" routerLink=\"/home/money/deposit-funds/deposit-to-account\">\r\n                                    <span class=\"material-icons\">museum</span>\r\n                                    <span class=\"tab-text\"> Deposit  To Account</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <div class=\"tabs-body p-2\">\r\n                            <router-outlet></router-outlet>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NotificationService } from './../../../../../../shared/services/notification.service';\n\n\nimport { HeaderService } from './../../../../../../shared/services/header.service';\nimport { resolve } from 'url';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../shared/services/global.service';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-to-account',\n  templateUrl: './to-account.component.html',\n  styleUrls: ['./to-account.component.scss']\n})\nexport class ToAccountComponent implements OnInit {\n  public isLoading = false;\n  public walletToWalletLedger = [];\n  public walletId: string;\n  public dealerId: string;\n  public isVisibleFormArea = false;\n  @ViewChild('formData', {static: false}) fundTransactionForm: NgForm;\n  LoggedParams: any;\n  accountSubscription: Subscription;\n  availableBalance: number;\n  senderEmailId: string;\n  messageToDisplay: string;\n  ErrorMsqBlock = false;\n  successMsqBlock = false;\n  liveAccountData: any[] = [];\n  selectedAccount: any;\n\n  // pagination Setting\n  searchText: any; // Search Text property is used to filter text in table\n\n  constructor(\n    private globalService: GlobalService,\n    private headerService: HeaderService,\n    private notificationService: NotificationService\n    ) {\n      this.LoggedParams = JSON.parse(localStorage.getItem('LoggedUser'));\n      this.walletId = localStorage.getItem('LoggedDealerwalletID');\n      this.dealerId = localStorage.getItem('LoggedDealerCode');\n      this.senderEmailId = this.LoggedParams.sProfile.uContactInfo.Email;\n    }\n  toggleFormArea() {\n    this.isVisibleFormArea = !this.isVisibleFormArea;\n  }\n\n  ngOnInit(): void {\n    this.getProfileAccounts();\n  }\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n\n  }\n  getProfileAccounts() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n      LoginId: this.LoggedParams.sProfile.sMasterId\n    };\n    this.accountSubscription = this.globalService.GET_PROFILE_ACCOUNTS(params).subscribe(\n      data => {\n        // this.liveAccountData = data.lstAccount.map( acc => {\n        //   if (acc) {\n        //     return acc.sUserInfo;\n        //   }\n        // });\n        this.liveAccountData = data.lstAccount.map( acc => {\n          if (acc) {\n            return Object.assign(acc.sUserInfo, acc.sAccountPlan);\n          }\n        });\n        console.log( this.liveAccountData);\n      }\n    );\n  }\n  autoCloseMsqBlock() {\n    setTimeout(() => {\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n  onCloseMsqBlock() {\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = false;\n    this.messageToDisplay = '';\n  }\n  onSuccessMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.ErrorMsqBlock = false;\n    this.successMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  onErrorMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n\n\n  // Check KYC is Required or not\n  isKYCRequired() {\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      const params = {\n        Dealer: this.LoggedParams.sProfile.sDealerId\n      };\n      // Call getKycset function to check KYC setting\n      this.globalService.getKycset(params).subscribe(data => {\n        console.warn('KYC Settings = ' + data);\n        if (data && data === 3) {\n          // console.warn('KYC Required');\n          resolve(true);\n         } else if (data && data === 1 || data === 2) {\n          // console.warn('KYC Not Required');\n          resolve(false);\n         } else if (data || data === 0) {\n          // console.warn('KYC Not Required');\n          resolve(false);\n        } else {\n          reject('KYC Settings Not Found .....');\n        }\n      });\n    });\n  }\n\n// IS KYC Approved If KYC required\nisKYCApproved() {\n  const params = {\n    KYCStatus: this.LoggedParams.sProfile.uKYCStatus,\n  };\n  // tslint:disable-next-line: no-shadowed-variable\n  return new Promise((resolve, reject) => {\n    if (params.KYCStatus) {\n      if (params.KYCStatus !== 2) {\n        // console.warn('Your KYC Is Not Approved');\n        this.onErrorMsqDisplay('KYC is required to make Transaction In Wallet to Wallet!');\n        // Swal.fire('Oops...', 'KYC is required to make Transaction In Wallet to Wallet!', 'error');\n        resolve(false);\n        this.displayKYCPopup();\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n      } else {\n        // console.warn('Your KYC IS approved');\n        resolve(true);\n      }\n    } else {\n      reject('KYC Status Not Found ....');\n    }\n  });\n}\n\n  displayKYCPopup() {\n    Swal.fire({\n      title: 'Please update KYC First!',\n      text: 'Your KYC is not Verified. You will not be able to make Transaction without KYC Approved!',\n      icon: 'error',\n      showCancelButton: false,\n      confirmButtonText: 'Show me the way',\n      cancelButtonText: 'No, keep it',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n          this.globalService.redirect('/home/documents/kyc-upload');\n      }\n    });\n  }\n     // Check Fund Balance on MT4Account before make a Transaction\n     isBalanceAvaliable(formData: any) {\n      // tslint:disable-next-line: no-shadowed-variable\n      return new Promise((resolve, reject) => {\n         console.log(formData.amount);\n         this.selectedAccount = this.liveAccountData.filter((acc) => {\n            if (acc.MT4Account === formData.account) {\n             return acc;\n            }\n          });\n         const params = {\n             sWalletId: this.walletId\n            };\n         this.globalService.getWalletInfo(params).subscribe(data => {\n              console.log(data);\n              if (data) {\n                console.warn('Avaliable Balance = ' + data.uBalance);\n                console.warn('Transfer Amount = ' + data.uBalance);\n                if (formData.amount <= data.uBalance) {\n                  resolve(true);\n                } else {\n                  // this.onErrorMsqDisplay('Please maintain Sufficient Balance in your Wallet before make a Transaction ');\n                  this.notificationService.showError('You have not sufficient Balance in your Wallet', 'Error');\n                  resolve(false);\n                  this.isLoading = false;\n                  this.autoCloseMsqBlock();\n                }\n              } else {\n                reject('Balance Not Found .....');\n              }\n            });\n        });\n    }\n\n    depositMt4Account(formData: any) {\n      // console.log('makeWalletTransfer function excuted');\n      console.log( this.LoggedParams.sProfile.sWalletId);\n      console.log( this.LoggedParams.sProfile.sDealerId);\n      const params = {\n        uCommission: 0,\n        Amount: formData.amount,\n        Comment: formData.comment,\n        uWalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerId: this.LoggedParams.sProfile.sDealerId,\n        UuAccount: formData.account,\n        ManagerIndex:  this.selectedAccount[0].uManager,\n        uSource: 0,\n        uTransType: 0,\n      };\n      this.globalService.walletTrans(params).subscribe(data => {\n        if (data.oStatus === true) {\n          //  this.onSuccessMsqDisplay(data.oStatus);\n              // tslint:disable-next-line: max-line-length\n           this.notificationService.showSuccess(`You have transferred ${formData.amount} dollar in your account ${formData.account} from wallet id ${this.LoggedParams.sProfile.sWalletId} successfully `, 'Success');\n           this.headerService.getUserWalletDetail();\n           this.isLoading = false;\n          //  this.fundTransactionForm.reset();\n           this.autoCloseMsqBlock();\n        } else {\n          // this.onErrorMsqDisplay('Failed To Make Transaction');\n          this.notificationService.showError('Failed To Make Transaction', 'Error');\n          this.isLoading = false;\n          this.autoCloseMsqBlock();\n        }\n      });\n     }\n    onSubmit() {\n      this.isLoading = true;\n      this.onCloseMsqBlock();\n    // Get Form Field Data on Submit\n      const formData = {\n        account: this.fundTransactionForm.value.account,\n        amount: this.fundTransactionForm.value.amount,\n        comment: this.fundTransactionForm.value.comment\n      };\n\n      if (0 >= this.fundTransactionForm.value.amount) {\n        // this.onErrorMsqDisplay(`${this.fundTransactionForm.value.amount} is not a Valid Number in Amount Field`);\n        this.notificationService.showError(`${this.fundTransactionForm.value.amount} is not a Valid Number in Amount Field`, 'Error');\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n        return;\n      }\n\n      this.isBalanceAvaliable(formData).then((resData) => {\n        if (resData) {\n          this.isKYCRequired().then((KYCResponse) => {\n            // console.warn('Is KYC Required = ' + KYCResponse);\n            if (KYCResponse) {\n              this.isKYCApproved().then((approvalReponse) => {\n                if (approvalReponse) {\n                  // console.log('w2w function excuted');\n                  this.depositMt4Account(formData);\n                }\n              }).catch((err) => {\n                console.error(err);\n                // this.onErrorMsqDisplay(err);\n                this.notificationService.showError('Failed To Make Transaction', 'Error');\n              });\n            } else {\n              this.depositMt4Account(formData);\n              // console.log('w2w function excuted');\n            }\n           }).catch((err) => {\n            console.error(err);\n            // this.onErrorMsqDisplay(err);\n            this.notificationService.showError('Failed To Make Transaction', 'Error');\n           });\n        }\n\n      }).catch((err) => {\n        console.error(err);\n        // this.onErrorMsqDisplay(err);\n        this.notificationService.showError('Failed To Make Transaction', 'Error');\n      });\n     }\n  // tslint:disable-next-line: use-lifecycle-interface\n  ngOnDestroy() {\n    this.accountSubscription.unsubscribe();\n  }\n}\n\n// import { Component, OnInit } from '@angular/core';\nimport { DepositAccountModalData } from '../../../../../../shared/models/deposit-account.modal';\n// import { GlobalService } from '../../../../../../shared/services/global.service';\n\n// @Component({\n//   selector: 'app-to-account',\n//   templateUrl: './to-account.component.html',\n//   styleUrls: ['./to-account.component.scss']\n// })\n// export class ToAccountComponent implements OnInit {\n// deposit = new DepositAccountModalData();\n// profileAccounts: any[] = [];\n// errorDeposit: string;\n// showError = false;\n// showSuccess = false;\n// balanceError = false;\n// kycSettingError = false;\n// kycStatus;\n\n//   constructor(private global: GlobalService) {\n//     this.kycStatus = JSON.parse(localStorage.getItem('LoggedUser'));\n//     this.deposit.uWalletId = this.global.localDealerwallet;\n//     this.deposit.DealerId = this.global.localDealerCode;\n//     this.deposit.ManagerIndex = 104;\n\n//   }\n\n//   profileAccount() {\n//     const data = {\n//       ProfileId: localStorage.getItem('LoggedDealermasterid'),\n//       LoginId:  localStorage.getItem('LoggedDealermasterid')\n//     };\n\n//     this.global.getProfileAccounts(data).subscribe((res: any) => {\n\n//       this.profileAccounts = res.lstAccount.map(data => {\n//         if (data) {\n\n//           return data.sUserInfo;\n//         }\n//       });\n\n//     });\n//   }\n\n//   getMnagerIndex(){\n//     const data = {\n//       ProfileId: localStorage.getItem('LoggedDealermasterid'),\n//       LoginId:  localStorage.getItem('LoggedDealermasterid')\n//     };\n\n//     this.global.getProfileAccounts(data).subscribe((res: any) => {\n//       this.profileAccounts = res.lstAccount.filter( (account: any) => {\n\n//           return Object.assign(account.sAccountPlan, account.sUserInfo);\n\n//       });\n//       console.log(this.profileAccounts);\n//     }, err => {\n//       console.log(err);\n//     });\n\n//   }\n\n//   onChangeGetAccount(acc){\n//     this.profileAccounts.find(manager => {\n//       if (manager.sUserInfo.MT4Account == acc) {\n//         this.deposit.ManagerIndex = manager.sAccountPlan.uManager;\n//       }\n//     });\n//   }\n\n//   depositeAccount() {\n\n//   const walletParans = {\n//       sWalletId: this.global.localDealerwallet\n//     };\n\n//   this.global.getWalletInfo(walletParans).subscribe((resp: any) => {\n//       if (resp.uBalance > this.deposit.Amount) {\n//         const kycSettingParams = {\n//           Dealer: this.global.localDealerCode\n//         };\n//         this.global.getKycset(kycSettingParams).subscribe((kycset: any) => {\n//           if (kycset == 2 && this.kycStatus.sProfile.uKYCStatus !== 2) {\n//             this.balanceError = false;\n//             this.kycSettingError = true;\n//             setTimeout(() => {\n//               this.kycSettingError = false;\n//             }, 10000);\n//           } else {\n//             this.global.walletTrans(this.deposit).subscribe((res: any) => {\n\n//               if(res.oStatus == false) {\n//                 this.kycSettingError = false;\n//                 this.balanceError = false;\n//                 this.showError = true;\n//                 setTimeout(() => { this.showError = false; }, 10000);\n//               } else {\n//                 this.kycSettingError = false;\n//                 this.balanceError = false;\n//                 this.showSuccess = true;\n//                 setTimeout(() => { this.showSuccess = false; }, 10000);\n//               }\n//          },\n//          err => {\n//            console.log(err);\n//          });\n//           }\n//         });\n//       } else {\n//         this.showError = false;\n//         this.showSuccess = false;\n//         this.kycSettingError = false;\n//         this.balanceError = true;\n//         setTimeout(() => {\n//           this.balanceError = false;\n//         }, 10000);\n//       }\n//     });\n//   }\n\n//     ngOnInit(): void {\n//       this.getMnagerIndex();\n//       this.profileAccount();\n\n// }\n\n\n\n// }\n\n","<div class=\"transaction-form-container\">\n    <!-- <div class=\"transaction-form-container\"> -->\n    <div class=\"traction-from-box bg-b\">\n        <div class=\"heading\">\n            <div class=\"title text-size-15\">Deposit In Account</div>\n            <small>All fields are required to make deposit in Account</small>\n        </div>\n        <!-- Success Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n                    <strong>Success -: </strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n                    <strong>Oops... : </strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <form class=\"\" (ngSubmit)=\"onSubmit()\" #formData=\"ngForm\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"\" for=\"account\">Account Number</label>\n                        <span class=\"asterick\">*</span>\n                        <select required ngModel #account=\"ngModel\" name=\"account\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"account\">\n                            <option class=\"text-size-13\" value=\"\" [disabled]=\"true\" >Select Account Number</option>\n                            <option class=\"text-size-13\" *ngFor=\"let acc of liveAccountData\" name=\"accounts\" [ngValue]=\"acc.MT4Account\">{{acc.MT4Account}}</option>\n                        </select>\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!account.valid && account.touched  \">Please Enter a valid Account Number</span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"main-txt-color\" for=\"amount\">Amount</label>\n                        <span class=\"asterick\">*</span>\n                        <input (keypress)=\"numberOnly($event)\" min=\"1\" required ngModel #amount=\"ngModel\" name=\"amount\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"amount\" placeholder=\"Enter Amount\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!amount.valid && amount.touched  \">Please Enter a valid Amount</span>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-8\">\n                    <div class=\"form-group\">\n                        <label class=\"main-txt-color\" for=\"comment\">Comment</label>\n                        <span class=\"asterick\">*</span>\n                        <input required ngModel #comment=\"ngModel\" name=\"comment\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"comment\" placeholder=\"Enter Comment\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!comment.valid && comment.touched  \">Please enter a comment</span>\n                    </div>\n                </div>\n                <div class=\"col-md-2\">\n                    <div class=\"position-relative\" style=\"padding-top:29px;\">\n                        <button [disabled]=\"(!formData.valid || isLoading )\" class=\"btn btn-primary btn-sm px-3 position-relative\">\n                            <span [class.btn-spinner]=\"isLoading\"></span> Submit </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n<!-- <div class=\"transaction-form-container\">\n    <div class=\"traction-from-box bg-b\">\n        <div class=\"heading\">\n            <div class=\"title\">Deposit In Account</div>\n            <small>All field are required to make Transaction in  Wallet to Wallet</small>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <alert type=\"danger\" *ngIf=\"balanceError\">\n                            <strong>Warning ! </strong> you do not have sufficient balance for this transaction\n                        </alert>\n                        <alert type=\"danger\" *ngIf=\"kycSettingError\">\n                            <strong>Warning ! </strong>\n                            <h4>Please update KYC's First</h4>\n                            After KYC Verification You will be Able to Login With All Functionalities\n                        </alert>\n                        <alert type=\"danger\" *ngIf=\"showError\">\n                            <strong>Warning! </strong> Failed to make depoist\n                        </alert>\n                        <alert type=\"success\" *ngIf=\"showSuccess\">\n                            <strong>Success !</strong> Deposit request process successfully\n                        </alert>\n                    </div>\n                </div>\n                <form #depositAccount=\"ngForm\" (ngSubmit)=\"depositeAccount()\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"account\">Account</label> <span class=\"asterick\">*</span>\n                                <select required [(ngModel)]=\"deposit.UuAccount\" #acount=\"ngModel\" name=\"UuAccount\" class=\"form-control\" (change)=\"onChangeGetAccount($event.target.value)\">\n                                    <option class=\"text-size-13\" value=\"\" disabled=\"true\">Select account</option>\n                                     <option class=\"text-size-13\" *ngFor=\"let account of profileAccounts\" [ngValue]=\"account.MT4Account\">{{account.MT4Account}}</option>\n                                </select>\n                                <span class=\"help-block text-danger \" *ngIf=\"!acount.valid && acount.touched  \">Please Select an Account Number</span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"pwd\">Amount</label> <span class=\"asterick\">*</span>\n                                <input required #amount type=\"number\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter Amount\" [(ngModel)]=\"deposit.Amount\" name=\"Amount\">\n                                <span class=\"help-block text-danger \" *ngIf=\"!amount.valid && amount.touched  \">Please Enter a valid Account Number</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-5\">\n                            <div class=\"form-group\">\n                                <label for=\"pwd\">Comment</label> <span class=\"asterick\">*</span>\n                                <input required #comment type=\"text\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter Comment\" [(ngModel)]=\"deposit.Comment\" name=\"Comment\">\n                                <span class=\"help-block text-danger \" *ngIf=\"!comment.valid && comment.touched  \">Please enter an comment</span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-1\">\n                            <div class=\"position-relative\" style=\"padding-top: 25px;\">\n                                <button type=\"submit\" [disabled]=\"depositAccount.invalid\" class=\"btn btn-primary btn-sm px-4 py-2 position-relative\">Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div> -->","import { NotificationService } from './../../../../../../shared/services/notification.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { DepositWalletModalData } from '../../../../../../shared/models/deposit-wallet.modal';\nimport { GlobalService } from '../../../../../../shared/services/global.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-to-wallet',\n  templateUrl: './to-wallet.component.html',\n  styleUrls: ['./to-wallet.component.scss']\n})\nexport class ToWalletComponent implements OnInit {\n  // sender\n  deposit = new DepositWalletModalData();\n  dealerId;\n  walletId;\n  paymentMethodAll: any[] = [];\n  depositError: string;\n  kycStatus;\n\n  balanceError = false;\n  kycSettingError = false;\n  kycStatusError = false;\n  withDrawSuccess = '';\n  withDrawSuccessMsg = false;\n\n  constructor(\n    private global: GlobalService,\n    private http: HttpClient,\n    private notificationService: NotificationService,\n    ) {\n    this.kycStatus = JSON.parse(localStorage.getItem('LoggedUser'));\n    this.deposit.sDealerID = localStorage.getItem('LoggedDealerCode');\n    this.deposit.sWalletId = localStorage.getItem('LoggedDealerwalletID');\n  }\n  @ViewChild('autoShownModal', { static: false }) autoShownModal: ModalDirective;\n  isModalShown = false;\n  showModal(paySourceName, uPaySource): void {\n    this.isModalShown = true;\n  }\n  hideModal(): void {\n    this.autoShownModal.hide();\n  }\n  // makeManualDeposit GET_PAYMENT_GATEWAY_MANUAL_ALL\n  onHidden(): void {\n    this.isModalShown = false;\n  }\ngetPaymentGatewayManual() {\n  const data = {\n    DealerId: this.deposit.sDealerID\n  };\n  this.global.getManulGateway(data).subscribe((res: any) => {\n  this.paymentMethodAll = res;\n  }, err => {\n    console.log(err);\n  });\n}\n  encodeImageFileAsURL(element: HTMLInputElement) {\n    console.log(element);\n    // tslint:disable-next-line: no-var-keyword\n    var file = element.files[0];\n    // tslint:disable-next-line: no-var-keyword\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      console.log('RESULT', reader.result);\n      const data = {\n        App: 'uploadReceit',\n        oData: reader.result\n      };\n    // tslint:disable-next-line: max-line-length\n      this.http.post('http://client.traderscabinet.com/tr_test/assets/PHP/alfa/v1/common/UploadDipositPaymentReceipt', data).subscribe((res: any) => {\n        this.deposit.uReceipt_Snap = res.resp.url;\n        console.log(this.deposit.uReceipt_Snap);\n      });\n    };\n  }\n  makeDeposit() {\n    const walletParans = {\n      sWalletId: this.global.localDealerwallet\n    };\n    if (this.deposit.uAmount === 0){\n      this.notificationService.showError('Please enter a valid amount', 'Error');\n      return false;\n    \n    }\n    // this.global.getWalletInfo(walletParans).subscribe((resp: any) => {\n    //   if (resp.uBalance > this.deposit.uAmount) {\n        const kycSettingParams = {\n          Dealer: this.global.localDealerCode\n        };\n        this.global.getKycset(kycSettingParams).subscribe((kycset: any) => {\n          // tslint:disable-next-line: triple-equals\n          if (kycset == 2 && this.kycStatus.sProfile.uKYCStatus !== 2) {\n            // this.balanceError = false;\n            // this.kycSettingError = true;\n            this.notificationService.showError('KYC is required to deposit amount in Wallet!', 'Error');\n            // setTimeout(() => {\n            //   this.kycSettingError = false;\n            // }, 10000);\n          } else {\n            this.global.makeManualDeposit(this.deposit).subscribe((res: any) => {\n              console.log(res);\n              this.withDrawSuccess = `${res.MSG_USER} with Reference Id: ${res.Reference}`;\n              // this.withDrawSuccessMsg = true;\n              // tslint:disable-next-line: max-line-length\n              this.notificationService.showSuccess(`Your manual request has been generated successfully with Reference Id: ${res.Reference}. Please wait for admin approval`, 'Success');\n              // setTimeout(() => {\n              //   this.withDrawSuccessMsg = false;\n              // }, 10000);\n              setTimeout(() => {\n                this.hideModal();\n              }, 10000);\n\n            }, err => {\n              console.log(err);\n              // this.kycSettingError = false;\n              // this.balanceError = true;\n              // setTimeout(() => {\n              //   this.balanceError = false;\n              // }, 10000);\n              // this.notificationService.showError('you do not have sufficient balance for this transaction', 'Error');\n            });\n          }\n        });\n      // } else {\n      //   // this.kycSettingError = false;\n      //   // this.balanceError = true;\n      //   this.notificationService.showError('you do not have sufficient balance for this transaction', 'Error');\n      //   // setTimeout(() => {\n      //   //   this.balanceError = false;\n      //   // }, 10000);\n      // }\n    // });\n  }\n  ngOnInit(): void {\n    this.getPaymentGatewayManual();\n  }\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n\n  }\n\n}\n","<div *ngIf=\"isModalShown\" [config]=\"{ show: true }\" (onHidden)=\"onHidden()\" bsModal #autoShownModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-auto-name\">\n    <div class=\"modal-dialog modal-sm\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4 id=\"dialog-auto-name\" class=\"modal-title pull-left\"> Deposit To wallet </h4>\n                <small class=\"text-size-13\">Already Made a Payment, Please Attach the Payment Info & Receipt</small>\n                <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"hideModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n            </div>\n            <div class=\"modal-body\">\n                <alert type=\"danger\" *ngIf=\"balanceError\">\n                    <strong></strong> you do not have sufficient balance for this transaction\n                </alert>\n                <alert type=\"danger\" *ngIf=\"kycSettingError\">\n                    <strong></strong> KYC is required to deposit amount in Wallet!\n                </alert>\n                <alert type=\"success\" *ngIf=\"withDrawSuccessMsg\">\n                    <strong></strong> {{withDrawSuccess}}\n                </alert>\n                <form #depositWallet=\"ngForm\">\n                    <div class=\"form-group\">\n                        <label for=\"pwd\">Amount</label>\n                        <input (keypress)=\"numberOnly($event)\" min=\"1\" type=\"text\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter Amount\" [(ngModel)]=\"deposit.uAmount\" name=\"uAmount\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"pwd\">Upload Receipt</label>\n                        <input style=\"padding: 4px;\" type=\"file\" class=\"form-control\" (change)=\"encodeImageFileAsURL(file)\" #file id=\"pwd\" placeholder=\"Enter password\" [(ngModel)]=\"deposit.uReceipt_Snap\" name=\"uReceipt_Snap\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"pwd\">Comment</label>\n                        <textarea class=\"form-control\" style=\"height: 100px; width: 100%;resize: vertical;\" [(ngModel)]=\"deposit.uComment\" name=\"uComment\" required></textarea>\n                    </div>\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" [disabled]=\"depositWallet.invalid\" class=\"btn btn-primary btn-sm ml-1\" (click)=\"makeDeposit()\">Submit</button>\n            </div>\n\n        </div>\n    </div>\n</div>\n<div class=\"tab-inner-content\">\n    <div class=\"table-container table-responsive  mb-3\">\n        <table class=\"table table-hover main-txt-color mb-0 border border-0\">\n            <thead class=\"table-header-bg table-header-color\">\n                <tr>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Transfer Method</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Fee/Commission</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Processing Time</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Deposit</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Ledger</th>\n                </tr>\n            </thead>\n            <tbody class=\"secondary-txt-color\">\n                <tr *ngFor=\"let payment of paymentMethodAll\">\n                    <td class=\"gateway_img\">\n                        <img *ngIf=\"payment.PaySource_Name === 'NETELLER'\" src=\"assets//images/payment_gateway/neteller.png\" alt=\"\">\n                        <span *ngIf=\"payment.PaySource_Name !== 'NETELLER'\">{{payment.PaySource_Name}}</span>\n                    </td>\n                    <td>No Commission</td>\n                    <td>Instant</td>\n                    <td class=\"text-center\"><button class=\"btn btn-primary btn-sm ml-1 px-3\" (click)=\"showModal(payment.PaySource_Name,payment.uPaySource)\">Deposit</button></td>\n                    <td class=\"text-center\"><button class=\"btn btn-primary btn-sm ml-1 px-3\" routerLink=\"/home/money/ledger-overview\">Ledger</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fund-management-core',\n  templateUrl: './fund-management-core.component.html',\n  styleUrls: ['./fund-management-core.component.scss']\n})\nexport class FundManagementCoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NotificationService } from './../../../../../../shared/services/notification.service';\nimport { HeaderService } from './../../../../../../shared/services/header.service';\nimport { resolve } from 'url';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../shared/services/global.service';\nimport { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-account-to-account',\n  templateUrl: './account-to-account.component.html',\n  styleUrls: ['./account-to-account.component.scss']\n})\nexport class AccountToAccountComponent implements OnInit, OnDestroy, AfterViewInit {\n\n\n  public isLoading = false;\n  public a2atransactionSettings: number;\n  public walletToWalletLedger = [];\n  public walletId: string;\n  public dealerId: string;\n  public isVisibleFormArea = false;\n  public LoggedParams: any;\n  public accountSubscription: Subscription;\n  public transactionSubscription: Subscription;\n  public headerSubscription: Subscription;\n  public availableBalance: number;\n  public senderEmailId: string;\n  public messageToDisplay: string;\n  public ErrorMsqBlock = false;\n  public successMsqBlock = false;\n  public liveAccountData: any[] = [];\n  public selectedAccount: any;\n  public transactionSettings: any;\n  dstAccountValue: number;\n  srcAccountBalance = 0.00;\n  dstAccountBalance = 0.00;\n  searchText: any;\n  @ViewChild('formData', {static: false}) fundTransactionForm: NgForm;\n\n  constructor(\n    private globalService: GlobalService,\n    private headerService: HeaderService,\n    private orderPipe: OrderPipe,\n    private notificationService: NotificationService\n    ) {\n      this.headerSubscription = this.headerService.castLoggedUserDetail.subscribe(\n        resData => (this.LoggedParams = resData)\n      );\n      this.walletId = this.LoggedParams.sProfile.sWalletId;\n      this.dealerId = this.LoggedParams.sProfile.sDealerId;\n      this.senderEmailId = this.LoggedParams.sProfile.uContactInfo.Email;\n      this. getTransactionSettings();\n    }\n  toggleFormArea() {\n    this.isVisibleFormArea = !this.isVisibleFormArea;\n  }\n  ngOnInit(): void {\n    this.getProfileAccounts();\n  }\n  ngAfterViewInit() {}\n  // Get All Transaction Settings\n  getTransactionSettings() {\n    const params = {\n      DealerId:  this.LoggedParams.sProfile.sDealerId\n    };\n    this.transactionSubscription = this.globalService.getSettings(params).subscribe(data => {\n      this.transactionSettings = data[0];\n      this.a2atransactionSettings = data[0].Acc_Auto_ITC;\n    });\n  }\n  getProfileAccounts() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n      LoginId: this.LoggedParams.sProfile.sMasterId\n    };\n    this.accountSubscription = this.globalService.GET_PROFILE_ACCOUNTS(params).subscribe(\n      data => {\n        this.liveAccountData = data.lstAccount.map( acc => {\n          if (acc) {\n            return Object.assign(acc.sUserInfo, acc.sAccountPlan);\n          }\n        });\n        console.log( this.liveAccountData);\n      }\n    );\n  }\n\n    autoCloseMsqBlock() {\n      setTimeout(() => {\n        this.successMsqBlock = false;\n        this.ErrorMsqBlock = false;\n        this.messageToDisplay = '';\n      }, 10000);\n    }\n    onCloseMsqBlock() {\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = false;\n      this.messageToDisplay = '';\n    }\n    onSuccessMsqDisplay(msq: string) {\n      this.messageToDisplay = '';\n      this.ErrorMsqBlock = false;\n      this.successMsqBlock = true;\n      this.messageToDisplay = msq;\n    }\n    onErrorMsqDisplay(msq: string) {\n      this.messageToDisplay = '';\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = true;\n      this.messageToDisplay = msq;\n   }\n    // Check Sender Account Balance on select Account Number\n    onSrcAccountBalchange(srcAcc: number) {\n      const srcAccount = this.liveAccountData.filter((acc) => {\n        if (acc.MT4Account === srcAcc) {\n         return acc;\n        }\n      });\n      this.srcAccountBalance = srcAccount[0].Balance;\n    }\n    // Check Receiver Account Balance on select Account Number\n    onDstAccountBalchange(dstAcc: number) {\n      if (dstAcc == 1) {\n        return false;\n      } else {\n        const dstAccount = this.liveAccountData.filter((acc) => {\n          if (acc.MT4Account === dstAcc) {\n           return acc;\n          }\n        });\n        this.dstAccountBalance = dstAccount[0].Balance;\n      }\n    }\n     // Check Fund Balance on MT4Account before make a Transaction\n     isBalanceAvaliable(formData: any) {\n        // tslint:disable-next-line: no-shadowed-variable\n        return new Promise((resolve, reject) => {\n          console.log(formData.srcAccount);\n          this.selectedAccount = this.liveAccountData.filter((acc) => {\n            if (acc.MT4Account === formData.srcAccount) {\n             return acc;\n            }\n          });\n          console.log(this.selectedAccount);\n          if (formData.amount <= this.selectedAccount[0].Balance) {\n              resolve(true);\n          } else {\n            // tslint:disable-next-line: max-line-length\n            // this.onErrorMsqDisplay(`Please maintain Sufficient Balance in your MT4Account ${formData.account} Account before make a Transaction`);\n            this.notificationService.showError('You have not sufficient Balance in your Account', 'Error');\n            resolve(false);\n            this.isLoading = false;\n            // this.autoCloseMsqBlock();\n          }\n        });\n      }\n        // Check KYC is Required or not\n  isKYCRequired() {\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      const params = {\n        Dealer: this.LoggedParams.sProfile.sDealerId\n      };\n      // Call getKycset function to check KYC setting\n      this.globalService.getKycset(params).subscribe(data => {\n        // console.warn('KYC Settings = ' + data);\n        if (data && data === 3) {\n          // console.warn('KYC Required');\n          resolve(true);\n         } else if (data && data === 1 || data === 2) {\n          // console.warn('KYC Not Required');\n          resolve(false);\n         } else if (data || data === 0) {\n          // console.warn('KYC Not Required');\n          resolve(false);\n        } else {\n          reject('KYC Settings Not Found .....');\n        }\n      });\n    });\n  }\n    // IS KYC Approved If KYC required\n    isKYCApproved() {\n      const params = {\n        KYCStatus: this.LoggedParams.sProfile.uKYCStatus,\n      };\n      // tslint:disable-next-line: no-shadowed-variable\n      return new Promise((resolve, reject) => {\n        if (params.KYCStatus) {\n          if (params.KYCStatus !== 2) {\n            // console.warn('Your KYC Is Not Approved');\n            this.onErrorMsqDisplay('KYC is required to make Transaction In Account to Account!');\n            // Swal.fire('Oops...', 'KYC is required to make Transaction In Wallet to Wallet!', 'error');\n            resolve(false);\n            this.displayKYCPopup();\n            this.isLoading = false;\n            this.autoCloseMsqBlock();\n          } else {\n            // console.warn('Your KYC IS approved');\n            resolve(true);\n          }\n        } else {\n          reject('KYC Status Not Found ....');\n        }\n      });\n    }\n    displayKYCPopup() {\n      Swal.fire({\n        title: 'Please update KYC First!',\n        text: 'Your KYC is not Verified. You will not be able to make Transaction without KYC Approved!',\n        icon: 'error',\n        showCancelButton: false,\n        confirmButtonText: 'Show me the way',\n        cancelButtonText: 'No, keep it',\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n      }).then((result) => {\n        if (result.value) {\n            this.globalService.redirect('/home/documents/kyc-upload');\n        }\n      });\n    }\n\n    makeInternalTrans(formData: any) {\n      const params = {\n        uCommission: 0,\n        uAmount: formData.amount,\n        uComment: formData.comment,\n        uDealerId: this.LoggedParams.sProfile.sDealerId,\n        uSource_Account: formData.srcAccount,\n        uDest_Account: formData.dstAccount,\n        uManagerIndex: this.liveAccountData[0].uManager\n      };\n      this.globalService.InternalTransfer(params).subscribe(data => {\n        if (data.Status === true) {\n          // this.onSuccessMsqDisplay(data.MSG_USER);\n          if (this.a2atransactionSettings === 0) {\n            this.notificationService.showInfo('Your Request has been generated, Now Request is pending for Approval', 'Information');\n           } else {\n            // tslint:disable-next-line: max-line-length\n            this.notificationService.showSuccess(`You have Successfully transferred ${formData.amount} dollor from ${formData.srcAccount} Account to ${formData.dstAccount} Account`, 'Success');\n           }\n          this.getProfileAccounts();\n          // this.onSrcAccountBalchange(formData.srcAccount);\n          // this.onDstAccountBalchange(formData.dstAccount);\n          this.srcAccountBalance = 0.00;\n          this.dstAccountBalance = 0.00;\n          setTimeout(() => {\n            this.fundTransactionForm.reset();\n            this.isLoading = false;\n           }, 1000);\n          // this.fundTransactionForm.reset();\n          // this.fundTransactionForm.form.value.amount = '';\n          // this.fundTransactionForm.value.comment = ' ';\n          this.autoCloseMsqBlock();\n       } else {\n        //  this.onErrorMsqDisplay(data.MSG_USER);\n        this.notificationService.showError('Failed To Make Transaction', 'Error');\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n       }\n      });\n    }\n\n    onSubmit() {\n      this.isLoading = true;\n      this.onCloseMsqBlock();\n      // Get Form Field Data on Submit\n      if (this.fundTransactionForm.value.toAccount == 1) {\n         this.dstAccountValue = this.fundTransactionForm.value.otherAccount;\n        } else {\n          this.dstAccountValue = this.fundTransactionForm.value.toAccount;\n      }\n      const formData = {\n        srcAccount: this.fundTransactionForm.value.fromAccount,\n        dstAccount:  this.dstAccountValue,\n        amount: this.fundTransactionForm.value.amount,\n        comment: this.fundTransactionForm.value.comment\n      };\n\n      if (0 >= this.fundTransactionForm.value.amount) {\n        // this.onErrorMsqDisplay(`${this.fundTransactionForm.value.amount} is not a Valid Number in Amount Field`);\n        this.notificationService.showError(`${formData.amount} is not a Valid Number in Amount Field`, 'Error');\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n        return;\n      }\n      if (formData.srcAccount === formData.dstAccount) {\n        // this.onErrorMsqDisplay('Sender and receiver account cound not be same.!');\n        this.notificationService.showError('Sender and receiver account cound not be same.!', 'Error');\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n        return;\n      }\n\n      this.isBalanceAvaliable(formData).then((resData) => {\n          if (resData) {\n            this.isKYCRequired().then((KYCResponse) => {\n              if (KYCResponse) {\n                this.isKYCApproved().then((approvalReponse) => {\n                  if (approvalReponse) {\n                    console.log('w2w function excuted');\n                    // this.depositMt4Account(formData);\n                    this.makeInternalTrans(formData);\n                  }\n                }).catch((err) => {\n                  console.error(err);\n                  // this.onErrorMsqDisplay(err);\n                  this.notificationService.showError('Failed To Make Transaction', 'Error');\n                });\n              } else {\n                this.makeInternalTrans(formData);\n                // console.log('w2w function excuted');\n              }\n             }).catch((err) => {\n              console.error(err);\n              // this.onErrorMsqDisplay(err);\n              this.notificationService.showError('Failed To Make Transaction', 'Error');\n             });\n          }\n\n      }).catch((err) => {\n        console.error(err);\n        // this.onErrorMsqDisplay(err);\n        this.notificationService.showError('Failed To Make Transaction', 'Error');\n      });\n     }\n    numberOnly(event): boolean {\n      const charCode = (event.which) ? event.which : event.keyCode;\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n        return false;\n      }\n      return true;\n    }\n  ngOnDestroy() {\n    this.accountSubscription.unsubscribe();\n    this.transactionSubscription.unsubscribe();\n    this.headerSubscription.unsubscribe();\n  }\n}\n","<div class=\"right-tabBtn-row d-none d-sm-block d-md-block d-lg-block\">\n    <button class=\"btn btn-warning btn-sm font-weight-400 text-size-13\" (click)=\"toggleFormArea()\">\n        <i-feather class=\"icon-size-18\" name=\"dollar-sign\"></i-feather>Make a Transaction\n    </button>\n</div>\n<div *ngIf=\"isVisibleFormArea\" class=\"transaction-form-container\">\n    <!-- <div class=\"transaction-form-container\"> -->\n    <div class=\"traction-from-box bg-b\">\n        <div class=\"heading\">\n            <div class=\"title\">Transfer in Account to Account</div>\n            <small>All fields are required to transfer from Account to Account</small>\n        </div>\n        <!-- Success Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n                    <strong>Success -: </strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n                    <strong></strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <form class=\"\" (ngSubmit)=\"onSubmit()\" #formData=\"ngForm\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"\" for=\"fromAccount\">From Account</label>\n                        <span class=\"asterick\"> * </span>\n                        <strong> (Balance : ${{srcAccountBalance}})</strong>\n                        <select (change)=\"onSrcAccountBalchange(fromAccount.value)\" required ngModel #fromAccount=\"ngModel\" name=\"fromAccount\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"fromAccount\">\n                            <option class=\"text-size-13\" value=\"\" selected [disabled]=\"true\">Select Account Number</option>\n                            <option class=\"text-size-13\" *ngFor=\"let acc of liveAccountData\" name=\"accounts\" [ngValue]=\"acc.MT4Account\">{{acc.MT4Account}}</option>\n                        </select>\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!fromAccount.valid && fromAccount.touched  \">Please select an Account Number</span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"\" for=\"toAccount\">To Account </label>\n                        <span class=\"asterick\"> * </span>\n                        <strong> (Balance : ${{dstAccountBalance}})</strong>\n                        <select (change)=\"onDstAccountBalchange(toAccount.value)\" required ngModel #toAccount=\"ngModel\" name=\"toAccount\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"toAccount\">\n                            <option class=\"text-size-13\" value=\"\" selected [disabled]=\"true\">Select Account Number</option>\n                            <option class=\"text-size-13\" value=\"1\" *ngIf=\"transactionSettings.Acc_ITC_Others === 1\">Other Account</option>\n                            <option class=\"text-size-13\" *ngFor=\"let acc of liveAccountData\" name=\"accounts\" [ngValue]=\"acc.MT4Account\">{{acc.MT4Account}}</option>\n                        </select>\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!toAccount.valid && toAccount.touched  \">Please select an Account Number</span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\" *ngIf=\"toAccount.value == 1\">\n                    <div class=\"form-group\">\n                        <label class=\"main-txt-color\" for=\"otherAccount\">Other Account</label>\n                        <span class=\"asterick\">*</span>\n                        <input (keypress)=\"numberOnly($event)\" pattern=\"^-?(0|[1-9]\\d*)?$\" required ngModel #otherAccount=\"ngModel\" name=\"otherAccount\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"otherAccount\" placeholder=\"Enter Account Number\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!otherAccount.valid && otherAccount.touched  \">Please Enter a valid Account Number</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"main-txt-color\" for=\"amount\">Amount</label>\n                        <span class=\"asterick\">*</span>\n                        <input min=\"1\" pattern=\"^-?(0|[1-9]\\d*)?$\" required ngModel #amount=\"ngModel\" name=\"amount\" type=\"number\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"amount\" placeholder=\"Enter Amount\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!amount.valid && amount.touched  \">Please Enter a valid Number</span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"main-txt-color\" for=\"comment\">Comment</label>\n                        <span class=\"asterick\">*</span>\n                        <input required ngModel #comment=\"ngModel\" name=\"comment\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"comment\" placeholder=\"Enter comment\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!comment.valid && comment.touched  \">Please enter a comment</span>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"position-relative\" style=\"padding-top:29px;\">\n                        <button [disabled]=\"(!formData.valid || isLoading )\" class=\"btn btn-primary btn-sm px-3 position-relative\">\n                            <span [class.btn-spinner]=\"isLoading\"></span> Transfer Fund</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n<div class=\"tab-inner-content px-2\">\n    <div class=\"history-title\">Your Transaction History\n        <!-- <small class=\"d-block text-size-12\">Historical data of your transactions</small> -->\n    </div>\n    <div class=\"table-filter-area\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-md-4 form-inline d-none d-md-block\">\n                <div class=\"form-group mb-2\">\n                    <label for=\"entries\" class=\" main-txt-color mr-1\">Show </label>\n                    <select class=\"form-control main-txt-color bd-color shadow-none\" id=\"entries\">\n                        <option>5</option>\n                        <option>10</option>\n                        <option>15</option>\n                        <option>20</option>\n                        <option>25</option>\n                        <option>50</option>\n                    </select>\n                    <label for=\"entries\" class=\" main-txt-color ml-1\"> Entries</label>\n                </div>\n            </div>\n            <div class=\"col-md-3 offset-md-5\">\n                <div class=\"form-group\">\n                    <!-- <label class=\"main-txt-color\" for=\"searchtext\">Search By Value</label> -->\n                    <input [(ngModel)]=\"searchText\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"searchText\" placeholder=\"Enter Keyword to search\" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"table-container table-responsive  table-responsive table-responsive-sm  mb-3\">\n        <table class=\"table table-hover main-txt-color mb-0 border-0\">\n            <thead class=\"table-header-bg table-header-color\">\n                <tr>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">S.No.</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Sender Account</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Recipient Account</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Fee/Commission</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Processing Time</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Amount</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Transfer Date</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Transfer Time</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Status</th>\n                </tr>\n            </thead>\n            <tbody class=\"secondary-txt-color\">\n\n            </tbody>\n        </table>\n        <div class=\"text-size-17 font-weight-300 text-center p-4\" style=\"background: #eff3f6;\">There is no account to account transfer from your Profile</div>\n    </div>\n</div>","import { NotificationService } from './../../../../../../shared/services/notification.service';\nimport { HeaderService } from './../../../../../../shared/services/header.service';\nimport { resolve } from 'url';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../shared/services/global.service';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-account-to-wallet',\n  templateUrl: './account-to-wallet.component.html',\n  styleUrls: ['./account-to-wallet.component.scss']\n})\nexport class AccountToWalletComponent implements OnInit, OnDestroy {\n\n  public isLoading = false;\n  public transactionSettingW2A: number;\n  public transactionSettingA2W: number;\n  public ledgersDetail = [];\n  public walletId: string;\n  public dealerId: string;\n  public isVisibleFormArea = false;\n  @ViewChild('formData', {static: false}) fundTransactionForm: NgForm;\n  public LoggedParams: any;\n  public accountSubscription: Subscription;\n  public ledgerDetailscription: Subscription;\n  public headerSubscription: Subscription;\n  public transactionSubscription: Subscription;\n  public walletBalance: any;\n  public pendingBalance: any;\n  public availableBalance: number;\n  public senderEmailId: string;\n  public messageToDisplay: string;\n  public ErrorMsqBlock = false;\n  public successMsqBlock = false;\n  public liveAccountData: any[] = [];\n  public selectedAccount: any;\n  public transactionTypeValue = 'Please Select Transaction Type';\n  public IsDataNotFound = false;\n    // pagination Setting\n  public TotalCount = 0;\n  public cat;\n  public searchText: any; // Search Text property is used to filter text in table\n  public p: any;          // Current page in pagination\n  public pageSize = 5;  // Table Rows Perpage property\n  public sortedData: any[]; // Sorted Product list array\n  public order = '';     // Order property to sort coloum of table\n  public reverse = true; // Reverse property is used to sort table coloum\n  public setParams: any;\n  constructor(\n    private globalService: GlobalService,\n    private headerService: HeaderService,\n    private orderPipe: OrderPipe,\n    private notificationService: NotificationService\n    ) {\n      this.headerSubscription = this.headerService.castLoggedUserDetail.subscribe(\n        resData => (this.LoggedParams = resData)\n      );\n      this.walletId = this.LoggedParams.sProfile.sWalletId;\n      this.dealerId = this.LoggedParams.sProfile.sDealerId;\n      this.senderEmailId = this.LoggedParams.sProfile.uContactInfo.Email;\n    }\n  toggleFormArea() {\n    this.isVisibleFormArea = !this.isVisibleFormArea;\n  }\n  ngOnInit(): void {\n    this.getProfileAccounts();\n    this.getLedgerDetails(1, this.cat);\n  }\n  setOrder(value: string) {\n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n    this.order = value;\n  }\n  getTransactionSetting() {\n    const params = {\n      sDealerID: this.LoggedParams.sProfile.sDealerId\n    };\n    try {\n      this.transactionSubscription = this.globalService.getSettings(params).subscribe(data => {\n        if (data.length) {\n          this.transactionSettingW2A = data[0].Wallet_Auto_ITC;\n          this.transactionSettingA2W = data[0].Acc_Auto_ITC;\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  onClaim(id: number) {\n    Swal.fire({\n      title: 'Are you Sure!',\n      text: 'Do you really want to Claim Amount? This process cannot be undone',\n      icon: 'error',\n      showCancelButton: true,\n      confirmButtonText: 'Claim',\n      cancelButtonText: 'Cancel',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n        const params = {\n          sDealerID: this.LoggedParams.sProfile.sDealerId,\n          sLedgerId: id,\n          uWalletID: this.LoggedParams.sProfile.sWalletId,\n        };\n        console.log(params);\n        this.globalService.claim(params).subscribe(data => {\n          if (data.Result === true) {\n            this.getLedgerDetails(1, this.cat);\n            Swal.fire(\n              'Claimed!',\n              'Your Amount has been Claimed.',\n              'success'\n            );\n            this.notificationService.showSuccess('Your Amount has been Claimed Successfully', 'Success');\n          }\n        }, err => {\n          console.log(err);\n        });\n      }\n    });\n  }\n  getLedgerDetails(indexval, countVal) {\n    this.isLoading = true;\n    if (countVal) {\n      this.pageSize = indexval;\n      this.p = 1;\n      this.setParams = {\n        WalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Initial: this.p,\n        MaxCount: this.pageSize\n      };\n    } else {\n      this.p = indexval;\n      this.setParams = {\n        WalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Initial:  (this.p - 1) * this.pageSize + 1,\n        MaxCount: this.p * this.pageSize\n      };\n    }\n    this.ledgerDetailscription = this.globalService.getLedger(this.setParams).subscribe(\n      data => {\n        this.TotalCount = data.sLedger.Count;\n        this.isLoading = false;\n        this.walletBalance = data.uBalance;\n        this.pendingBalance = data.uPending;\n        this.ledgersDetail = data.sLedger.lstLedger.map(res => {\n           console.log(res);\n           return res;\n        });\n        console.log(this.ledgersDetail);\n      }, err => {\n        console.log(err);\n        this.isLoading = false;\n        this.IsDataNotFound = true;\n      }\n    );\n  }\n  getProfileAccounts() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n      LoginId: this.LoggedParams.sProfile.sMasterId\n    };\n    this.accountSubscription = this.globalService.GET_PROFILE_ACCOUNTS(params).subscribe(\n      data => {\n        this.liveAccountData = data.lstAccount.map( acc => {\n          if (acc) {\n            return Object.assign(acc.sUserInfo, acc.sAccountPlan);\n          }\n        });\n        console.log( this.liveAccountData);\n      }\n    );\n  }\n  autoCloseMsqBlock() {\n    setTimeout(() => {\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n  onCloseMsqBlock() {\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = false;\n    this.messageToDisplay = '';\n  }\n  onSuccessMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.ErrorMsqBlock = false;\n    this.successMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  onErrorMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n\n\n  // Check KYC is Required or not\n  isKYCRequired() {\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      const params = {\n        Dealer: this.LoggedParams.sProfile.sDealerId\n      };\n      this.globalService.getKycset(params).subscribe(data => {\n        console.warn('KYC Settings = ' + data);\n        if (data && data === 3) {\n          resolve(true);\n         } else if (data && data === 1 || data === 2) {\n          resolve(false);\n         } else if (data || data === 0) {\n          resolve(false);\n        } else {\n          reject('KYC Settings Not Found .....');\n        }\n      });\n    });\n  }\n\n// IS KYC Approved If KYC required\nisKYCApproved() {\n  const params = {\n    KYCStatus: this.LoggedParams.sProfile.uKYCStatus,\n  };\n  // tslint:disable-next-line: no-shadowed-variable\n  return new Promise((resolve, reject) => {\n    if (params.KYCStatus) {\n      if (params.KYCStatus !== 2) {\n        // this.onErrorMsqDisplay('KYC is required to make Transaction In Wallet to Wallet!');\n        this.notificationService.showError('KYC is required to make Transaction', 'Error');\n        resolve(false);\n        this.displayKYCPopup();\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n      } else {\n        resolve(true);\n      }\n    } else {\n      reject('KYC Status Not Found ....');\n    }\n  });\n}\n\n  displayKYCPopup() {\n    Swal.fire({\n      title: 'Please update KYC First!',\n      text: 'Your KYC is not Verified. You will not be able to make Transaction without KYC Approved!',\n      icon: 'error',\n      showCancelButton: false,\n      confirmButtonText: 'Show me the way',\n      cancelButtonText: 'No, keep it',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n          this.globalService.redirect('/home/dashboard');\n      }\n    });\n  }\n     // Check Fund Balance on MT4Account before make a Transaction\n     isBalanceAvaliable(formData: any) {\n      // tslint:disable-next-line: no-shadowed-variable\n      return new Promise((resolve, reject) => {\n         console.log(formData.amount);\n         console.log(formData.transactionType);\n         this.selectedAccount = this.liveAccountData.filter((acc) => {\n            if (acc.MT4Account === formData.account) {\n             return acc;\n            }\n          });\n         if (formData.transactionType === 'a2w') {\n            if (this.selectedAccount[0].Balance >= formData.amount ) {\n              resolve(true);\n            } else {\n              // tslint:disable-next-line: max-line-length\n              // this.onErrorMsqDisplay(`Please maintain Sufficient Balance in your MT4Account Account before make a Transaction`);\n              this.notificationService.showError('You have not sufficient Balance in your Account', 'Error');\n              resolve(false);\n              this.isLoading = false;\n              this.autoCloseMsqBlock();\n            }\n         } else if (formData.transactionType === 'w2a') {\n            const params = {\n             sWalletId: this.walletId\n            };\n            this.globalService.getWalletInfo(params).subscribe(data => {\n              console.log(data);\n              if (data) {\n                console.warn('Avaliable Balance = ' + data.uBalance);\n                console.warn('Transfer Amount = ' + data.uBalance);\n                if (formData.amount <= data.uBalance) {\n                  resolve(true);\n                } else {\n                  // this.onErrorMsqDisplay('Please maintain Sufficient Balance in your Wallet before make a Transaction ');\n                  this.notificationService.showError('You have not sufficient Balance in your Wallet', 'Error');\n                  resolve(false);\n                  this.isLoading = false;\n                  this.autoCloseMsqBlock();\n                }\n              } else {\n                reject('Balance Not Found .....');\n              }\n            });\n         }\n        });\n    }\n\n    depositMt4Account(formData: any) {\n      // console.log('makeWalletTransfer function excuted');\n      console.log( this.LoggedParams.sProfile.sWalletId);\n      console.log( this.LoggedParams.sProfile.sDealerId);\n      const params = {\n        uCommission: 0,\n        Amount: formData.amount,\n        Comment: formData.comment,\n        uWalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerId: this.LoggedParams.sProfile.sDealerId,\n        UuAccount: formData.account,\n        ManagerIndex:  this.selectedAccount[0].uManager,\n        uSource: 0,\n        uTransType: formData.transactionType === 'w2a' ? 0 : 1,\n      };\n      this.globalService.walletTrans(params).subscribe(data => {\n        if (data.oStatus === true) {\n            this.getLedgerDetails(1, this.cat);\n            // this.onSuccessMsqDisplay(data.oStatus);\n              // tslint:disable-next-line: max-line-length\n            if (formData.transactionType === 'w2a') {\n              // tslint:disable-next-line: max-line-length\n              // this.onSuccessMsqDisplay(`You have made Successfully Transaction of ${formData.amount} dollor from  ${this.LoggedParams.sProfile.sWalletId} Wallet Id to  ${formData.account} Account`);\n              // tslint:disable-next-line: max-line-length\n              this.notificationService.showSuccess(`You have made Successfully Transaction of ${formData.amount} dollor from  ${this.LoggedParams.sProfile.sWalletId} Wallet Id to  ${formData.account} Account`, 'Success');\n\n              // if (this.transactionSettingW2A === 0) {\n              // tslint:disable-next-line: max-line-length\n              //   this.notificationService.showInfo(`You have successfully generated a request for ${formData.amount} from your wallet amount to transfer in your account.`, 'Information');\n              //  } else {\n              // tslint:disable-next-line: max-line-length\n              //   this.notificationService.showSuccess(`You have made Successfully Transaction of ${formData.amount} dollor from  ${this.LoggedParams.sProfile.sWalletId} Wallet Id to  ${formData.account} Account`, 'Success');\n              //  }\n\n              this.headerService.getUserWalletDetail();\n           } else {\n              // tslint:disable-next-line: max-line-length\n              // this.onSuccessMsqDisplay(`You have made Successfully Transaction of ${formData.amount} dollor from ${formData.account} Account to ${this.LoggedParams.sProfile.sWalletId} Wallet Id`);\n              // tslint:disable-next-line: max-line-length\n              this.notificationService.showSuccess(`You have made Successfully Transaction of ${formData.amount} dollor from ${formData.account} Account to ${this.LoggedParams.sProfile.sWalletId} Wallet Id`, 'Success');\n              // if (this.transactionSettingW2A === 0) {\n              // tslint:disable-next-line: max-line-length\n              //   this.notificationService.showInfo(`You have successfully generated a request for ${formData.amount} from your Account amount to transfer in your Wallet.`, 'Information');\n              //  } else {\n              // tslint:disable-next-line: max-line-length\n              //   this.notificationService.showSuccess(`You have made Successfully Transaction of ${formData.amount} dollor from ${formData.account} Account to ${this.LoggedParams.sProfile.sWalletId} Wallet Id`, 'Success');\n              //  }\n              this.headerService.getUserWalletDetail();\n           }\n            this.isLoading = false;\n          //  this.fundTransactionForm.reset();\n            this.autoCloseMsqBlock();\n            this.fundTransactionForm.reset();\n        } else {\n          // this.onErrorMsqDisplay('Failed To Make Transaction');\n          this.notificationService.showError('Failed To Make Transaction', 'Error');\n          this.isLoading = false;\n          this.autoCloseMsqBlock();\n        }\n      }, err => {\n        console.log(err);\n        this.notificationService.showError('Failed To Make Transaction', 'Error');\n      });\n     }\n    onSubmit() {\n      this.isLoading = true;\n      this.onCloseMsqBlock();\n      const formData = {\n        transactionType: this.fundTransactionForm.value.transactionType,\n        account: this.fundTransactionForm.value.account,\n        amount: this.fundTransactionForm.value.amount,\n        comment: this.fundTransactionForm.value.comment\n      };\n\n      if (0 >= this.fundTransactionForm.value.amount) {\n        // this.onErrorMsqDisplay(`${this.fundTransactionForm.value.amount} is not a Valid Number in Amount Field`);\n        this.notificationService.showError(`${this.fundTransactionForm.value.amount} is not a Valid Number in Amount Field`, 'Error');\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n        return;\n      }\n\n      this.isBalanceAvaliable(formData).then((resData) => {\n        if (resData) {\n          this.isKYCRequired().then((KYCResponse) => {\n            if (KYCResponse) {\n              this.isKYCApproved().then((approvalReponse) => {\n                if (approvalReponse) {\n                  this.depositMt4Account(formData);\n                }\n              }).catch((err) => {\n                console.error(err);\n                // this.onErrorMsqDisplay(err);\n                this.notificationService.showError('Failed To Make Transaction', 'Error');\n              });\n            } else {\n              this.depositMt4Account(formData);\n            }\n           }).catch((err) => {\n            console.error(err);\n            // this.onErrorMsqDisplay(err);\n            this.notificationService.showError('Failed To Make Transaction', 'Error');\n           });\n        }\n      }).catch((err) => {\n        console.error(err);\n        // this.onErrorMsqDisplay(err);\n        this.notificationService.showError('Failed To Make Transaction', 'Error');\n      });\n     }\n  ngOnDestroy() {\n    this.accountSubscription.unsubscribe();\n    this.ledgerDetailscription.unsubscribe();\n    this.headerSubscription.unsubscribe();\n  }\n}\n","<div class=\"right-tabBtn-row d-none d-sm-block d-md-block d-lg-block\">\n    <button class=\"btn btn-warning btn-sm font-weight-400 text-size-13\" (click)=\"toggleFormArea()\">\n       <i-feather class=\"icon-size-18\" name=\"dollar-sign\"></i-feather>Make a Transaction\n    </button>\n</div>\n<div *ngIf=\"isVisibleFormArea\" class=\"transaction-form-container\">\n    <!-- <div class=\"transaction-form-container\"> -->\n    <div class=\"traction-from-box bg-b\">\n        <div class=\"heading\">\n            <div *ngIf=\"transactionType.value == 'a2w'\" class=\"title\">Withdraw Fund - Account To Wallet</div>\n            <div *ngIf=\"transactionType.value == 'w2a'\" class=\"title\">Deposit Fund - Wallet To Account</div>\n            <div class=\"title\" *ngIf=\"transactionType.value != 'w2a' && transactionType.value != 'a2w'\">Deposit\n                <span class=\"material-icons\">\n                    swap_horizontal_circle\n                    </span> Withdraw Fund</div>\n            <small>All fields are required to transfer from Account to Wallet</small>\n            <!-- <small *ngIf=\"transactionType.value == 'a2w'\">Transfer from Account to Wallet All fields are required to deposit from Account to Wallet</small>\n            <small *ngIf=\"transactionType.value == 'w2a'\">Transfer from Account to Wallet All fields are required to deposit from Account to Wallet</small> -->\n        </div>\n        <!-- Success Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n                    <strong></strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n                    <strong></strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <form class=\"\" (ngSubmit)=\"onSubmit()\" #formData=\"ngForm\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"\" for=\"account\">Transaction Type</label>\n                        <span class=\"asterick\">*</span>\n                        <select required #transactionType name=\"transactionType\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"transactionType\" [(ngModel)]=\"transactionTypeValue\">\n                            <option class=\"text-size-13\" value=\"Please Select Transaction Type\" [disabled]=\"true\" >Select Transaction Type</option>\n                            <option class=\"text-size-13\" name=\"WalletToAccount\" value=\"w2a\">Wallet To Account</option>\n                            <option class=\"text-size-13\" name=\"accountToWallet\" value=\"a2w\">Account to Wallet</option>\n                        </select>\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!transactionType.valid && transactionType.touched  \">Please Enter a valid Account Number</span>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"transactionType.value == 'w2a' || transactionType.value == 'a2w'\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"\" for=\"account\">Account Number</label>\n                            <span class=\"asterick\">*</span>\n                            <select required ngModel #account=\"ngModel\" name=\"account\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"account\">\n                            <option class=\"text-size-13\" value=\"\" [disabled]=\"true\">Select Account Number</option>\n                            <option class=\"text-size-13\" *ngFor=\"let acc of liveAccountData\" name=\"accounts\" [ngValue]=\"acc.MT4Account\">{{acc.MT4Account}}</option>\n                        </select>\n                            <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                            <span class=\"help-block text-danger \" *ngIf=\"!account.valid && account.touched  \">Please Enter a valid Account Number</span>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"main-txt-color\" for=\"amount\">Amount</label>\n                            <span class=\"asterick\">*</span>\n                            <input min=\"1\" pattern=\"^-?(0|[1-9]\\d*)?$\" required ngModel #amount=\"ngModel\" name=\"amount\" type=\"number\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"amount\" placeholder=\"Enter Amount\" />\n                            <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                            <span class=\"help-block text-danger \" *ngIf=\"!amount.valid && amount.touched  \">Amount field should not be blankr</span>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-8\">\n                        <div class=\"form-group\">\n                            <label class=\"main-txt-color\" for=\"comment\">Comment</label>\n                            <span class=\"asterick\">*</span>\n                            <input required ngModel #comment=\"ngModel\" name=\"comment\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"comment\" placeholder=\"Enter Comment\" />\n                            <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                            <span class=\"help-block text-danger \" *ngIf=\"!comment.valid && comment.touched  \">Please enter a comment</span>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <div class=\"position-relative\" style=\"padding-top:29px;\">\n                            <button [disabled]=\"(!formData.valid || isLoading )\" class=\"btn btn-primary btn-sm px-3 position-relative\">\n                            <span [class.btn-spinner]=\"isLoading\"></span> Transfer Fund</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n<div class=\"tab-inner-content px-2 position-relative\">\n    <div class=\"history-title \">Your Transaction History\n        <!-- <small class=\"d-block text-size-12 \">Historical data of your transactions</small> -->\n    </div>\n    <div class=\"wallet_balance\">\n        <p>Pending : <strong style=\"color:#f36\">${{pendingBalance}}.00</strong> </p>\n        <p>Wallet Balance : <strong style=\"color:#10b759 \">${{walletBalance}}.00</strong></p>\n    </div>\n\n    <div class=\"table-container table-responsive table-responsive table-responsive-sm mb-3 \">\n        <div class=\"table-filter-area \">\n            <div class=\"row no-gutters \">\n                <div class=\"col-md-4 form-inline d-none d-md-block \">\n                    <div class=\"form-group mb-2 \">\n                        <label for=\"entries \" class=\" main-txt-color mr-1 \">Show </label>\n                        <select (change)=\"getLedgerDetails($event.target.value,true)\" class=\"form-control main-txt-color bd-color shadow-none \" id=\"entries \">\n                            <option selected>5</option>\n                            <option>10</option>\n                            <option>15</option>\n                            <option>20</option>\n                            <option>25</option>\n                            <option>30</option>\n                            <option>50</option>\n                            <option>100</option>\n                      </select>\n                        <label for=\"entries \" class=\" main-txt-color ml-1 \"> Entries</label>\n                    </div>\n                </div>\n                <div class=\"col-md-3 offset-md-5 \">\n                    <div class=\"form-group \">\n                        <input [(ngModel)]=\"searchText\" type=\"text \" class=\"form-control main-txt-color bd-color shadow-none \" id=\"searchText \" placeholder=\"Enter Keyword to search \" />\n                    </div>\n                </div>\n            </div>\n        </div>\n        <table class=\"table table-hover main-txt-color mb-0 \">\n            <thead class=\"table-header-bg table-header-color \">\n                <tr>\n                    <th [class.active]=\"order === 'sCreadedOn_Str' \" (click)=\"setOrder('sCreadedOn_Str')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Transaction Id</th>\n                    <th [class.active]=\"order === 'Account' \" (click)=\"setOrder('Account')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Timestamp</th>\n                    <th [class.active]=\"order === 'Value' \" (click)=\"setOrder('Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Details</th>\n                    <th [class.active]=\"order === 'oPerc_Value' \" (click)=\"setOrder('oPerc_Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Withdraw</th>\n                    <th [class.active]=\"order === 'oAction' \" (click)=\"setOrder('oAction')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Deposit</th>\n                    <th [class.active]=\"order === 'oAlert_Disable_Trade' \" (click)=\"setOrder('oAlert_Disable_Trade')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Status</th>\n                    <th [class.active]=\"order === 'oAlert_Mail' \" (click)=\"setOrder('oAlert_Mail')\" class=\"font-weight-500 bd-color text-capitalize align-middle align-middle\">Remarks</th>\n                    <th [class.active]=\"order === 'oUP_DOWN' \" (click)=\"setOrder('oUP_DOWN')\" class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Action</th>\n                </tr>\n            </thead>\n            <tbody *ngIf=\"(!IsDataNotFound)\" class=\"secondary-txt-color \">\n                <tr *ngIf=\"(isLoading)\">\n                    <td colspan=\"9\" class=\"text-center\" class=\"align-middle\">\n                        <div class=\"text-size-17 font-weight-300\">Loading ...</div>\n                    </td>\n                </tr>\n                <tr *ngFor=\"let ledger of ledgersDetail | orderBy:order:reverse | filter:searchText | paginate: { itemsPerPage: pageSize, currentPage: p, totalItems: TotalCount}; let i = index\">\n                    <td class=\"align-middle\">{{ledger.uReference}}</td>\n                    <td class=\"align-middle\">{{ledger.sTimestamp?.sCreadedOn_Str | date: 'dd-MM-yyyy hh:mm a'}}</td>\n                    <td class=\"align-middle\">\n                        <span *ngIf=\"ledger.uSource==0\">Neteller</span>\n                        <span *ngIf=\"ledger.uSource==1\">Skrill</span>\n                        <span *ngIf=\"ledger.uSource==2\">Insta mozo</span>\n                        <span *ngIf=\"ledger.uSource==3\">Payee88</span>\n                        <span *ngIf=\"ledger.uSource==4\">Perfect money</span>\n                        <span *ngIf=\"ledger.uSource==5\">Bank wire 1</span>\n                        <span *ngIf=\"ledger.uSource==6\">Bank wire 2</span>\n                        <span *ngIf=\"ledger.uSource==7\">Bank wire 3</span>\n                        <span *ngIf=\"ledger.uSource==8\">Crypto currency</span>\n                        <span *ngIf=\"ledger.uSource==9\">Bank wire 4</span>\n                        <span *ngIf=\"ledger.uSource==10\">Bank wire 5</span>\n                        <span *ngIf=\"ledger.uSource==11\">Bank wire 6</span>\n                    </td>\n                    <td class=\"align-middle\">{{ledger.uTransType==1 ? ledger.uAmount:'-'}}</td>\n                    <td class=\"align-middle\">{{ledger.uTransType==0 ? ledger.uAmount:'-'}}</td>\n                    <td class=\"align-middle\">\n                        <span class=\"badge badge-warning\" *ngIf=\"ledger.uStatus==0\">Pending</span>\n                        <span class=\"badge badge-success\" *ngIf=\"ledger.uStatus==1 && ledger.uComment!='Transaction Claimed '\">Success</span>\n                        <span class=\"badge badge-info\" *ngIf=\"ledger.uComment=='Transaction Claimed '\">Claimed</span>\n                        <span class=\"badge badge-danger\" *ngIf=\"ledger.uStatus==2\">Rejected</span>\n                    </td>\n                    <td class=\"text-center align-middle\">\n                        <i-feather class=\"icon-size-20\" name=\"message-square\" tooltip=\"{{ledger.uComment}}\" placement=\"top\" *ngIf=\"ledger.uComment!=''\"></i-feather>\n                        <i-feather class=\"icon-size-20\" name=\"message-square\" tooltip=\"{{ledger.uAdmMsg}}\" placement=\"top\" *ngIf=\"ledger.uAdmMsg!=''\"></i-feather>\n                    </td>\n                    <td class=\"text-center align-middle\">\n                        <button *ngIf=\"ledger.uStatus==0\" (click)=\"onClaim(ledger.sLedgerId)\" class=\"btn btn-warning btn-sm font-weight-400 text-size-11 btn-sm-padd\" type=\"button\">Claim</button>\n                        <!-- <button *ngIf=\"ledger.uStatus==1\" disabled class=\"btn btn-secondary btn-sm px-3 font-weight-500 text-size-12\" type=\"button\">Not Required</button> -->\n                        <span *ngIf=\"ledger.uStatus==1\"> - </span>\n\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"(IsDataNotFound)\" class=\"text-size-17 font-weight-300 text-center p-4\" style=\"background: #eff3f6;\">Data Not Found</div>\n    </div>\n    <div class=\"table-pagination text-right border-top-0 pt-4\">\n        <pagination-controls (pageChange)=\"getLedgerDetails($event,false)\"></pagination-controls>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fund-transfer',\n  templateUrl: './fund-transfer.component.html',\n  styleUrls: ['./fund-transfer.component.scss']\n})\nexport class FundTransferComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"small-content-section bg-f\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card border-0 \">\r\n                <div class=\"card-body border-0 p-0\">\r\n                    <div class=\"tabs-container\">\r\n                        <ul class=\"tabs-heading d-flex flex-row border-bottom\">\r\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\r\n                                <a class=\"p-3\" routerLink=\"/home/money/transfer-funds/wallet-to-wallet\">\r\n                                    <span class=\"material-icons\">account_balance_wallet</span>\r\n                                    <span class=\"tab-text\">Wallet To Wallet</span>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\r\n                                <a class=\"p-3\" routerLink=\"/home/money/transfer-funds/account-to-account\">\r\n                                    <span class=\"material-icons\">museum</span>\r\n                                    <span class=\"tab-text\">Account To Account</span>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\r\n                                <a class=\"p-3\" routerLink=\"/home/money/transfer-funds/account-to-wallet\">\r\n                                    <span class=\"material-icons\">swap_horizontal_circle</span>\r\n                                    <span class=\"tab-text\">Account To  Wallet</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <div class=\"tabs-body p-2\">\r\n                            <router-outlet></router-outlet>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NotificationService } from './../../../../../../shared/services/notification.service';\nimport { HeaderService } from './../../../../../../shared/services/header.service';\nimport { resolve } from 'url';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../shared/services/global.service';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-wallet-to-wallet',\n  templateUrl: './wallet-to-wallet.component.html',\n  styleUrls: ['./wallet-to-wallet.component.scss']\n})\nexport class WalletToWalletComponent implements OnInit, OnDestroy {\n  public isLoading = false;\n  public transactionSetting: number;\n  public ledgersDetail = [];\n  public walletToWalletLedger = [];\n  public walletId: string;\n  public dealerId: string;\n  public isVisibleFormArea = false;\n  @ViewChild('formData', {static: false}) fundTransactionForm: NgForm;\n  public LoggedParams: any;\n  public accountSnapSubscription: Subscription;\n  public ledgerDetailscription: Subscription;\n  public headerSubscription: Subscription;\n  public transactionSubscription: Subscription;\n  public walletBalance: any;\n  public pendingBalance: any;\n  public availableBalance: number;\n  public senderEmailId: string;\n  public messageToDisplay: string;\n  public ErrorMsqBlock = false;\n  public successMsqBlock = false;\n\n    // pagination Setting\n    public TotalCount = 0;\n    public cat;\n    public searchText: any; // Search Text property is used to filter text in table\n    public p: any;          // Current page in pagination\n    public pageSize = 5;  // Table Rows Perpage property\n    public sortedData: any[]; // Sorted Product list array\n    public order = '';     // Order property to sort coloum of table\n    public reverse = true; // Reverse property is used to sort table coloum\n    public setParams: any;\n    public IsDataNotFound = false;\n  constructor(\n    private globalService: GlobalService,\n    private headerService: HeaderService,\n    private orderPipe: OrderPipe,\n    private notificationService: NotificationService\n    ) {\n      this.headerSubscription = this.headerService.castLoggedUserDetail.subscribe(\n        resData => (this.LoggedParams = resData)\n      );\n      this.walletId = this.LoggedParams.sProfile.sWalletId;\n      this.dealerId = this.LoggedParams.sProfile.sDealerId;\n      this.senderEmailId = this.LoggedParams.sProfile.uContactInfo.Email;\n    }\n  toggleFormArea() {\n    this.isVisibleFormArea = !this.isVisibleFormArea;\n  }\n\n  ngOnInit(): void {\n    this.getLedgerDetails(1, this.cat);\n    this.getTransactionSetting();\n  }\n  setOrder(value: string) {\n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n    this.order = value;\n  }\n  getTransactionSetting() {\n    const params = {\n      sDealerID: this.LoggedParams.sProfile.sDealerId\n    };\n    try {\n      this.transactionSubscription = this.globalService.getSettings(params).subscribe(data => {\n        if (data.length) {\n          this.transactionSetting = data[0].Wallet_Auto_ITC;\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  onClaim(id: number) {\n    Swal.fire({\n      title: 'Are you Sure!',\n      text: 'Do you really want to Claim Amount? This process cannot be undone',\n      icon: 'error',\n      showCancelButton: true,\n      confirmButtonText: 'Claim',\n      cancelButtonText: 'Cancel',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n        const params = {\n          sDealerID: this.LoggedParams.sProfile.sDealerId,\n          sLedgerId: id,\n          uWalletID: this.LoggedParams.sProfile.sWalletId,\n        };\n        console.log(params);\n        this.globalService.claim(params).subscribe(data => {\n          if (data.Result === true) {\n            this.getLedgerDetails(1, this.cat);\n            Swal.fire(\n              'Claimed!',\n              'Your Amount has been Claimed.',\n              'success'\n            );\n            this.notificationService.showSuccess('Your Amount has been Claimed Successfully', 'Success');\n          }\n        }, err => {\n          console.log(err);\n        });\n      }\n    });\n  }\n  getLedgerDetails(indexval, countVal) {\n    this.isLoading = true;\n    if (countVal) {\n      this.pageSize = indexval;\n      this.p = 1;\n      this.setParams = {\n        WalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Initial: this.p,\n        MaxCount: this.pageSize\n      };\n    } else {\n      this.p = indexval;\n      this.setParams = {\n        WalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Initial:  (this.p - 1) * this.pageSize + 1,\n        MaxCount: this.p * this.pageSize\n      };\n    }\n    this.ledgerDetailscription = this.globalService.getLedger(this.setParams).subscribe(\n      data => {\n        this.TotalCount = data.sLedger.Count;\n        this.isLoading = false;\n        this.walletBalance = data.uBalance;\n        this.pendingBalance = data.uPending;\n        this.ledgersDetail = data.sLedger.lstLedger.map(res => {\n           console.log(res);\n           return res;\n        });\n        console.log(this.ledgersDetail);\n      }, err => {\n        console.log(err);\n        this.isLoading = false;\n        this.IsDataNotFound = true;\n      }\n    );\n  }\n  autoCloseMsqBlock() {\n    setTimeout(() => {\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n  onCloseMsqBlock() {\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = false;\n    this.messageToDisplay = '';\n  }\n  onSuccessMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.ErrorMsqBlock = false;\n    this.successMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  onErrorMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n\n   // Check Fund Balance before make a Transaction or submit the form\n   isBalanceAvaliable(transferAmount: number) {\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      const params = {\n        sWalletId: this.walletId\n      };\n      // Called getWalletInfo function from global service to get Wallet information\n      this.globalService.getWalletInfo(params).subscribe(data => {\n        console.log(data);\n        if (data) {\n          // console.warn('Avaliable Balance = ' + data.uBalance);\n          // console.warn('Transfer Amount = ' + transferAmount);\n          if (transferAmount <= data.uBalance) {\n            resolve(true);\n          } else {\n            // this.onErrorMsqDisplay('Please maintain Sufficient Balance in your Account before make a Transaction ');\n            this.notificationService.showError('You have not sufficient Balance in your Wallet.', 'Error');\n            resolve(false);\n            this.isLoading = false;\n            // this.autoCloseMsqBlock();\n          }\n        } else {\n          reject('Balance Not Found .....');\n        }\n      });\n    });\n  }\n\n\n  // Check KYC is Required or not\n  isKYCRequired() {\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      const params = {\n        Dealer: this.LoggedParams.sProfile.sDealerId\n      };\n      // Call getKycset function to check KYC setting\n      this.globalService.getKycset(params).subscribe(data => {\n        // console.warn('KYC Settings = ' + data);\n        if (data && data === 3) {\n          // console.warn('KYC Required');\n          resolve(true);\n         } else if (data && data === 1 || data === 2) {\n          // console.warn('KYC Not Required');\n          resolve(false);\n         } else if (data || data === 0) {\n          // console.warn('KYC Not Required');\n          resolve(false);\n        } else {\n          reject('KYC Settings Not Found .....');\n        }\n      });\n    });\n  }\n\n    // IS KYC Approved If KYC required\n  isKYCApproved() {\n    const params = {\n      KYCStatus: this.LoggedParams.sProfile.uKYCStatus,\n    };\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      if (params.KYCStatus) {\n        if (params.KYCStatus !== 2) {\n          // console.warn('Your KYC Is Not Approved');\n          // this.onErrorMsqDisplay('KYC is required to make Transaction In Wallet to Wallet!');\n          this.notificationService.showError('KYC is required to make Transaction In Wallet to Wallet!', 'Error');\n          // Swal.fire('Oops...', 'KYC is required to make Transaction In Wallet to Wallet!', 'error');\n          resolve(false);\n          this.displayKYCPopup();\n          this.isLoading = false;\n          // this.autoCloseMsqBlock();\n        } else {\n          // console.warn('Your KYC IS approved');\n          resolve(true);\n        }\n      } else {\n        reject('KYC Status Not Found ....');\n      }\n    });\n  }\n\n  displayKYCPopup() {\n    Swal.fire({\n      title: 'Please update KYC First!',\n      text: 'Your KYC is not Verified. You will not be able to make Transaction without KYC Approved!',\n      icon: 'error',\n      showCancelButton: false,\n      confirmButtonText: 'Show me the way',\n      cancelButtonText: 'No, keep it',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n          this.globalService.redirect('/home/documents/kyc-upload');\n      }\n    });\n  }\n\n\n  makeWalletToWalletTransaction(formData: any) {\n    // console.log('makeWalletTransfer function excuted');\n    const params = {\n      uReceipt_Email: formData.email,\n      uAmount: formData.amount,\n      uSender_Email:  this.LoggedParams.sProfile.uContactInfo.Email,\n      uSender_WalletId:  this.LoggedParams.sProfile.sWalletId,\n      uReceipt_WalletId: 0,\n      DealerId:  this.LoggedParams.sProfile.sDealerId,\n      RequestId: 0,\n      sStatus: 0,\n      uComment: 'Wallet to Wallet Transfer',\n      uTimestamp: {\n        sCreadedOn: 0,\n        sUpdatedOn: 0,\n        sCreadedOn_Str: '0',\n        sUpdatedOn_Str: '0'\n      }\n    };\n    this.globalService.makeW2WTransfer(params).subscribe(data => {\n      if (data.oRet.Result === true) {\n        //  this.onSuccessMsqDisplay(data.oRet.MSG_USER);\n        //  this.onSuccessMsqDisplay(`You have Successfully transfer ${formData.amount} dollor to ${formData.email}`);\n         // tslint:disable-next-line: max-line-length\n         if (this.transactionSetting === 0) {\n          this.notificationService.showSuccess('Your Request has been generated, Please wait for admin Approval.', 'Success');\n         } else {\n          // tslint:disable-next-line: max-line-length\n          this.notificationService.showSuccess(`You have Successfully transferred ${formData.amount} dollor to ${formData.email}`, 'Success');\n         }\n         this.headerService.getUserWalletDetail();\n         this.isLoading = false;\n         this.fundTransactionForm.reset();\n         this.autoCloseMsqBlock();\n      } else {\n        // this.onErrorMsqDisplay('Failed To Make Transaction');\n        this.notificationService.showError('Failed To Make Transaction', 'Error');\n        this.isLoading = false;\n        // this.autoCloseMsqBlock();\n      }\n    }, err => {\n      console.log(err);\n      this.notificationService.showError('Failed To Make Transaction', 'Error');\n    });\n   }\n\n\n\n  //  Check Sender and reciever Email ID\n   isEmailIdSame(receiverEmailId: string) {\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      if (receiverEmailId !== this.senderEmailId) {\n        resolve(true) ;\n      } else {\n        // this.onErrorMsqDisplay('Sender and Receiver Email Id could Not be Same !');\n        this.notificationService.showError('Sender and Receiver Email Id could Not be Same !', 'Error');\n        resolve(false) ;\n        this.isLoading = false;\n        // this.autoCloseMsqBlock();\n      }\n    });\n   }\n  onSubmit() {\n    this.isLoading = true;\n    this.onCloseMsqBlock();\n    // Get Form Field Data on Submit\n    const formData = {\n      email: this.fundTransactionForm.value.email,\n      amount: this.fundTransactionForm.value.amount,\n    };\n    if (0 >= formData.amount) {\n      // this.onErrorMsqDisplay(`${formData.amount} is not a Valid Number in Amount Field`);\n      this.notificationService.showError(`${formData.amount} is not a Valid Number in Amount Field`, 'Error');\n      this.isLoading = false;\n      // this.autoCloseMsqBlock();\n      return;\n    }\n    this.isEmailIdSame(formData.email).then((emailIdreponse) => {\n      if (emailIdreponse) {\n        this.isBalanceAvaliable(formData.amount).then((BalanceResponse) => {\n          // console.warn('IsBalance Avaliable = ' + BalanceResponse);\n          if (BalanceResponse) {\n            this.isKYCRequired().then((KYCResponse) => {\n              // console.warn('Is KYC Required = ' + KYCResponse);\n              if (KYCResponse) {\n                this.isKYCApproved().then((approvalReponse) => {\n                  if (approvalReponse) {\n                    // console.log('w2w function excuted');\n                    this.makeWalletToWalletTransaction(formData);\n                  }\n                }).catch((err) => {\n                  console.error(err);\n                  this.onErrorMsqDisplay(err);\n                });\n              } else {\n                this.makeWalletToWalletTransaction(formData);\n                // console.log('w2w function excuted');\n              }\n             }).catch((err) => {\n              console.error(err);\n              this.onErrorMsqDisplay(err);\n             });\n            }\n        }).catch((err) => {\n          console.error(err);\n          this.onErrorMsqDisplay(err);\n        });\n      }\n    });\n  }\n  ngOnDestroy() {\n    // this.accountSubscription.unsubscribe();\n    this.ledgerDetailscription.unsubscribe();\n    this.headerSubscription.unsubscribe();\n    this.transactionSubscription.unsubscribe();\n  }\n}\n","<div class=\"right-tabBtn-row d-none d-sm-block d-md-block d-lg-block\">\n    <button class=\"btn btn-warning btn-sm font-weight-400 text-size-13\" (click)=\"toggleFormArea()\">\n        <i-feather class=\"icon-size-18\" name=\"dollar-sign\"></i-feather>Make a Transaction\n    </button>\n</div>\n<div *ngIf=\"isVisibleFormArea\" class=\"transaction-form-container\">\n    <!-- <div class=\"transaction-form-container\"> -->\n    <div class=\"traction-from-box bg-b\">\n        <div class=\"heading\">\n            <div class=\"title\">Transfer in Wallet to Wallet</div>\n            <small>All fields are required to transfer from Wallet to Wallet</small>\n        </div>\n        <!-- Success Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n                    <strong>Success -: </strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n                    <strong></strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <form class=\"\" (ngSubmit)=\"onSubmit()\" #formData=\"ngForm\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"\" for=\"email\">Email Address</label>\n                        <span class=\"asterick\">*</span>\n                        <input required email ngModel #email=\"ngModel\" name=\"email\" type=\"email\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"email\" placeholder=\"Enter Email Address\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!email.valid && email.touched  \">Please enter a valid email address</span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"main-txt-color\" for=\"amount\">Amount ($)</label>\n                        <span class=\"asterick\">*</span>\n                        <input min=\"1\" pattern=\"^\\d+$\" required ngModel #amount=\"ngModel\" name=\"amount\" type=\"number\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"amount\" placeholder=\"Enter Amount\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!amount.valid && amount.touched  \">Please enter a valid Amount</span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"position-relative\" style=\"padding-top:29px;\">\n                        <button [disabled]=\"(!formData.valid || isLoading )\" class=\"btn btn-primary btn-sm px-3  position-relative\">\n                            <span [class.btn-spinner]=\"isLoading\"></span> Transfer Fund</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n<div class=\"tab-inner-content px-2 position-relative\">\n    <div class=\"history-title \">Your Transaction History\n        <!-- <small class=\"d-block text-size-12 \">Historical data of your transactions</small> -->\n    </div>\n    <div class=\"wallet_balance\">\n        <p>Pending : <strong style=\"color:#f36\">${{pendingBalance}}.00</strong> </p>\n        <p>Wallet Balance : <strong style=\"color:#10b759 \">${{walletBalance}}.00</strong></p>\n    </div>\n\n    <div class=\"table-container table-responsive table-responsive table-responsive-sm mb-3 \">\n        <div class=\"table-filter-area \">\n            <div class=\"row no-gutters \">\n                <div class=\"col-md-4 form-inline d-none d-md-block \">\n                    <div class=\"form-group mb-2 \">\n                        <label for=\"entries \" class=\" main-txt-color mr-1 \">Show </label>\n                        <select (change)=\"getLedgerDetails($event.target.value,true)\" class=\"form-control main-txt-color bd-color shadow-none \" id=\"entries \">\n                            <option selected>5</option>\n                            <option>10</option>\n                            <option>15</option>\n                            <option>20</option>\n                            <option>25</option>\n                            <option>30</option>\n                            <option>50</option>\n                            <option>100</option>\n                      </select>\n                        <label for=\"entries \" class=\" main-txt-color ml-1 \"> Entries</label>\n                    </div>\n                </div>\n                <div class=\"col-md-3 offset-md-5 \">\n                    <div class=\"form-group \">\n                        <input [(ngModel)]=\"searchText\" type=\"text \" class=\"form-control main-txt-color bd-color shadow-none \" id=\"searchText \" placeholder=\"Enter Keyword to search \" />\n                    </div>\n                </div>\n            </div>\n        </div>\n        <table class=\"table table-hover main-txt-color mb-0 \">\n            <thead class=\"table-header-bg table-header-color \">\n                <tr>\n                    <th [class.active]=\"order === 'sCreadedOn_Str' \" (click)=\"setOrder('sCreadedOn_Str')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Transaction Id</th>\n                    <th [class.active]=\"order === 'Account' \" (click)=\"setOrder('Account')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Timestamp</th>\n                    <th [class.active]=\"order === 'Value' \" (click)=\"setOrder('Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Details</th>\n                    <th [class.active]=\"order === 'oPerc_Value' \" (click)=\"setOrder('oPerc_Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Withdraw</th>\n                    <th [class.active]=\"order === 'oAction' \" (click)=\"setOrder('oAction')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Deposit</th>\n                    <th [class.active]=\"order === 'oAlert_Disable_Trade' \" (click)=\"setOrder('oAlert_Disable_Trade')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Status</th>\n                    <th [class.active]=\"order === 'oAlert_Mail' \" (click)=\"setOrder('oAlert_Mail')\" class=\"font-weight-500 bd-color text-capitalize align-middle align-middle\">Remarks</th>\n                    <th [class.active]=\"order === 'oUP_DOWN' \" (click)=\"setOrder('oUP_DOWN')\" class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Action</th>\n                </tr>\n            </thead>\n            <tbody *ngIf=\"(!IsDataNotFound)\" class=\"secondary-txt-color \">\n                <tr *ngIf=\"(isLoading)\">\n                    <td colspan=\"9\" class=\"text-center\" class=\"align-middle\">\n                        <div class=\"text-size-17 font-weight-300\">Loading ...</div>\n                    </td>\n                </tr>\n                <tr *ngFor=\"let ledger of ledgersDetail | orderBy:order:reverse | filter:searchText | paginate: { itemsPerPage: pageSize, currentPage: p, totalItems: TotalCount}; let i = index\">\n                    <td class=\"align-middle\">{{ledger.uReference}}</td>\n                    <td class=\"align-middle\">{{ledger.sTimestamp?.sCreadedOn_Str | date: 'dd-MM-yyyy hh:mm a'}}</td>\n                    <td class=\"align-middle\">\n                        <span *ngIf=\"ledger.uSource==0\">Neteller</span>\n                        <span *ngIf=\"ledger.uSource==1\">Skrill</span>\n                        <span *ngIf=\"ledger.uSource==2\">Insta mozo</span>\n                        <span *ngIf=\"ledger.uSource==3\">Payee88</span>\n                        <span *ngIf=\"ledger.uSource==4\">Perfect money</span>\n                        <span *ngIf=\"ledger.uSource==5\">Bank wire 1</span>\n                        <span *ngIf=\"ledger.uSource==6\">Bank wire 2</span>\n                        <span *ngIf=\"ledger.uSource==7\">Bank wire 3</span>\n                        <span *ngIf=\"ledger.uSource==8\">Crypto currency</span>\n                        <span *ngIf=\"ledger.uSource==9\">Bank wire 4</span>\n                        <span *ngIf=\"ledger.uSource==10\">Bank wire 5</span>\n                        <span *ngIf=\"ledger.uSource==11\">Bank wire 6</span>\n                    </td>\n                    <td class=\"align-middle\">{{ledger.uTransType==1 ? ledger.uAmount:'-'}}</td>\n                    <td class=\"align-middle\">{{ledger.uTransType==0 ? ledger.uAmount:'-'}}</td>\n                    <td class=\"align-middle\">\n                        <span class=\"badge badge-warning\" *ngIf=\"ledger.uStatus==0\">Pending</span>\n                        <span class=\"badge badge-success\" *ngIf=\"ledger.uStatus==1 && ledger.uComment!='Transaction Claimed '\">Success</span>\n                        <span class=\"badge badge-info\" *ngIf=\"ledger.uComment=='Transaction Claimed '\">Claimed</span>\n                        <span class=\"badge badge-danger\" *ngIf=\"ledger.uStatus==2\">Rejected</span>\n                    </td>\n                    <td class=\"text-center align-middle\">\n                        <i-feather class=\"icon-size-20\" name=\"message-square\" tooltip=\"{{ledger.uComment}}\" placement=\"top\" *ngIf=\"ledger.uComment!=''\"></i-feather>\n                        <i-feather class=\"icon-size-20\" name=\"message-square\" tooltip=\"{{ledger.uAdmMsg}}\" placement=\"top\" *ngIf=\"ledger.uAdmMsg!=''\"></i-feather>\n                    </td>\n                    <td class=\"text-center align-middle\">\n                        <button *ngIf=\"ledger.uStatus==0\" (click)=\"onClaim(ledger.sLedgerId)\" class=\"btn btn-warning btn-sm font-weight-400 text-size-11 btn-sm-padd\" type=\"button\">Claim</button>\n                        <!-- <button *ngIf=\"ledger.uStatus==1\" disabled class=\"btn btn-secondary btn-sm px-3 font-weight-500 text-size-12\" type=\"button\">Not Required</button> -->\n                        <span *ngIf=\"ledger.uStatus==1\"> - </span>\n\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"(IsDataNotFound)\" class=\"text-size-17 font-weight-300 text-center p-4\" style=\"background: #eff3f6;\">There is no wallet to wallet transfer from your Profile</div>\n    </div>\n    <div class=\"table-pagination text-right border-top-0 pt-4\">\n        <pagination-controls (pageChange)=\"getLedgerDetails($event,false)\"></pagination-controls>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal/ngx-bootstrap-modal';\nimport { GlobalService } from '../../../../../shared/services/global.service';\nimport { HttpClient } from '@angular/common/http';\nimport { WithDrawModalData } from '../../../../../shared/models/withdraw.modal';\nimport { NotificationService } from '../../../../../shared/services/notification.service';\n\n@Component({\n  selector: 'app-fund-withdraw',\n  templateUrl: './fund-withdraw.component.html',\n  styleUrls: ['./fund-withdraw.component.scss']\n})\nexport class FundWithdrawComponent implements OnInit {\n  paymentMethodAll: any[] = [];\n  withdraw = new WithDrawModalData();\n  balanceError = false;\n  kycSettingError = false;\n  kycStatusError = false;\n  kycStatus;\n  withDrawSuccess = false;\n  withDrawSuccessMsg = false;\n\n  constructor(private global: GlobalService, private notificationService: NotificationService, private http: HttpClient) {\n    this.kycStatus = JSON.parse(localStorage.getItem('LoggedUser'));\n    this.withdraw.sWalletId = this.global.localDealerwallet;\n    this.withdraw.sDealerID = this.global.localDealerCode;\n  }\n\n  @ViewChild('autoShownModal', { static: false })\n  autoShownModal: ModalDirective;\n  isModalShown = false;\n\n  showModal(uPaySource): void {\n    this.isModalShown = true;\n    this.withdraw.uSource = uPaySource;\n  }\n\n  hideModal(): void {\n    this.autoShownModal.hide();\n  }\n\n  onHidden(): void {\n    this.isModalShown = false;\n  }\n  getPaymentGatewayManual() {\n    const data = {\n      DealerId: 1001\n    };\n    this.global.getManulGateway(data).subscribe(\n      (res: any) => {\n        this.paymentMethodAll = res;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  makeWithdraw(withdrawForm) {\n    console.log(withdrawForm);\n    const walletParans = {\n      sWalletId: this.global.localDealerwallet\n    };\n\n    this.global.getWalletInfo(walletParans).subscribe((resp: any) => {\n      if (resp.uBalance > this.withdraw.uAmount && this.withdraw.uAmount > 0) {\n        const kycSettingParams = {\n          Dealer: this.global.localDealerCode\n        };\n        this.global.getKycset(kycSettingParams).subscribe((kycset: any) => {\n          if (kycset == 3 && this.kycStatus.sProfile.uKYCStatus !== 2) {\n            this.kycSettingError = true;\n            this.notificationService.showWarning('Please update kyc for generating withdraw request', 'Warning');\n            setTimeout(() => {\n              this.kycSettingError = false;\n            }, 10000);\n          } else {\n            this.global.makeManualWithdraw(this.withdraw).subscribe(\n              (withdraw: any) => {\n                this.withDrawSuccess = withdraw.MSG_USER;\n                this.withDrawSuccessMsg = true;\n                // tslint:disable-next-line: max-line-length\n                this.notificationService.showSuccess('Your withdraw request has been generated successfully. please wait for admin approvel', 'Success');\n\n                setTimeout(() => {\n                  this.withDrawSuccessMsg = false;\n                }, 10000);\n              },\n              err => {\n                console.log(err);\n                this.notificationService.showError('unable to generate request for withdraw wallet', 'Error');\n              }\n            );\n          }\n        });\n      } else {\n        this.kycSettingError = false;\n        this.notificationService.showError('Please enter a valid amount', 'Error');\n      }\n    });\n  }\n\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n\n  }\n\n  ngOnInit(): void {\n    this.getPaymentGatewayManual();\n  }\n}\n","<div class=\"small-content-section bg-f\">\n    <div class=\"history-title px-3 border-bottom\">\n        Withdraw From wallet\n        <!-- <small class=\"d-block text-size-12\">You can generate a request from here for withdraw</small> -->\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card border-0 \">\n                <div class=\"card-body border-0 p-0\">\n                    <div class=\"tabs-container\">\n                        <div class=\"tabs-body p-3\">\n                            <div *ngIf=\"isModalShown\" [config]=\"{ show: true }\" (onHidden)=\"onHidden()\" bsModal #autoShownModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-auto-name\">\n                                <div class=\"modal-dialog modal-sm\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h4 id=\"dialog-auto-name\" class=\"modal-title pull-left\"> Withdraw from wallet </h4>\n                                            <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"hideModal()\"><span aria-hidden=\"true\">&times;</span></button>\n                                        </div>\n                                        <div class=\"modal-body\">\n\n                                            <form #withdrawForm=\"ngForm\">\n                                                <div class=\"form-group\">\n                                                    <label for=\"pwd\">Amount</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter Amount\" [(ngModel)]=\"withdraw.uAmount\" name=\"uAmount\" (keypress)=\"numberOnly($event)\" min=\"1\" required>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"pwd\">Payment Details</label>\n                                                    <textarea class=\"form-control\" style=\"height: 100px; width: 100%;resize: vertical;\" [(ngModel)]=\"withdraw.uComment\" name=\"uComment\" required></textarea>\n                                                </div>\n                                            </form>\n                                        </div>\n                                        <div class=\"modal-footer\">\n                                            <button type=\"button\" [disabled]=\"withdrawForm.invalid\" class=\"btn btn-primary btn-sm ml-1\" (click)=\"makeWithdraw(withdrawForm)\">Submit</button>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"table-container table-responsive  mb-3\">\n\n                                <table class=\"table table-hover main-txt-color mb-0\">\n                                    <thead class=\"table-header-bg table-header-color\">\n                                        <tr>\n                                            <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Withdraw Method</th>\n                                            <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Fee/Commission</th>\n                                            <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Processing Time</th>\n                                            <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Withdraw</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody class=\"secondary-txt-color\">\n                                        <tr *ngFor=\"let payment of paymentMethodAll\">\n                                            <!-- <td class=\"gateway_img\">\n                                                <img *ngIf=\"payment.PaySource_Name === 'NETELLER'\" src=\"assets//images/payment_gateway/neteller.png\" alt=\"\">\n                                                <span *ngIf=\"payment.PaySource_Name !== 'NETELLER'\">{{payment.PaySource_Name}}</span>\n                                            </td> -->\n                                            <td>Manual</td>\n                                            <td>---</td>\n                                            <td>---</td>\n                                            <td><button class=\"btn btn-primary btn-sm ml-1\" (click)=\"showModal(payment.uPaySource)\">Withdraw</button></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NotificationService } from './../../../../../shared/services/notification.service';\nimport { HeaderService } from './../../../../../shared/services/header.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {  GlobalService } from '../../../../../shared/services/global.service';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-ledger-details',\n  templateUrl: './ledger-details.component.html',\n  styleUrls: ['./ledger-details.component.scss']\n})\nexport class LedgerDetailsComponent implements OnInit, OnDestroy {\n  public LoggedParams: any;\n  subscription1: Subscription;\n  public walletId;\n  public dealerId;\n  public walletDetails: any;\n  public ledgerDetail: any;\n  public pagination: any;\n  public TotalCount = 0;\n  public cat;\n  public searchText: any; // Search Text property is used to filter text in table\n  public p: any;          // Current page in pagination\n  public pageSize = 10;  // Table Rows Perpage property\n  public sortedData: any[]; // Sorted Product list array\n  public order = '';     // Order property to sort coloum of table\n  public reverse = true; // Reverse property is used to sort table coloum\n  public setParams;\n  constructor(\n    private globalService: GlobalService,\n    private orderPipe: OrderPipe,\n    private headerService: HeaderService,\n    private notificationService: NotificationService\n    ) {\n      this.subscription1 = this.headerService.castLoggedUserDetail.subscribe(\n        resData => (this.LoggedParams = resData)\n      );\n      this.walletId = localStorage.getItem('LoggedDealerwalletID');\n      this.dealerId = localStorage.getItem('LoggedDealerCode');\n      this.sortedData = orderPipe.transform(this.ledgerDetail, this.order);\n  }\n  setOrder(value: string) {\n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n    this.order = value;\n  }\n  onClaim(id: number) {\n    Swal.fire({\n      title: 'Are you Sure!',\n      text: 'Do you really want to Claim Amount? This process cannot be undone',\n      icon: 'error',\n      showCancelButton: true,\n      confirmButtonText: 'Claim',\n      cancelButtonText: 'Cancel',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n        const params = {\n          sDealerID: this.LoggedParams.sProfile.sDealerId,\n          sLedgerId: id,\n          uWalletID: this.LoggedParams.sProfile.sWalletId,\n        };\n        console.log(params);\n        this.globalService.claim(params).subscribe(data => {\n          if (data.Result === true) {\n            this.getLedgerDetails(1, this.cat);\n            Swal.fire(\n              'Claimed!',\n              'Your Amount has been Claimed.',\n              'success'\n            );\n            this.notificationService.showSuccess('Your Amount has been Claimed Successfully', 'Success');\n          }\n        }, err => {\n          console.log(err);\n        });\n      }\n    });\n  }\n  getLedgerDetails(indexval, countVal) {\n    if (countVal) {\n      this.pageSize = indexval;\n      this.p = 1;\n      this.setParams = {\n        WalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Initial: this.p,\n        MaxCount: this.pageSize\n      };\n    } else {\n      this.p = indexval;\n      this.setParams = {\n        WalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Initial:  (this.p - 1) * this.pageSize + 1,\n        MaxCount: this.p * this.pageSize\n      };\n    }\n    this.globalService.getLedger(this.setParams).subscribe((ledger: any) => {\n      console.log(ledger);\n      this.TotalCount = ledger.sLedger.Count;\n      this.ledgerDetail = ledger.sLedger.lstLedger.map(res => {\n        return res;\n      });\n      console.log(this.ledgerDetail);\n    }, err => {\n      console.log(err);\n    });\n  }\n  showEntry() { }\n  getWallet() {\n    const data: any = {\n      sWalletId: this.walletId\n    };\n    this.globalService.getWalletInfo(data).subscribe((wallet: any) => {\n      this.walletDetails = wallet;\n      console.log(this.walletDetails);\n    });\n  }\n  ngOnInit(): void {\n    this.getWallet();\n    this.getLedgerDetails(1, this.cat);\n  }\n  ngOnDestroy() {\n    this.subscription1.unsubscribe();\n  }\n\n}\n","<div class=\"small-content-section bg-f\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card border-0 \">\n                <div class=\"card-body border-0 p-0\">\n                    <div class=\"tabs-container\">\n                        <div class=\"history-title px-3 border-bottom\">Your Transaction History\n                            <!-- <small class=\"d-block text-size-12\">Historical data of your transactions</small> -->\n                        </div>\n                        <div class=\"tabs-body p-2\">\n                            <div class=\"tab-inner-content px-2\">\n                                <div class=\"wallet_balance\">\n                                    <p>Pending : <strong style=\"color:#f36\">${{walletDetails?.uPending}}.00</strong> </p>\n                                    <p>Wallet Balance : <strong style=\"color:#10b759 \">${{walletDetails?.uBalance}}.00</strong></p>\n                                </div>\n                                <div class=\"table-filter-area\">\n                                    <div class=\"row no-gutters\">\n                                        <div class=\"col-md-4 form-inline d-none d-md-block\">\n                                            <div class=\"form-group mb-2\">\n                                                <label for=\"entries\" class=\" main-txt-color mr-1\">Show </label>\n                                                <select (change)=\"getLedgerDetails($event.target.value,true)\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"entries\">\n                                                <option>5</option>\n                                                <option>10</option>\n                                                <option>15</option>\n                                                <option>20</option>\n                                                <option>25</option>\n                                                <option>50</option>\n                                            </select>\n                                                <label for=\"entries\" class=\" main-txt-color ml-1\"> Entries</label>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-3 offset-md-5\">\n                                            <div class=\"form-group\">\n                                                <input [(ngModel)]=\"searchText\" name=\"searchText\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"\" placeholder=\"Enter keyword to search\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"table-container table-responsive\">\n                                    <table class=\"table table-hover main-txt-color mb-0\">\n                                        <thead class=\"table-header-bg table-header-color\">\n                                            <tr>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle\" (click)=\"setOrder('uReference')\">Transaction Id</th>\n                                                <!-- <th class=\"font-weight-500 bd-color text-capitalize align-middle\" (click)=\"setOrder('uReference')\">Reference No.</th> -->\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle\" (click)=\"setOrder('sCreadedOn_Str')\">Timestamp</th>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Details</th>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Withdraw</th>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Deposit</th>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle\" (click)=\"setOrder('uStatus')\">Status</th>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Remarks</th>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Action</th>\n                                            </tr>\n                                        </thead>\n\n                                        <tbody class=\"secondary-txt-color\">\n                                            <tr *ngFor=\"let ledger of ledgerDetail | orderBy:order:reverse | filter:searchText | paginate: { itemsPerPage: pageSize, currentPage: p, totalItems: TotalCount}; let i = index\">\n                                                <td>{{ledger.uReference}}</td>\n                                                <!-- <td>{{ledger.uCMW_Reference}}</td> -->\n                                                <td>{{ledger.sTimestamp?.sCreadedOn_Str | date: 'dd-MM-yyyy hh:mm a'}}</td>\n                                                <td>\n                                                    <span *ngIf=\"ledger.uSource==0\">Neteller</span>\n                                                    <span *ngIf=\"ledger.uSource==1\">Skrill</span>\n                                                    <span *ngIf=\"ledger.uSource==2\">Insta mozo</span>\n                                                    <span *ngIf=\"ledger.uSource==3\">Payee88</span>\n                                                    <span *ngIf=\"ledger.uSource==4\">Perfect money</span>\n                                                    <span *ngIf=\"ledger.uSource==5\">Bank wire 1</span>\n                                                    <span *ngIf=\"ledger.uSource==6\">Bank wire 2</span>\n                                                    <span *ngIf=\"ledger.uSource==7\">Bank wire 3</span>\n                                                    <span *ngIf=\"ledger.uSource==8\">Crypto currency</span>\n                                                    <span *ngIf=\"ledger.uSource==9\">Bank wire 4</span>\n                                                    <span *ngIf=\"ledger.uSource==10\">Bank wire 5</span>\n                                                    <span *ngIf=\"ledger.uSource==11\">Bank wire 6</span>\n                                                </td>\n                                                <td>{{ledger.uTransType==1 ? ledger.uAmount:'-'}}</td>\n                                                <td>{{ledger.uTransType==0 ? ledger.uAmount:'-'}}</td>\n                                                <td>\n                                                    <span class=\"badge badge-warning\" *ngIf=\"ledger.uStatus==0\">Pending</span>\n                                                    <span class=\"badge badge-success\" *ngIf=\"ledger.uStatus==1 && ledger.uComment!='Transaction Claimed '\">Success</span>\n                                                    <span class=\"badge badge-info\" *ngIf=\"ledger.uComment=='Transaction Claimed '\">Claimed</span>\n                                                    <span class=\"badge badge-danger\" *ngIf=\"ledger.uStatus==2\">Rejected</span>\n                                                </td>\n                                                <td class=\"text-center\">\n                                                    <i-feather class=\"icon-size-20\" name=\"message-square\" tooltip=\"{{ledger.uComment}}\" placement=\"top\" *ngIf=\"ledger.uComment!=''\"></i-feather>\n                                                    <i-feather class=\"icon-size-20\" name=\"message-square\" tooltip=\"{{ledger.uAdmMsg}}\" placement=\"top\" *ngIf=\"ledger.uAdmMsg!=''\"></i-feather>\n                                                </td>\n                                                <td class=\"text-center\">\n                                                    <button (click)=\"onClaim(ledger.sLedgerId)\" *ngIf=\"ledger.uStatus==0\" class=\"btn btn-warning btn-sm font-weight-400 text-size-11 btn-sm-padd\" type=\"button\">Claim</button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                                <div class=\"table-pagination text-right border-top-0 pt-4\">\n                                    <pagination-controls (pageChange)=\"getLedgerDetails($event,false)\"></pagination-controls>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { AccountToWalletComponent } from './fund-management-core/fund-transfer/account-to-wallet/account-to-wallet.component';\nimport { AccountToAccountComponent } from './fund-management-core/fund-transfer/account-to-account/account-to-account.component';\nimport { WalletToWalletComponent } from './fund-management-core/fund-transfer/wallet-to-wallet/wallet-to-wallet.component';\nimport { ToAccountComponent } from './fund-management-core/fund-deposit/to-account/to-account.component';\nimport { ToWalletComponent } from './fund-management-core/fund-deposit/to-wallet/to-wallet.component';\nimport { LedgerDetailsComponent } from './fund-management-core/ledger-details/ledger-details.component';\nimport { FundWithdrawComponent } from './fund-management-core/fund-withdraw/fund-withdraw.component';\nimport { FundTransferComponent } from './fund-management-core/fund-transfer/fund-transfer.component';\nimport { FundDepositComponent } from './fund-management-core/fund-deposit/fund-deposit.component';\nimport { FundManagementCoreComponent } from './fund-management-core/fund-management-core.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FundManagementCoreComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'deposit-funds'\n      },\n      {\n        path: 'deposit-funds',\n        component: FundDepositComponent,\n        data: {breadcrumb: 'Deposit Funds'},\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'deposit-to-wallet',\n          },\n          {\n            path: 'deposit-to-wallet',\n            component: ToWalletComponent,\n            data: {title: 'Deposit Funds', breadcrumb: 'Deposit To Wallet'}\n          },\n          {\n            path: 'deposit-to-account',\n            component: ToAccountComponent,\n            data: {title: 'Deposit Funds', breadcrumb: 'Deposit To Account'}\n          },\n        ]\n      },\n      {\n        path: 'transfer-funds',\n        component: FundTransferComponent,\n        data: {breadcrumb: 'Transfer Funds'},\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'wallet-to-wallet'\n          },\n          {\n            path: 'wallet-to-wallet',\n            component: WalletToWalletComponent,\n            data: {title: 'Transfer Funds', breadcrumb: 'Wallet To Wallet'}\n          },\n          {\n            path: 'account-to-account',\n            component: AccountToAccountComponent,\n            data: {title: 'Transfer Funds', breadcrumb: 'Account To Account'}\n          },\n          {\n            path: 'account-to-wallet',\n            component: AccountToWalletComponent,\n            data: {title: 'Transfer Funds', breadcrumb: 'Account To Wallet'}\n          },\n        ]\n      },\n      {\n        path: 'withdraw-funds',\n        component: FundWithdrawComponent,\n        data: {title: 'Withdraw Funds', breadcrumb: 'Withdraw Funds'}\n      },\n      {\n        path: 'ledger-overview',\n        component: LedgerDetailsComponent,\n        data: {title: 'Ledger Overview', breadcrumb: 'Ledger Overview'}\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FundManagementRoutingModule { }\n","import { SharedModule } from './../../../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AlertModule } from 'ngx-bootstrap/alert';\n\nimport { FundManagementRoutingModule } from './fund-management-routing.module';\nimport { FundManagementCoreComponent } from './fund-management-core/fund-management-core.component';\nimport { FundDepositComponent } from './fund-management-core/fund-deposit/fund-deposit.component';\nimport { ToWalletComponent } from './fund-management-core/fund-deposit/to-wallet/to-wallet.component';\nimport { ToAccountComponent } from './fund-management-core/fund-deposit/to-account/to-account.component';\nimport { FundWithdrawComponent } from './fund-management-core/fund-withdraw/fund-withdraw.component';\nimport { LedgerDetailsComponent } from './fund-management-core/ledger-details/ledger-details.component';\nimport { FundTransferComponent } from './fund-management-core/fund-transfer/fund-transfer.component';\nimport { WalletToWalletComponent } from './fund-management-core/fund-transfer/wallet-to-wallet/wallet-to-wallet.component';\nimport { AccountToAccountComponent } from './fund-management-core/fund-transfer/account-to-account/account-to-account.component';\nimport { AccountToWalletComponent } from './fund-management-core/fund-transfer/account-to-wallet/account-to-wallet.component';\n\n\n@NgModule({\n  declarations: [\n    FundManagementCoreComponent,\n    FundDepositComponent,\n    ToWalletComponent,\n    ToAccountComponent,\n    FundWithdrawComponent,\n    LedgerDetailsComponent,\n    FundTransferComponent,\n    WalletToWalletComponent,\n    AccountToAccountComponent,\n    AccountToWalletComponent],\n  imports: [\n    CommonModule,\n    FundManagementRoutingModule,\n    SharedModule,\n    AlertModule.forRoot(),\n  ]\n})\nexport class FundManagementModule { }\n","export class DepositWalletModalData {\r\n    uCommission: number | undefined | null;\r\n    uAmount: number | undefined | null;\r\n    uComment: string | undefined | null;\r\n    sWalletId: string | undefined | null;\r\n    sDealerID: string | undefined | null;\r\n    sProcessedBy: number | undefined | null;\r\n    uSourceInfo: string | undefined | null;\r\n    uReceipt_Snap: string | undefined | null;\r\n    uBalance: number | undefined | null;\r\n    uSource: number | undefined | null;\r\n    uStatus: number | undefined | null;\r\n    sTimestamp = {\r\n      sCreatedOn_Str: new Date(),\r\n      sUpdatedOn_Str: new Date()\r\n    }\r\n   constructor() {\r\n    this.uCommission = 0;\r\n    this.uAmount = 0;\r\n    this.uComment = '';\r\n    this.sWalletId = '';\r\n    this.sDealerID = '';\r\n    this.sProcessedBy = 0;\r\n    this.uSourceInfo = '';\r\n    this.uReceipt_Snap = '';\r\n    this.uBalance = 0;\r\n    this.uSource = 0;\r\n    this.uStatus = 0;\r\n   }\r\n  };","export class WithDrawModalData {\r\n    uCommission: number | undefined | null;\r\n    uAmount: number | undefined | null;\r\n    uComment: string | undefined | null;\r\n    sWalletId: string | undefined | null;\r\n    sDealerID: string | undefined | null;\r\n    sProcessedBy: number | undefined | null;\r\n    uSourceInfo: string | undefined | null;\r\n    uReceipt_Snap: string | undefined | null;\r\n    uBalance: number | undefined | null;\r\n    uSource: number | undefined | null;\r\n    uStatus: number | undefined | null;\r\n    sTimestamp = {\r\n      sCreatedOn_Str: new Date(),\r\n      sUpdatedOn_Str: new Date()\r\n    }\r\n   constructor() {\r\n    this.uCommission = 0;\r\n    this.uAmount = 0;\r\n    this.uComment = '';\r\n    this.sWalletId = '';\r\n    this.sDealerID = '';\r\n    this.sProcessedBy = 0;\r\n    this.uSourceInfo = '';\r\n    this.uReceipt_Snap = '';\r\n    this.uBalance = 0;\r\n    this.uSource = 0;\r\n    this.uStatus = 0;\r\n   }\r\n  }\r\n"]}