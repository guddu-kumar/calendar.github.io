{"version":3,"sources":["./src/app/pages/client-core/fund-management/fund-management-core/fund-deposit/fund-deposit.component.ts","./src/app/pages/client-core/fund-management/fund-management-core/fund-deposit/fund-deposit.component.html","./src/app/pages/client-core/fund-management/fund-management-core/fund-deposit/to-account/to-account.component.ts","./src/app/pages/client-core/fund-management/fund-management-core/fund-deposit/to-account/to-account.component.html","./src/app/pages/client-core/fund-management/fund-management-core/fund-deposit/to-wallet/to-wallet.component.ts","./src/app/pages/client-core/fund-management/fund-management-core/fund-deposit/to-wallet/to-wallet.component.html","./src/app/pages/client-core/fund-management/fund-management-core/fund-management-core.component.ts","./src/app/pages/client-core/fund-management/fund-management-core/fund-management-core.component.html","./src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/account-to-account/account-to-account.component.ts","./src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/account-to-account/account-to-account.component.html","./src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/account-to-wallet/account-to-wallet.component.ts","./src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/account-to-wallet/account-to-wallet.component.html","./src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/fund-transfer.component.ts","./src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/fund-transfer.component.html","./src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/wallet-to-wallet/wallet-to-wallet.component.ts","./src/app/pages/client-core/fund-management/fund-management-core/fund-transfer/wallet-to-wallet/wallet-to-wallet.component.html","./src/app/pages/client-core/fund-management/fund-management-core/fund-withdraw/fund-withdraw.component.ts","./src/app/pages/client-core/fund-management/fund-management-core/fund-withdraw/fund-withdraw.component.html","./src/app/pages/client-core/fund-management/fund-management-core/ledger-details/ledger-details.component.ts","./src/app/pages/client-core/fund-management/fund-management-core/ledger-details/ledger-details.component.html","./src/app/pages/client-core/fund-management/fund-management-routing.module.ts","./src/app/pages/client-core/fund-management/fund-management.module.ts","./src/app/shared/models/deposit-wallet.modal.ts","./src/app/shared/models/withdraw.modal.ts"],"names":[],"mappings":"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","file":"client-core-fund-management-fund-management-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fund-deposit',\n  templateUrl: './fund-deposit.component.html',\n  styleUrls: ['./fund-deposit.component.scss']\n})\nexport class FundDepositComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"small-content-section bg-f\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card border-0 \">\r\n                <div class=\"card-body border-0 p-0\">\r\n                    <div class=\"tabs-container\">\r\n                        <ul class=\"tabs-heading d-flex flex-row border-bottom\">\r\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\r\n                                <a class=\"\" routerLink=\"/home/money/deposit-funds/deposit-to-wallet\">\r\n                                    <span class=\"material-icons\">account_balance_wallet</span>\r\n                                    <span class=\"tab-text\">Deposit To Wallet</span>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\r\n                                <a class=\"\" routerLink=\"/home/money/deposit-funds/deposit-to-account\">\r\n                                    <span class=\"material-icons\">museum</span>\r\n                                    <span class=\"tab-text\"> Deposit  To Account</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <div class=\"tabs-body p-2\">\r\n                            <router-outlet></router-outlet>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NotificationService } from './../../../../../../shared/services/notification.service';\n\n\nimport { HeaderService } from './../../../../../../shared/services/header.service';\nimport { resolve } from 'url';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../shared/services/global.service';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-to-account',\n  templateUrl: './to-account.component.html',\n  styleUrls: ['./to-account.component.scss']\n})\nexport class ToAccountComponent implements OnInit {\n  public isLoading = false;\n  public walletToWalletLedger = [];\n  public walletId: string;\n  public dealerId: string;\n  public isVisibleFormArea = false;\n  @ViewChild('formData', {static: false}) fundTransactionForm: NgForm;\n  LoggedParams: any;\n  accountSubscription: Subscription;\n  availableBalance: number;\n  senderEmailId: string;\n  messageToDisplay: string;\n  ErrorMsqBlock = false;\n  successMsqBlock = false;\n  liveAccountData: any[] = [];\n  selectedAccount: any;\n\n  // pagination Setting\n  searchText: any; // Search Text property is used to filter text in table\n\n  constructor(\n    private globalService: GlobalService,\n    private headerService: HeaderService,\n    private notificationService: NotificationService\n    ) {\n      this.LoggedParams = JSON.parse(localStorage.getItem('LoggedUser'));\n      this.walletId = localStorage.getItem('LoggedDealerwalletID');\n      this.dealerId = localStorage.getItem('LoggedDealerCode');\n      this.senderEmailId = this.LoggedParams.sProfile.uContactInfo.Email;\n    }\n  toggleFormArea() {\n    this.isVisibleFormArea = !this.isVisibleFormArea;\n  }\n\n  ngOnInit(): void {\n    this.getProfileAccounts();\n  }\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n\n  }\n  getProfileAccounts() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n      LoginId: this.LoggedParams.sProfile.sMasterId\n    };\n    this.accountSubscription = this.globalService.GET_PROFILE_ACCOUNTS(params).subscribe(\n      data => {\n        // this.liveAccountData = data.lstAccount.map( acc => {\n        //   if (acc) {\n        //     return acc.sUserInfo;\n        //   }\n        // });\n        this.liveAccountData = data.lstAccount.map( acc => {\n          if (acc) {\n            return Object.assign(acc.sUserInfo, acc.sAccountPlan);\n          }\n        });\n        console.log( this.liveAccountData);\n      }\n    );\n  }\n  autoCloseMsqBlock() {\n    setTimeout(() => {\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n  onCloseMsqBlock() {\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = false;\n    this.messageToDisplay = '';\n  }\n  onSuccessMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.ErrorMsqBlock = false;\n    this.successMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  onErrorMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n\n\n  // Check KYC is Required or not\n  isKYCRequired() {\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      const params = {\n        Dealer: this.LoggedParams.sProfile.sDealerId\n      };\n      // Call getKycset function to check KYC setting\n      this.globalService.getKycset(params).subscribe(data => {\n        console.warn('KYC Settings = ' + data);\n        if (data && data === 3) {\n          // console.warn('KYC Required');\n          resolve(true);\n         } else if (data && data === 1 || data === 2) {\n          // console.warn('KYC Not Required');\n          resolve(false);\n         } else if (data || data === 0) {\n          // console.warn('KYC Not Required');\n          resolve(false);\n        } else {\n          reject('KYC Settings Not Found .....');\n        }\n      });\n    });\n  }\n\n// IS KYC Approved If KYC required\nisKYCApproved() {\n  const params = {\n    KYCStatus: this.LoggedParams.sProfile.uKYCStatus,\n  };\n  // tslint:disable-next-line: no-shadowed-variable\n  return new Promise((resolve, reject) => {\n    if (params.KYCStatus) {\n      if (params.KYCStatus !== 2) {\n        // console.warn('Your KYC Is Not Approved');\n        this.onErrorMsqDisplay('KYC is required to make Transaction In Wallet to Wallet!');\n        // Swal.fire('Oops...', 'KYC is required to make Transaction In Wallet to Wallet!', 'error');\n        resolve(false);\n        this.displayKYCPopup();\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n      } else {\n        // console.warn('Your KYC IS approved');\n        resolve(true);\n      }\n    } else {\n      reject('KYC Status Not Found ....');\n    }\n  });\n}\n\n  displayKYCPopup() {\n    Swal.fire({\n      title: 'Please update KYC First!',\n      text: 'Your KYC is not Verified. You will not be able to make Transaction without KYC Approved!',\n      icon: 'error',\n      showCancelButton: false,\n      confirmButtonText: 'Show me the way',\n      cancelButtonText: 'No, keep it',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n          this.globalService.redirect('/home/documents/kyc-upload');\n      }\n    });\n  }\n     // Check Fund Balance on MT4Account before make a Transaction\n     isBalanceAvaliable(formData: any) {\n      // tslint:disable-next-line: no-shadowed-variable\n      return new Promise((resolve, reject) => {\n         console.log(formData.amount);\n         this.selectedAccount = this.liveAccountData.filter((acc) => {\n            if (acc.MT4Account === formData.account) {\n             return acc;\n            }\n          });\n         const params = {\n             sWalletId: this.walletId\n            };\n         this.globalService.getWalletInfo(params).subscribe(data => {\n              console.log(data);\n              if (data) {\n                console.warn('Avaliable Balance = ' + data.uBalance);\n                console.warn('Transfer Amount = ' + data.uBalance);\n                if (formData.amount <= data.uBalance) {\n                  resolve(true);\n                } else {\n                  // this.onErrorMsqDisplay('Please maintain Sufficient Balance in your Wallet before make a Transaction ');\n                  this.notificationService.showError('You have not sufficient Balance in your Wallet', 'Error');\n                  resolve(false);\n                  this.isLoading = false;\n                  this.autoCloseMsqBlock();\n                }\n              } else {\n                reject('Balance Not Found .....');\n              }\n            });\n        });\n    }\n\n    depositMt4Account(formData: any) {\n      // console.log('makeWalletTransfer function excuted');\n      console.log( this.LoggedParams.sProfile.sWalletId);\n      console.log( this.LoggedParams.sProfile.sDealerId);\n      const params = {\n        uCommission: 0,\n        Amount: formData.amount,\n        Comment: formData.comment,\n        uWalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerId: this.LoggedParams.sProfile.sDealerId,\n        UuAccount: formData.account,\n        ManagerIndex:  this.selectedAccount[0].uManager,\n        uSource: 0,\n        uTransType: 0,\n      };\n      this.globalService.walletTrans(params).subscribe(data => {\n        if (data.oStatus === true) {\n          //  this.onSuccessMsqDisplay(data.oStatus);\n              // tslint:disable-next-line: max-line-length\n           this.notificationService.showSuccess(`You have transferred ${formData.amount} dollar in your account ${formData.account} from wallet id ${this.LoggedParams.sProfile.sWalletId} successfully `, 'Success');\n           this.headerService.getUserWalletDetail();\n           this.isLoading = false;\n          //  this.fundTransactionForm.reset();\n           this.autoCloseMsqBlock();\n        } else {\n          // this.onErrorMsqDisplay('Failed To Make Transaction');\n          this.notificationService.showError('Failed To Make Transaction', 'Error');\n          this.isLoading = false;\n          this.autoCloseMsqBlock();\n        }\n      });\n     }\n    onSubmit() {\n      this.isLoading = true;\n      this.onCloseMsqBlock();\n    // Get Form Field Data on Submit\n      const formData = {\n        account: this.fundTransactionForm.value.account,\n        amount: this.fundTransactionForm.value.amount,\n        comment: this.fundTransactionForm.value.comment\n      };\n\n      if (0 >= this.fundTransactionForm.value.amount) {\n        // this.onErrorMsqDisplay(`${this.fundTransactionForm.value.amount} is not a Valid Number in Amount Field`);\n        this.notificationService.showError(`${this.fundTransactionForm.value.amount} is not a Valid Number in Amount Field`, 'Error');\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n        return;\n      }\n\n      this.isBalanceAvaliable(formData).then((resData) => {\n        if (resData) {\n          this.isKYCRequired().then((KYCResponse) => {\n            // console.warn('Is KYC Required = ' + KYCResponse);\n            if (KYCResponse) {\n              this.isKYCApproved().then((approvalReponse) => {\n                if (approvalReponse) {\n                  // console.log('w2w function excuted');\n                  this.depositMt4Account(formData);\n                }\n              }).catch((err) => {\n                console.error(err);\n                // this.onErrorMsqDisplay(err);\n                this.notificationService.showError('Failed To Make Transaction', 'Error');\n              });\n            } else {\n              this.depositMt4Account(formData);\n              // console.log('w2w function excuted');\n            }\n           }).catch((err) => {\n            console.error(err);\n            // this.onErrorMsqDisplay(err);\n            this.notificationService.showError('Failed To Make Transaction', 'Error');\n           });\n        }\n\n      }).catch((err) => {\n        console.error(err);\n        // this.onErrorMsqDisplay(err);\n        this.notificationService.showError('Failed To Make Transaction', 'Error');\n      });\n     }\n  // tslint:disable-next-line: use-lifecycle-interface\n  ngOnDestroy() {\n    this.accountSubscription.unsubscribe();\n  }\n}\n\n// import { Component, OnInit } from '@angular/core';\nimport { DepositAccountModalData } from '../../../../../../shared/models/deposit-account.modal';\n// import { GlobalService } from '../../../../../../shared/services/global.service';\n\n// @Component({\n//   selector: 'app-to-account',\n//   templateUrl: './to-account.component.html',\n//   styleUrls: ['./to-account.component.scss']\n// })\n// export class ToAccountComponent implements OnInit {\n// deposit = new DepositAccountModalData();\n// profileAccounts: any[] = [];\n// errorDeposit: string;\n// showError = false;\n// showSuccess = false;\n// balanceError = false;\n// kycSettingError = false;\n// kycStatus;\n\n//   constructor(private global: GlobalService) {\n//     this.kycStatus = JSON.parse(localStorage.getItem('LoggedUser'));\n//     this.deposit.uWalletId = this.global.localDealerwallet;\n//     this.deposit.DealerId = this.global.localDealerCode;\n//     this.deposit.ManagerIndex = 104;\n\n//   }\n\n//   profileAccount() {\n//     const data = {\n//       ProfileId: localStorage.getItem('LoggedDealermasterid'),\n//       LoginId:  localStorage.getItem('LoggedDealermasterid')\n//     };\n\n//     this.global.getProfileAccounts(data).subscribe((res: any) => {\n\n//       this.profileAccounts = res.lstAccount.map(data => {\n//         if (data) {\n\n//           return data.sUserInfo;\n//         }\n//       });\n\n//     });\n//   }\n\n//   getMnagerIndex(){\n//     const data = {\n//       ProfileId: localStorage.getItem('LoggedDealermasterid'),\n//       LoginId:  localStorage.getItem('LoggedDealermasterid')\n//     };\n\n//     this.global.getProfileAccounts(data).subscribe((res: any) => {\n//       this.profileAccounts = res.lstAccount.filter( (account: any) => {\n\n//           return Object.assign(account.sAccountPlan, account.sUserInfo);\n\n//       });\n//       console.log(this.profileAccounts);\n//     }, err => {\n//       console.log(err);\n//     });\n\n//   }\n\n//   onChangeGetAccount(acc){\n//     this.profileAccounts.find(manager => {\n//       if (manager.sUserInfo.MT4Account == acc) {\n//         this.deposit.ManagerIndex = manager.sAccountPlan.uManager;\n//       }\n//     });\n//   }\n\n//   depositeAccount() {\n\n//   const walletParans = {\n//       sWalletId: this.global.localDealerwallet\n//     };\n\n//   this.global.getWalletInfo(walletParans).subscribe((resp: any) => {\n//       if (resp.uBalance > this.deposit.Amount) {\n//         const kycSettingParams = {\n//           Dealer: this.global.localDealerCode\n//         };\n//         this.global.getKycset(kycSettingParams).subscribe((kycset: any) => {\n//           if (kycset == 2 && this.kycStatus.sProfile.uKYCStatus !== 2) {\n//             this.balanceError = false;\n//             this.kycSettingError = true;\n//             setTimeout(() => {\n//               this.kycSettingError = false;\n//             }, 10000);\n//           } else {\n//             this.global.walletTrans(this.deposit).subscribe((res: any) => {\n\n//               if(res.oStatus == false) {\n//                 this.kycSettingError = false;\n//                 this.balanceError = false;\n//                 this.showError = true;\n//                 setTimeout(() => { this.showError = false; }, 10000);\n//               } else {\n//                 this.kycSettingError = false;\n//                 this.balanceError = false;\n//                 this.showSuccess = true;\n//                 setTimeout(() => { this.showSuccess = false; }, 10000);\n//               }\n//          },\n//          err => {\n//            console.log(err);\n//          });\n//           }\n//         });\n//       } else {\n//         this.showError = false;\n//         this.showSuccess = false;\n//         this.kycSettingError = false;\n//         this.balanceError = true;\n//         setTimeout(() => {\n//           this.balanceError = false;\n//         }, 10000);\n//       }\n//     });\n//   }\n\n//     ngOnInit(): void {\n//       this.getMnagerIndex();\n//       this.profileAccount();\n\n// }\n\n\n\n// }\n\n","<div class=\"transaction-form-container\">\n    <!-- <div class=\"transaction-form-container\"> -->\n    <div class=\"traction-from-box bg-b\">\n        <div class=\"heading\">\n            <div class=\"title text-size-15\">Deposit In Account</div>\n            <small>All fields are required to make deposit in Account</small>\n        </div>\n        <!-- Success Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n                    <strong>Success -: </strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n                    <strong>Oops... : </strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <form class=\"\" (ngSubmit)=\"onSubmit()\" #formData=\"ngForm\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"\" for=\"account\">Account Number</label>\n                        <span class=\"asterick\">*</span>\n                        <select required ngModel #account=\"ngModel\" name=\"account\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"account\">\n                            <option class=\"text-size-13\" value=\"\" [disabled]=\"true\" >Select Account Number</option>\n                            <option class=\"text-size-13\" *ngFor=\"let acc of liveAccountData\" name=\"accounts\" [ngValue]=\"acc.MT4Account\">{{acc.MT4Account}}</option>\n                        </select>\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!account.valid && account.touched  \">Please Enter a valid Account Number</span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"main-txt-color\" for=\"amount\">Amount</label>\n                        <span class=\"asterick\">*</span>\n                        <input (keypress)=\"numberOnly($event)\" min=\"1\" required ngModel #amount=\"ngModel\" name=\"amount\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"amount\" placeholder=\"Enter Amount\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!amount.valid && amount.touched  \">Please Enter a valid Amount</span>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-8\">\n                    <div class=\"form-group\">\n                        <label class=\"main-txt-color\" for=\"comment\">Comment</label>\n                        <span class=\"asterick\">*</span>\n                        <input required ngModel #comment=\"ngModel\" name=\"comment\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"comment\" placeholder=\"Enter Comment\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!comment.valid && comment.touched  \">Please enter a comment</span>\n                    </div>\n                </div>\n                <div class=\"col-md-2\">\n                    <div class=\"position-relative\" style=\"padding-top:29px;\">\n                        <button [disabled]=\"(!formData.valid || isLoading )\" class=\"btn btn-primary btn-sm px-3 position-relative\">\n                            <span [class.btn-spinner]=\"isLoading\"></span> Submit </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n<!-- <div class=\"transaction-form-container\">\n    <div class=\"traction-from-box bg-b\">\n        <div class=\"heading\">\n            <div class=\"title\">Deposit In Account</div>\n            <small>All field are required to make Transaction in  Wallet to Wallet</small>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <alert type=\"danger\" *ngIf=\"balanceError\">\n                            <strong>Warning ! </strong> you do not have sufficient balance for this transaction\n                        </alert>\n                        <alert type=\"danger\" *ngIf=\"kycSettingError\">\n                            <strong>Warning ! </strong>\n                            <h4>Please update KYC's First</h4>\n                            After KYC Verification You will be Able to Login With All Functionalities\n                        </alert>\n                        <alert type=\"danger\" *ngIf=\"showError\">\n                            <strong>Warning! </strong> Failed to make depoist\n                        </alert>\n                        <alert type=\"success\" *ngIf=\"showSuccess\">\n                            <strong>Success !</strong> Deposit request process successfully\n                        </alert>\n                    </div>\n                </div>\n                <form #depositAccount=\"ngForm\" (ngSubmit)=\"depositeAccount()\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"account\">Account</label> <span class=\"asterick\">*</span>\n                                <select required [(ngModel)]=\"deposit.UuAccount\" #acount=\"ngModel\" name=\"UuAccount\" class=\"form-control\" (change)=\"onChangeGetAccount($event.target.value)\">\n                                    <option class=\"text-size-13\" value=\"\" disabled=\"true\">Select account</option>\n                                     <option class=\"text-size-13\" *ngFor=\"let account of profileAccounts\" [ngValue]=\"account.MT4Account\">{{account.MT4Account}}</option>\n                                </select>\n                                <span class=\"help-block text-danger \" *ngIf=\"!acount.valid && acount.touched  \">Please Select an Account Number</span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"pwd\">Amount</label> <span class=\"asterick\">*</span>\n                                <input required #amount type=\"number\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter Amount\" [(ngModel)]=\"deposit.Amount\" name=\"Amount\">\n                                <span class=\"help-block text-danger \" *ngIf=\"!amount.valid && amount.touched  \">Please Enter a valid Account Number</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-5\">\n                            <div class=\"form-group\">\n                                <label for=\"pwd\">Comment</label> <span class=\"asterick\">*</span>\n                                <input required #comment type=\"text\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter Comment\" [(ngModel)]=\"deposit.Comment\" name=\"Comment\">\n                                <span class=\"help-block text-danger \" *ngIf=\"!comment.valid && comment.touched  \">Please enter an comment</span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-1\">\n                            <div class=\"position-relative\" style=\"padding-top: 25px;\">\n                                <button type=\"submit\" [disabled]=\"depositAccount.invalid\" class=\"btn btn-primary btn-sm px-4 py-2 position-relative\">Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div> -->","import { NotificationService } from './../../../../../../shared/services/notification.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { DepositWalletModalData } from '../../../../../../shared/models/deposit-wallet.modal';\nimport { GlobalService } from '../../../../../../shared/services/global.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-to-wallet',\n  templateUrl: './to-wallet.component.html',\n  styleUrls: ['./to-wallet.component.scss']\n})\nexport class ToWalletComponent implements OnInit {\n  // sender\n  deposit = new DepositWalletModalData();\n  dealerId;\n  walletId;\n  paymentMethodAll: any[] = [];\n  depositError: string;\n  kycStatus;\n\n  balanceError = false;\n  kycSettingError = false;\n  kycStatusError = false;\n  withDrawSuccess = '';\n  withDrawSuccessMsg = false;\n\n  constructor(\n    private global: GlobalService,\n    private http: HttpClient,\n    private notificationService: NotificationService,\n    ) {\n    this.kycStatus = JSON.parse(localStorage.getItem('LoggedUser'));\n    this.deposit.sDealerID = localStorage.getItem('LoggedDealerCode');\n    this.deposit.sWalletId = localStorage.getItem('LoggedDealerwalletID');\n  }\n  @ViewChild('autoShownModal', { static: false }) autoShownModal: ModalDirective;\n  isModalShown = false;\n  showModal(paySourceName, uPaySource): void {\n    this.isModalShown = true;\n  }\n  hideModal(): void {\n    this.autoShownModal.hide();\n  }\n  // makeManualDeposit GET_PAYMENT_GATEWAY_MANUAL_ALL\n  onHidden(): void {\n    this.isModalShown = false;\n  }\ngetPaymentGatewayManual() {\n  const data = {\n    DealerId: this.deposit.sDealerID\n  };\n  this.global.getManulGateway(data).subscribe((res: any) => {\n  this.paymentMethodAll = res;\n  }, err => {\n    console.log(err);\n  });\n}\n  encodeImageFileAsURL(element: HTMLInputElement) {\n    console.log(element);\n    // tslint:disable-next-line: no-var-keyword\n    var file = element.files[0];\n    // tslint:disable-next-line: no-var-keyword\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      console.log('RESULT', reader.result);\n      const data = {\n        App: 'uploadReceit',\n        oData: reader.result\n      };\n    // tslint:disable-next-line: max-line-length\n      this.http.post('http://client.traderscabinet.com/tr_test/assets/PHP/alfa/v1/common/UploadDipositPaymentReceipt', data).subscribe((res: any) => {\n        this.deposit.uReceipt_Snap = res.resp.url;\n        console.log(this.deposit.uReceipt_Snap);\n      });\n    };\n  }\n  makeDeposit() {\n    const walletParans = {\n      sWalletId: this.global.localDealerwallet\n    };\n    if (this.deposit.uAmount === 0){\n      this.notificationService.showError('Please enter a valid amount', 'Error');\n      return false;\n    \n    }\n    // this.global.getWalletInfo(walletParans).subscribe((resp: any) => {\n    //   if (resp.uBalance > this.deposit.uAmount) {\n        const kycSettingParams = {\n          Dealer: this.global.localDealerCode\n        };\n        this.global.getKycset(kycSettingParams).subscribe((kycset: any) => {\n          // tslint:disable-next-line: triple-equals\n          if (kycset == 2 && this.kycStatus.sProfile.uKYCStatus !== 2) {\n            // this.balanceError = false;\n            // this.kycSettingError = true;\n            this.notificationService.showError('KYC is required to deposit amount in Wallet!', 'Error');\n            // setTimeout(() => {\n            //   this.kycSettingError = false;\n            // }, 10000);\n          } else {\n            this.global.makeManualDeposit(this.deposit).subscribe((res: any) => {\n              console.log(res);\n              this.withDrawSuccess = `${res.MSG_USER} with Reference Id: ${res.Reference}`;\n              // this.withDrawSuccessMsg = true;\n              // tslint:disable-next-line: max-line-length\n              this.notificationService.showSuccess(`Your manual request has been generated successfully with Reference Id: ${res.Reference}. Please wait for admin approval`, 'Success');\n              // setTimeout(() => {\n              //   this.withDrawSuccessMsg = false;\n              // }, 10000);\n              setTimeout(() => {\n                this.hideModal();\n              }, 10000);\n\n            }, err => {\n              console.log(err);\n              // this.kycSettingError = false;\n              // this.balanceError = true;\n              // setTimeout(() => {\n              //   this.balanceError = false;\n              // }, 10000);\n              // this.notificationService.showError('you do not have sufficient balance for this transaction', 'Error');\n            });\n          }\n        });\n      // } else {\n      //   // this.kycSettingError = false;\n      //   // this.balanceError = true;\n      //   this.notificationService.showError('you do not have sufficient balance for this transaction', 'Error');\n      //   // setTimeout(() => {\n      //   //   this.balanceError = false;\n      //   // }, 10000);\n      // }\n    // });\n  }\n  ngOnInit(): void {\n    this.getPaymentGatewayManual();\n  }\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n\n  }\n\n}\n","<div *ngIf=\"isModalShown\" [config]=\"{ show: true }\" (onHidden)=\"onHidden()\" bsModal #autoShownModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-auto-name\">\n    <div class=\"modal-dialog modal-sm\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4 id=\"dialog-auto-name\" class=\"modal-title pull-left\"> Deposit To wallet </h4>\n                <small class=\"text-size-13\">Already Made a Payment, Please Attach the Payment Info & Receipt</small>\n                <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"hideModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n            </div>\n            <div class=\"modal-body\">\n                <alert type=\"danger\" *ngIf=\"balanceError\">\n                    <strong></strong> you do not have sufficient balance for this transaction\n                </alert>\n                <alert type=\"danger\" *ngIf=\"kycSettingError\">\n                    <strong></strong> KYC is required to deposit amount in Wallet!\n                </alert>\n                <alert type=\"success\" *ngIf=\"withDrawSuccessMsg\">\n                    <strong></strong> {{withDrawSuccess}}\n                </alert>\n                <form #depositWallet=\"ngForm\">\n                    <div class=\"form-group\">\n                        <label for=\"pwd\">Amount</label>\n                        <input (keypress)=\"numberOnly($event)\" min=\"1\" type=\"text\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter Amount\" [(ngModel)]=\"deposit.uAmount\" name=\"uAmount\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"pwd\">Upload Receipt</label>\n                        <input style=\"padding: 4px;\" type=\"file\" class=\"form-control\" (change)=\"encodeImageFileAsURL(file)\" #file id=\"pwd\" placeholder=\"Enter password\" [(ngModel)]=\"deposit.uReceipt_Snap\" name=\"uReceipt_Snap\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"pwd\">Comment</label>\n                        <textarea class=\"form-control\" style=\"height: 100px; width: 100%;resize: vertical;\" [(ngModel)]=\"deposit.uComment\" name=\"uComment\" required></textarea>\n                    </div>\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" [disabled]=\"depositWallet.invalid\" class=\"btn btn-primary btn-sm ml-1\" (click)=\"makeDeposit()\">Submit</button>\n            </div>\n\n        </div>\n    </div>\n</div>\n<div class=\"tab-inner-content\">\n    <div class=\"table-container table-responsive  mb-3\">\n        <table class=\"table table-hover main-txt-color mb-0 border border-0\">\n            <thead class=\"table-header-bg table-header-color\">\n                <tr>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Transfer Method</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Fee/Commission</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Processing Time</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Deposit</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Ledger</th>\n                </tr>\n            </thead>\n            <tbody class=\"secondary-txt-color\">\n                <tr *ngFor=\"let payment of paymentMethodAll\">\n                    <td class=\"gateway_img\">\n                        <img *ngIf=\"payment.PaySource_Name === 'NETELLER'\" src=\"assets//images/payment_gateway/neteller.png\" alt=\"\">\n                        <span *ngIf=\"payment.PaySource_Name !== 'NETELLER'\">{{payment.PaySource_Name}}</span>\n                    </td>\n                    <td>No Commission</td>\n                    <td>Instant</td>\n                    <td class=\"text-center\"><button class=\"btn btn-primary btn-sm ml-1 px-3\" (click)=\"showModal(payment.PaySource_Name,payment.uPaySource)\">Deposit</button></td>\n                    <td class=\"text-center\"><button class=\"btn btn-primary btn-sm ml-1 px-3\" routerLink=\"/home/money/ledger-overview\">Ledger</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fund-management-core',\n  templateUrl: './fund-management-core.component.html',\n  styleUrls: ['./fund-management-core.component.scss']\n})\nexport class FundManagementCoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NotificationService } from './../../../../../../shared/services/notification.service';\nimport { HeaderService } from './../../../../../../shared/services/header.service';\nimport { resolve } from 'url';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../shared/services/global.service';\nimport { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-account-to-account',\n  templateUrl: './account-to-account.component.html',\n  styleUrls: ['./account-to-account.component.scss']\n})\nexport class AccountToAccountComponent implements OnInit, OnDestroy, AfterViewInit {\n\n\n  public isLoading = false;\n  public a2atransactionSettings: number;\n  public walletToWalletLedger = [];\n  public walletId: string;\n  public dealerId: string;\n  public isVisibleFormArea = false;\n  public LoggedParams: any;\n  public accountSubscription: Subscription;\n  public transactionSubscription: Subscription;\n  public headerSubscription: Subscription;\n  public availableBalance: number;\n  public senderEmailId: string;\n  public messageToDisplay: string;\n  public ErrorMsqBlock = false;\n  public successMsqBlock = false;\n  public liveAccountData: any[] = [];\n  public selectedAccount: any;\n  public transactionSettings: any;\n  dstAccountValue: number;\n  srcAccountBalance = 0.00;\n  dstAccountBalance = 0.00;\n  searchText: any;\n  @ViewChild('formData', {static: false}) fundTransactionForm: NgForm;\n\n  constructor(\n    private globalService: GlobalService,\n    private headerService: HeaderService,\n    private orderPipe: OrderPipe,\n    private notificationService: NotificationService\n    ) {\n      this.headerSubscription = this.headerService.castLoggedUserDetail.subscribe(\n        resData => (this.LoggedParams = resData)\n      );\n      this.walletId = this.LoggedParams.sProfile.sWalletId;\n      this.dealerId = this.LoggedParams.sProfile.sDealerId;\n      this.senderEmailId = this.LoggedParams.sProfile.uContactInfo.Email;\n      this. getTransactionSettings();\n    }\n  toggleFormArea() {\n    this.isVisibleFormArea = !this.isVisibleFormArea;\n  }\n  ngOnInit(): void {\n    this.getProfileAccounts();\n  }\n  ngAfterViewInit() {}\n  // Get All Transaction Settings\n  getTransactionSettings() {\n    const params = {\n      DealerId:  this.LoggedParams.sProfile.sDealerId\n    };\n    this.transactionSubscription = this.globalService.getSettings(params).subscribe(data => {\n      this.transactionSettings = data[0];\n      this.a2atransactionSettings = data[0].Acc_Auto_ITC;\n    });\n  }\n  getProfileAccounts() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n      LoginId: this.LoggedParams.sProfile.sMasterId\n    };\n    this.accountSubscription = this.globalService.GET_PROFILE_ACCOUNTS(params).subscribe(\n      data => {\n        this.liveAccountData = data.lstAccount.map( acc => {\n          if (acc) {\n            return Object.assign(acc.sUserInfo, acc.sAccountPlan);\n          }\n        });\n        console.log( this.liveAccountData);\n      }\n    );\n  }\n\n    autoCloseMsqBlock() {\n      setTimeout(() => {\n        this.successMsqBlock = false;\n        this.ErrorMsqBlock = false;\n        this.messageToDisplay = '';\n      }, 10000);\n    }\n    onCloseMsqBlock() {\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = false;\n      this.messageToDisplay = '';\n    }\n    onSuccessMsqDisplay(msq: string) {\n      this.messageToDisplay = '';\n      this.ErrorMsqBlock = false;\n      this.successMsqBlock = true;\n      this.messageToDisplay = msq;\n    }\n    onErrorMsqDisplay(msq: string) {\n      this.messageToDisplay = '';\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = true;\n      this.messageToDisplay = msq;\n   }\n    // Check Sender Account Balance on select Account Number\n    onSrcAccountBalchange(srcAcc: number) {\n      const srcAccount = this.liveAccountData.filter((acc) => {\n        if (acc.MT4Account === srcAcc) {\n         return acc;\n        }\n      });\n      this.srcAccountBalance = srcAccount[0].Balance;\n    }\n    // Check Receiver Account Balance on select Account Number\n    onDstAccountBalchange(dstAcc: number) {\n      if (dstAcc == 1) {\n        return false;\n      } else {\n        const dstAccount = this.liveAccountData.filter((acc) => {\n          if (acc.MT4Account === dstAcc) {\n           return acc;\n          }\n        });\n        this.dstAccountBalance = dstAccount[0].Balance;\n      }\n    }\n     // Check Fund Balance on MT4Account before make a Transaction\n     isBalanceAvaliable(formData: any) {\n        // tslint:disable-next-line: no-shadowed-variable\n        return new Promise((resolve, reject) => {\n          console.log(formData.srcAccount);\n          this.selectedAccount = this.liveAccountData.filter((acc) => {\n            if (acc.MT4Account === formData.srcAccount) {\n             return acc;\n            }\n          });\n          console.log(this.selectedAccount);\n          if (formData.amount <= this.selectedAccount[0].Balance) {\n              resolve(true);\n          } else {\n            // tslint:disable-next-line: max-line-length\n            // this.onErrorMsqDisplay(`Please maintain Sufficient Balance in your MT4Account ${formData.account} Account before make a Transaction`);\n            this.notificationService.showError('You have not sufficient Balance in your Account', 'Error');\n            resolve(false);\n            this.isLoading = false;\n            // this.autoCloseMsqBlock();\n          }\n        });\n      }\n        // Check KYC is Required or not\n  isKYCRequired() {\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      const params = {\n        Dealer: this.LoggedParams.sProfile.sDealerId\n      };\n      // Call getKycset function to check KYC setting\n      this.globalService.getKycset(params).subscribe(data => {\n        // console.warn('KYC Settings = ' + data);\n        if (data && data === 3) {\n          // console.warn('KYC Required');\n          resolve(true);\n         } else if (data && data === 1 || data === 2) {\n          // console.warn('KYC Not Required');\n          resolve(false);\n         } else if (data || data === 0) {\n          // console.warn('KYC Not Required');\n          resolve(false);\n        } else {\n          reject('KYC Settings Not Found .....');\n        }\n      });\n    });\n  }\n    // IS KYC Approved If KYC required\n    isKYCApproved() {\n      const params = {\n        KYCStatus: this.LoggedParams.sProfile.uKYCStatus,\n      };\n      // tslint:disable-next-line: no-shadowed-variable\n      return new Promise((resolve, reject) => {\n        if (params.KYCStatus) {\n          if (params.KYCStatus !== 2) {\n            // console.warn('Your KYC Is Not Approved');\n            this.onErrorMsqDisplay('KYC is required to make Transaction In Account to Account!');\n            // Swal.fire('Oops...', 'KYC is required to make Transaction In Wallet to Wallet!', 'error');\n            resolve(false);\n            this.displayKYCPopup();\n            this.isLoading = false;\n            this.autoCloseMsqBlock();\n          } else {\n            // console.warn('Your KYC IS approved');\n            resolve(true);\n          }\n        } else {\n          reject('KYC Status Not Found ....');\n        }\n      });\n    }\n    displayKYCPopup() {\n      Swal.fire({\n        title: 'Please update KYC First!',\n        text: 'Your KYC is not Verified. You will not be able to make Transaction without KYC Approved!',\n        icon: 'error',\n        showCancelButton: false,\n        confirmButtonText: 'Show me the way',\n        cancelButtonText: 'No, keep it',\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n      }).then((result) => {\n        if (result.value) {\n            this.globalService.redirect('/home/documents/kyc-upload');\n        }\n      });\n    }\n\n    makeInternalTrans(formData: any) {\n      const params = {\n        uCommission: 0,\n        uAmount: formData.amount,\n        uComment: formData.comment,\n        uDealerId: this.LoggedParams.sProfile.sDealerId,\n        uSource_Account: formData.srcAccount,\n        uDest_Account: formData.dstAccount,\n        uManagerIndex: this.liveAccountData[0].uManager\n      };\n      this.globalService.InternalTransfer(params).subscribe(data => {\n        if (data.Status === true) {\n          // this.onSuccessMsqDisplay(data.MSG_USER);\n          if (this.a2atransactionSettings === 0) {\n            this.notificationService.showInfo('Your Request has been generated, Now Request is pending for Approval', 'Information');\n           } else {\n            // tslint:disable-next-line: max-line-length\n            this.notificationService.showSuccess(`You have Successfully transferred ${formData.amount} dollor from ${formData.srcAccount} Account to ${formData.dstAccount} Account`, 'Success');\n           }\n          this.getProfileAccounts();\n          // this.onSrcAccountBalchange(formData.srcAccount);\n          // this.onDstAccountBalchange(formData.dstAccount);\n          this.srcAccountBalance = 0.00;\n          this.dstAccountBalance = 0.00;\n          setTimeout(() => {\n            this.fundTransactionForm.reset();\n            this.isLoading = false;\n           }, 1000);\n          // this.fundTransactionForm.reset();\n          // this.fundTransactionForm.form.value.amount = '';\n          // this.fundTransactionForm.value.comment = ' ';\n          this.autoCloseMsqBlock();\n       } else {\n        //  this.onErrorMsqDisplay(data.MSG_USER);\n        this.notificationService.showError('Failed To Make Transaction', 'Error');\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n       }\n      });\n    }\n\n    onSubmit() {\n      this.isLoading = true;\n      this.onCloseMsqBlock();\n      // Get Form Field Data on Submit\n      if (this.fundTransactionForm.value.toAccount == 1) {\n         this.dstAccountValue = this.fundTransactionForm.value.otherAccount;\n        } else {\n          this.dstAccountValue = this.fundTransactionForm.value.toAccount;\n      }\n      const formData = {\n        srcAccount: this.fundTransactionForm.value.fromAccount,\n        dstAccount:  this.dstAccountValue,\n        amount: this.fundTransactionForm.value.amount,\n        comment: this.fundTransactionForm.value.comment\n      };\n\n      if (0 >= this.fundTransactionForm.value.amount) {\n        // this.onErrorMsqDisplay(`${this.fundTransactionForm.value.amount} is not a Valid Number in Amount Field`);\n        this.notificationService.showError(`${formData.amount} is not a Valid Number in Amount Field`, 'Error');\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n        return;\n      }\n      if (formData.srcAccount === formData.dstAccount) {\n        // this.onErrorMsqDisplay('Sender and receiver account cound not be same.!');\n        this.notificationService.showError('Sender and receiver account cound not be same.!', 'Error');\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n        return;\n      }\n\n      this.isBalanceAvaliable(formData).then((resData) => {\n          if (resData) {\n            this.isKYCRequired().then((KYCResponse) => {\n              if (KYCResponse) {\n                this.isKYCApproved().then((approvalReponse) => {\n                  if (approvalReponse) {\n                    console.log('w2w function excuted');\n                    // this.depositMt4Account(formData);\n                    this.makeInternalTrans(formData);\n                  }\n                }).catch((err) => {\n                  console.error(err);\n                  // this.onErrorMsqDisplay(err);\n                  this.notificationService.showError('Failed To Make Transaction', 'Error');\n                });\n              } else {\n                this.makeInternalTrans(formData);\n                // console.log('w2w function excuted');\n              }\n             }).catch((err) => {\n              console.error(err);\n              // this.onErrorMsqDisplay(err);\n              this.notificationService.showError('Failed To Make Transaction', 'Error');\n             });\n          }\n\n      }).catch((err) => {\n        console.error(err);\n        // this.onErrorMsqDisplay(err);\n        this.notificationService.showError('Failed To Make Transaction', 'Error');\n      });\n     }\n    numberOnly(event): boolean {\n      const charCode = (event.which) ? event.which : event.keyCode;\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n        return false;\n      }\n      return true;\n    }\n  ngOnDestroy() {\n    this.accountSubscription.unsubscribe();\n    this.transactionSubscription.unsubscribe();\n    this.headerSubscription.unsubscribe();\n  }\n}\n","<div class=\"right-tabBtn-row d-none d-sm-block d-md-block d-lg-block\">\n    <button class=\"btn btn-warning btn-sm font-weight-400 text-size-13\" (click)=\"toggleFormArea()\">\n        <i-feather class=\"icon-size-18\" name=\"dollar-sign\"></i-feather>Make a Transaction\n    </button>\n</div>\n<div *ngIf=\"isVisibleFormArea\" class=\"transaction-form-container\">\n    <!-- <div class=\"transaction-form-container\"> -->\n    <div class=\"traction-from-box bg-b\">\n        <div class=\"heading\">\n            <div class=\"title\">Transfer in Account to Account</div>\n            <small>All fields are required to transfer from Account to Account</small>\n        </div>\n        <!-- Success Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n                    <strong>Success -: </strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n                    <strong></strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <form class=\"\" (ngSubmit)=\"onSubmit()\" #formData=\"ngForm\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"\" for=\"fromAccount\">From Account</label>\n                        <span class=\"asterick\"> * </span>\n                        <strong> (Balance : ${{srcAccountBalance}})</strong>\n                        <select (change)=\"onSrcAccountBalchange(fromAccount.value)\" required ngModel #fromAccount=\"ngModel\" name=\"fromAccount\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"fromAccount\">\n                            <option class=\"text-size-13\" value=\"\" selected [disabled]=\"true\">Select Account Number</option>\n                            <option class=\"text-size-13\" *ngFor=\"let acc of liveAccountData\" name=\"accounts\" [ngValue]=\"acc.MT4Account\">{{acc.MT4Account}}</option>\n                        </select>\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!fromAccount.valid && fromAccount.touched  \">Please select an Account Number</span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"\" for=\"toAccount\">To Account </label>\n                        <span class=\"asterick\"> * </span>\n                        <strong> (Balance : ${{dstAccountBalance}})</strong>\n                        <select (change)=\"onDstAccountBalchange(toAccount.value)\" required ngModel #toAccount=\"ngModel\" name=\"toAccount\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"toAccount\">\n                            <option class=\"text-size-13\" value=\"\" selected [disabled]=\"true\">Select Account Number</option>\n                            <option class=\"text-size-13\" value=\"1\" *ngIf=\"transactionSettings.Acc_ITC_Others === 1\">Other Account</option>\n                            <option class=\"text-size-13\" *ngFor=\"let acc of liveAccountData\" name=\"accounts\" [ngValue]=\"acc.MT4Account\">{{acc.MT4Account}}</option>\n                        </select>\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!toAccount.valid && toAccount.touched  \">Please select an Account Number</span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\" *ngIf=\"toAccount.value == 1\">\n                    <div class=\"form-group\">\n                        <label class=\"main-txt-color\" for=\"otherAccount\">Other Account</label>\n                        <span class=\"asterick\">*</span>\n                        <input (keypress)=\"numberOnly($event)\" pattern=\"^-?(0|[1-9]\\d*)?$\" required ngModel #otherAccount=\"ngModel\" name=\"otherAccount\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"otherAccount\" placeholder=\"Enter Account Number\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!otherAccount.valid && otherAccount.touched  \">Please Enter a valid Account Number</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"main-txt-color\" for=\"amount\">Amount</label>\n                        <span class=\"asterick\">*</span>\n                        <input min=\"1\" pattern=\"^-?(0|[1-9]\\d*)?$\" required ngModel #amount=\"ngModel\" name=\"amount\" type=\"number\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"amount\" placeholder=\"Enter Amount\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!amount.valid && amount.touched  \">Please Enter a valid Number</span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"main-txt-color\" for=\"comment\">Comment</label>\n                        <span class=\"asterick\">*</span>\n                        <input required ngModel #comment=\"ngModel\" name=\"comment\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"comment\" placeholder=\"Enter comment\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!comment.valid && comment.touched  \">Please enter a comment</span>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"position-relative\" style=\"padding-top:29px;\">\n                        <button [disabled]=\"(!formData.valid || isLoading )\" class=\"btn btn-primary btn-sm px-3 position-relative\">\n                            <span [class.btn-spinner]=\"isLoading\"></span> Transfer Fund</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n<div class=\"tab-inner-content px-2\">\n    <div class=\"history-title\">Your Transaction History\n        <!-- <small class=\"d-block text-size-12\">Historical data of your transactions</small> -->\n    </div>\n    <div class=\"table-filter-area\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-md-4 form-inline d-none d-md-block\">\n                <div class=\"form-group mb-2\">\n                    <label for=\"entries\" class=\" main-txt-color mr-1\">Show </label>\n                    <select class=\"form-control main-txt-color bd-color shadow-none\" id=\"entries\">\n                        <option>5</option>\n                        <option>10</option>\n                        <option>15</option>\n                        <option>20</option>\n                        <option>25</option>\n                        <option>50</option>\n                    </select>\n                    <label for=\"entries\" class=\" main-txt-color ml-1\"> Entries</label>\n                </div>\n            </div>\n            <div class=\"col-md-3 offset-md-5\">\n                <div class=\"form-group\">\n                    <!-- <label class=\"main-txt-color\" for=\"searchtext\">Search By Value</label> -->\n                    <input [(ngModel)]=\"searchText\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"searchText\" placeholder=\"Enter Keyword to search\" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"table-container table-responsive  table-responsive table-responsive-sm  mb-3\">\n        <table class=\"table table-hover main-txt-color mb-0 border-0\">\n            <thead class=\"table-header-bg table-header-color\">\n                <tr>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">S.No.</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Sender Account</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Recipient Account</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Fee/Commission</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Processing Time</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Amount</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Transfer Date</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Transfer Time</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Status</th>\n                </tr>\n            </thead>\n            <tbody class=\"secondary-txt-color\">\n\n            </tbody>\n        </table>\n        <div class=\"text-size-17 font-weight-300 text-center p-4\" style=\"background: #eff3f6;\">There is no account to account transfer from your Profile</div>\n    </div>\n</div>","import { NotificationService } from './../../../../../../shared/services/notification.service';\nimport { HeaderService } from './../../../../../../shared/services/header.service';\nimport { resolve } from 'url';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../shared/services/global.service';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-account-to-wallet',\n  templateUrl: './account-to-wallet.component.html',\n  styleUrls: ['./account-to-wallet.component.scss']\n})\nexport class AccountToWalletComponent implements OnInit, OnDestroy {\n\n  public isLoading = false;\n  public transactionSettingW2A: number;\n  public transactionSettingA2W: number;\n  public ledgersDetail = [];\n  public walletId: string;\n  public dealerId: string;\n  public isVisibleFormArea = false;\n  @ViewChild('formData', {static: false}) fundTransactionForm: NgForm;\n  public LoggedParams: any;\n  public accountSubscription: Subscription;\n  public ledgerDetailscription: Subscription;\n  public headerSubscription: Subscription;\n  public transactionSubscription: Subscription;\n  public walletBalance: any;\n  public pendingBalance: any;\n  public availableBalance: number;\n  public senderEmailId: string;\n  public messageToDisplay: string;\n  public ErrorMsqBlock = false;\n  public successMsqBlock = false;\n  public liveAccountData: any[] = [];\n  public selectedAccount: any;\n  public transactionTypeValue = 'Please Select Transaction Type';\n  public IsDataNotFound = false;\n    // pagination Setting\n  public TotalCount = 0;\n  public cat;\n  public searchText: any; // Search Text property is used to filter text in table\n  public p: any;          // Current page in pagination\n  public pageSize = 5;  // Table Rows Perpage property\n  public sortedData: any[]; // Sorted Product list array\n  public order = '';     // Order property to sort coloum of table\n  public reverse = true; // Reverse property is used to sort table coloum\n  public setParams: any;\n  constructor(\n    private globalService: GlobalService,\n    private headerService: HeaderService,\n    private orderPipe: OrderPipe,\n    private notificationService: NotificationService\n    ) {\n      this.headerSubscription = this.headerService.castLoggedUserDetail.subscribe(\n        resData => (this.LoggedParams = resData)\n      );\n      this.walletId = this.LoggedParams.sProfile.sWalletId;\n      this.dealerId = this.LoggedParams.sProfile.sDealerId;\n      this.senderEmailId = this.LoggedParams.sProfile.uContactInfo.Email;\n    }\n  toggleFormArea() {\n    this.isVisibleFormArea = !this.isVisibleFormArea;\n  }\n  ngOnInit(): void {\n    this.getProfileAccounts();\n    this.getLedgerDetails(1, this.cat);\n  }\n  setOrder(value: string) {\n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n    this.order = value;\n  }\n  getTransactionSetting() {\n    const params = {\n      sDealerID: this.LoggedParams.sProfile.sDealerId\n    };\n    try {\n      this.transactionSubscription = this.globalService.getSettings(params).subscribe(data => {\n        if (data.length) {\n          this.transactionSettingW2A = data[0].Wallet_Auto_ITC;\n          this.transactionSettingA2W = data[0].Acc_Auto_ITC;\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  onClaim(id: number) {\n    Swal.fire({\n      title: 'Are you Sure!',\n      text: 'Do you really want to Claim Amount? This process cannot be undone',\n      icon: 'error',\n      showCancelButton: true,\n      confirmButtonText: 'Claim',\n      cancelButtonText: 'Cancel',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n        const params = {\n          sDealerID: this.LoggedParams.sProfile.sDealerId,\n          sLedgerId: id,\n          uWalletID: this.LoggedParams.sProfile.sWalletId,\n        };\n        console.log(params);\n        this.globalService.claim(params).subscribe(data => {\n          if (data.Result === true) {\n            this.getLedgerDetails(1, this.cat);\n            Swal.fire(\n              'Claimed!',\n              'Your Amount has been Claimed.',\n              'success'\n            );\n            this.notificationService.showSuccess('Your Amount has been Claimed Successfully', 'Success');\n          }\n        }, err => {\n          console.log(err);\n        });\n      }\n    });\n  }\n  getLedgerDetails(indexval, countVal) {\n    this.isLoading = true;\n    if (countVal) {\n      this.pageSize = indexval;\n      this.p = 1;\n      this.setParams = {\n        WalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Initial: this.p,\n        MaxCount: this.pageSize\n      };\n    } else {\n      this.p = indexval;\n      this.setParams = {\n        WalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Initial:  (this.p - 1) * this.pageSize + 1,\n        MaxCount: this.p * this.pageSize\n      };\n    }\n    this.ledgerDetailscription = this.globalService.getLedger(this.setParams).subscribe(\n      data => {\n        this.TotalCount = data.sLedger.Count;\n        this.isLoading = false;\n        this.walletBalance = data.uBalance;\n        this.pendingBalance = data.uPending;\n        this.ledgersDetail = data.sLedger.lstLedger.map(res => {\n           console.log(res);\n           return res;\n        });\n        console.log(this.ledgersDetail);\n      }, err => {\n        console.log(err);\n        this.isLoading = false;\n        this.IsDataNotFound = true;\n      }\n    );\n  }\n  getProfileAccounts() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n      LoginId: this.LoggedParams.sProfile.sMasterId\n    };\n    this.accountSubscription = this.globalService.GET_PROFILE_ACCOUNTS(params).subscribe(\n      data => {\n        this.liveAccountData = data.lstAccount.map( acc => {\n          if (acc) {\n            return Object.assign(acc.sUserInfo, acc.sAccountPlan);\n          }\n        });\n        console.log( this.liveAccountData);\n      }\n    );\n  }\n  autoCloseMsqBlock() {\n    setTimeout(() => {\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n  onCloseMsqBlock() {\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = false;\n    this.messageToDisplay = '';\n  }\n  onSuccessMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.ErrorMsqBlock = false;\n    this.successMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  onErrorMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n\n\n  // Check KYC is Required or not\n  isKYCRequired() {\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      const params = {\n        Dealer: this.LoggedParams.sProfile.sDealerId\n      };\n      this.globalService.getKycset(params).subscribe(data => {\n        console.warn('KYC Settings = ' + data);\n        if (data && data === 3) {\n          resolve(true);\n         } else if (data && data === 1 || data === 2) {\n          resolve(false);\n         } else if (data || data === 0) {\n          resolve(false);\n        } else {\n          reject('KYC Settings Not Found .....');\n        }\n      });\n    });\n  }\n\n// IS KYC Approved If KYC required\nisKYCApproved() {\n  const params = {\n    KYCStatus: this.LoggedParams.sProfile.uKYCStatus,\n  };\n  // tslint:disable-next-line: no-shadowed-variable\n  return new Promise((resolve, reject) => {\n    if (params.KYCStatus) {\n      if (params.KYCStatus !== 2) {\n        // this.onErrorMsqDisplay('KYC is required to make Transaction In Wallet to Wallet!');\n        this.notificationService.showError('KYC is required to make Transaction', 'Error');\n        resolve(false);\n        this.displayKYCPopup();\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n      } else {\n        resolve(true);\n      }\n    } else {\n      reject('KYC Status Not Found ....');\n    }\n  });\n}\n\n  displayKYCPopup() {\n    Swal.fire({\n      title: 'Please update KYC First!',\n      text: 'Your KYC is not Verified. You will not be able to make Transaction without KYC Approved!',\n      icon: 'error',\n      showCancelButton: false,\n      confirmButtonText: 'Show me the way',\n      cancelButtonText: 'No, keep it',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n          this.globalService.redirect('/home/dashboard');\n      }\n    });\n  }\n     // Check Fund Balance on MT4Account before make a Transaction\n     isBalanceAvaliable(formData: any) {\n      // tslint:disable-next-line: no-shadowed-variable\n      return new Promise((resolve, reject) => {\n         console.log(formData.amount);\n         console.log(formData.transactionType);\n         this.selectedAccount = this.liveAccountData.filter((acc) => {\n            if (acc.MT4Account === formData.account) {\n             return acc;\n            }\n          });\n         if (formData.transactionType === 'a2w') {\n            if (this.selectedAccount[0].Balance >= formData.amount ) {\n              resolve(true);\n            } else {\n              // tslint:disable-next-line: max-line-length\n              // this.onErrorMsqDisplay(`Please maintain Sufficient Balance in your MT4Account Account before make a Transaction`);\n              this.notificationService.showError('You have not sufficient Balance in your Account', 'Error');\n              resolve(false);\n              this.isLoading = false;\n              this.autoCloseMsqBlock();\n            }\n         } else if (formData.transactionType === 'w2a') {\n            const params = {\n             sWalletId: this.walletId\n            };\n            this.globalService.getWalletInfo(params).subscribe(data => {\n              console.log(data);\n              if (data) {\n                console.warn('Avaliable Balance = ' + data.uBalance);\n                console.warn('Transfer Amount = ' + data.uBalance);\n                if (formData.amount <= data.uBalance) {\n                  resolve(true);\n                } else {\n                  // this.onErrorMsqDisplay('Please maintain Sufficient Balance in your Wallet before make a Transaction ');\n                  this.notificationService.showError('You have not sufficient Balance in your Wallet', 'Error');\n                  resolve(false);\n                  this.isLoading = false;\n                  this.autoCloseMsqBlock();\n                }\n              } else {\n                reject('Balance Not Found .....');\n              }\n            });\n         }\n        });\n    }\n\n    depositMt4Account(formData: any) {\n      // console.log('makeWalletTransfer function excuted');\n      console.log( this.LoggedParams.sProfile.sWalletId);\n      console.log( this.LoggedParams.sProfile.sDealerId);\n      const params = {\n        uCommission: 0,\n        Amount: formData.amount,\n        Comment: formData.comment,\n        uWalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerId: this.LoggedParams.sProfile.sDealerId,\n        UuAccount: formData.account,\n        ManagerIndex:  this.selectedAccount[0].uManager,\n        uSource: 0,\n        uTransType: formData.transactionType === 'w2a' ? 0 : 1,\n      };\n      this.globalService.walletTrans(params).subscribe(data => {\n        if (data.oStatus === true) {\n            this.getLedgerDetails(1, this.cat);\n            // this.onSuccessMsqDisplay(data.oStatus);\n              // tslint:disable-next-line: max-line-length\n            if (formData.transactionType === 'w2a') {\n              // tslint:disable-next-line: max-line-length\n              // this.onSuccessMsqDisplay(`You have made Successfully Transaction of ${formData.amount} dollor from  ${this.LoggedParams.sProfile.sWalletId} Wallet Id to  ${formData.account} Account`);\n              // tslint:disable-next-line: max-line-length\n              this.notificationService.showSuccess(`You have made Successfully Transaction of ${formData.amount} dollor from  ${this.LoggedParams.sProfile.sWalletId} Wallet Id to  ${formData.account} Account`, 'Success');\n\n              // if (this.transactionSettingW2A === 0) {\n              // tslint:disable-next-line: max-line-length\n              //   this.notificationService.showInfo(`You have successfully generated a request for ${formData.amount} from your wallet amount to transfer in your account.`, 'Information');\n              //  } else {\n              // tslint:disable-next-line: max-line-length\n              //   this.notificationService.showSuccess(`You have made Successfully Transaction of ${formData.amount} dollor from  ${this.LoggedParams.sProfile.sWalletId} Wallet Id to  ${formData.account} Account`, 'Success');\n              //  }\n\n              this.headerService.getUserWalletDetail();\n           } else {\n              // tslint:disable-next-line: max-line-length\n              // this.onSuccessMsqDisplay(`You have made Successfully Transaction of ${formData.amount} dollor from ${formData.account} Account to ${this.LoggedParams.sProfile.sWalletId} Wallet Id`);\n              // tslint:disable-next-line: max-line-length\n              this.notificationService.showSuccess(`You have made Successfully Transaction of ${formData.amount} dollor from ${formData.account} Account to ${this.LoggedParams.sProfile.sWalletId} Wallet Id`, 'Success');\n              // if (this.transactionSettingW2A === 0) {\n              // tslint:disable-next-line: max-line-length\n              //   this.notificationService.showInfo(`You have successfully generated a request for ${formData.amount} from your Account amount to transfer in your Wallet.`, 'Information');\n              //  } else {\n              // tslint:disable-next-line: max-line-length\n              //   this.notificationService.showSuccess(`You have made Successfully Transaction of ${formData.amount} dollor from ${formData.account} Account to ${this.LoggedParams.sProfile.sWalletId} Wallet Id`, 'Success');\n              //  }\n              this.headerService.getUserWalletDetail();\n           }\n            this.isLoading = false;\n          //  this.fundTransactionForm.reset();\n            this.autoCloseMsqBlock();\n            this.fundTransactionForm.reset();\n        } else {\n          // this.onErrorMsqDisplay('Failed To Make Transaction');\n          this.notificationService.showError('Failed To Make Transaction', 'Error');\n          this.isLoading = false;\n          this.autoCloseMsqBlock();\n        }\n      }, err => {\n        console.log(err);\n        this.notificationService.showError('Failed To Make Transaction', 'Error');\n      });\n     }\n    onSubmit() {\n      this.isLoading = true;\n      this.onCloseMsqBlock();\n      const formData = {\n        transactionType: this.fundTransactionForm.value.transactionType,\n        account: this.fundTransactionForm.value.account,\n        amount: this.fundTransactionForm.value.amount,\n        comment: this.fundTransactionForm.value.comment\n      };\n\n      if (0 >= this.fundTransactionForm.value.amount) {\n        // this.onErrorMsqDisplay(`${this.fundTransactionForm.value.amount} is not a Valid Number in Amount Field`);\n        this.notificationService.showError(`${this.fundTransactionForm.value.amount} is not a Valid Number in Amount Field`, 'Error');\n        this.isLoading = false;\n        this.autoCloseMsqBlock();\n        return;\n      }\n\n      this.isBalanceAvaliable(formData).then((resData) => {\n        if (resData) {\n          this.isKYCRequired().then((KYCResponse) => {\n            if (KYCResponse) {\n              this.isKYCApproved().then((approvalReponse) => {\n                if (approvalReponse) {\n                  this.depositMt4Account(formData);\n                }\n              }).catch((err) => {\n                console.error(err);\n                // this.onErrorMsqDisplay(err);\n                this.notificationService.showError('Failed To Make Transaction', 'Error');\n              });\n            } else {\n              this.depositMt4Account(formData);\n            }\n           }).catch((err) => {\n            console.error(err);\n            // this.onErrorMsqDisplay(err);\n            this.notificationService.showError('Failed To Make Transaction', 'Error');\n           });\n        }\n      }).catch((err) => {\n        console.error(err);\n        // this.onErrorMsqDisplay(err);\n        this.notificationService.showError('Failed To Make Transaction', 'Error');\n      });\n     }\n  ngOnDestroy() {\n    this.accountSubscription.unsubscribe();\n    this.ledgerDetailscription.unsubscribe();\n    this.headerSubscription.unsubscribe();\n  }\n}\n","<div class=\"right-tabBtn-row d-none d-sm-block d-md-block d-lg-block\">\n    <button class=\"btn btn-warning btn-sm font-weight-400 text-size-13\" (click)=\"toggleFormArea()\">\n       <i-feather class=\"icon-size-18\" name=\"dollar-sign\"></i-feather>Make a Transaction\n    </button>\n</div>\n<div *ngIf=\"isVisibleFormArea\" class=\"transaction-form-container\">\n    <!-- <div class=\"transaction-form-container\"> -->\n    <div class=\"traction-from-box bg-b\">\n        <div class=\"heading\">\n            <div *ngIf=\"transactionType.value == 'a2w'\" class=\"title\">Withdraw Fund - Account To Wallet</div>\n            <div *ngIf=\"transactionType.value == 'w2a'\" class=\"title\">Deposit Fund - Wallet To Account</div>\n            <div class=\"title\" *ngIf=\"transactionType.value != 'w2a' && transactionType.value != 'a2w'\">Deposit\n                <span class=\"material-icons\">\n                    swap_horizontal_circle\n                    </span> Withdraw Fund</div>\n            <small>All fields are required to transfer from Account to Wallet</small>\n            <!-- <small *ngIf=\"transactionType.value == 'a2w'\">Transfer from Account to Wallet All fields are required to deposit from Account to Wallet</small>\n            <small *ngIf=\"transactionType.value == 'w2a'\">Transfer from Account to Wallet All fields are required to deposit from Account to Wallet</small> -->\n        </div>\n        <!-- Success Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n                    <strong></strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n                    <strong></strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <form class=\"\" (ngSubmit)=\"onSubmit()\" #formData=\"ngForm\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"\" for=\"account\">Transaction Type</label>\n                        <span class=\"asterick\">*</span>\n                        <select required #transactionType name=\"transactionType\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"transactionType\" [(ngModel)]=\"transactionTypeValue\">\n                            <option class=\"text-size-13\" value=\"Please Select Transaction Type\" [disabled]=\"true\" >Select Transaction Type</option>\n                            <option class=\"text-size-13\" name=\"WalletToAccount\" value=\"w2a\">Wallet To Account</option>\n                            <option class=\"text-size-13\" name=\"accountToWallet\" value=\"a2w\">Account to Wallet</option>\n                        </select>\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!transactionType.valid && transactionType.touched  \">Please Enter a valid Account Number</span>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"transactionType.value == 'w2a' || transactionType.value == 'a2w'\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"\" for=\"account\">Account Number</label>\n                            <span class=\"asterick\">*</span>\n                            <select required ngModel #account=\"ngModel\" name=\"account\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"account\">\n                            <option class=\"text-size-13\" value=\"\" [disabled]=\"true\">Select Account Number</option>\n                            <option class=\"text-size-13\" *ngFor=\"let acc of liveAccountData\" name=\"accounts\" [ngValue]=\"acc.MT4Account\">{{acc.MT4Account}}</option>\n                        </select>\n                            <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                            <span class=\"help-block text-danger \" *ngIf=\"!account.valid && account.touched  \">Please Enter a valid Account Number</span>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"main-txt-color\" for=\"amount\">Amount</label>\n                            <span class=\"asterick\">*</span>\n                            <input min=\"1\" pattern=\"^-?(0|[1-9]\\d*)?$\" required ngModel #amount=\"ngModel\" name=\"amount\" type=\"number\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"amount\" placeholder=\"Enter Amount\" />\n                            <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                            <span class=\"help-block text-danger \" *ngIf=\"!amount.valid && amount.touched  \">Amount field should not be blankr</span>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-8\">\n                        <div class=\"form-group\">\n                            <label class=\"main-txt-color\" for=\"comment\">Comment</label>\n                            <span class=\"asterick\">*</span>\n                            <input required ngModel #comment=\"ngModel\" name=\"comment\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"comment\" placeholder=\"Enter Comment\" />\n                            <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                            <span class=\"help-block text-danger \" *ngIf=\"!comment.valid && comment.touched  \">Please enter a comment</span>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <div class=\"position-relative\" style=\"padding-top:29px;\">\n                            <button [disabled]=\"(!formData.valid || isLoading )\" class=\"btn btn-primary btn-sm px-3 position-relative\">\n                            <span [class.btn-spinner]=\"isLoading\"></span> Transfer Fund</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n<div class=\"tab-inner-content px-2 position-relative\">\n    <div class=\"history-title \">Your Transaction History\n        <!-- <small class=\"d-block text-size-12 \">Historical data of your transactions</small> -->\n    </div>\n    <div class=\"wallet_balance\">\n        <p>Pending : <strong style=\"color:#f36\">${{pendingBalance}}.00</strong> </p>\n        <p>Wallet Balance : <strong style=\"color:#10b759 \">${{walletBalance}}.00</strong></p>\n    </div>\n\n    <div class=\"table-container table-responsive table-responsive table-responsive-sm mb-3 \">\n        <div class=\"table-filter-area \">\n            <div class=\"row no-gutters \">\n                <div class=\"col-md-4 form-inline d-none d-md-block \">\n                    <div class=\"form-group mb-2 \">\n                        <label for=\"entries \" class=\" main-txt-color mr-1 \">Show </label>\n                        <select (change)=\"getLedgerDetails($event.target.value,true)\" class=\"form-control main-txt-color bd-color shadow-none \" id=\"entries \">\n                            <option selected>5</option>\n                            <option>10</option>\n                            <option>15</option>\n                            <option>20</option>\n                            <option>25</option>\n                            <option>30</option>\n                            <option>50</option>\n                            <option>100</option>\n                      </select>\n                        <label for=\"entries \" class=\" main-txt-color ml-1 \"> Entries</label>\n                    </div>\n                </div>\n                <div class=\"col-md-3 offset-md-5 \">\n                    <div class=\"form-group \">\n                        <input [(ngModel)]=\"searchText\" type=\"text \" class=\"form-control main-txt-color bd-color shadow-none \" id=\"searchText \" placeholder=\"Enter Keyword to search \" />\n                    </div>\n                </div>\n            </div>\n        </div>\n        <table class=\"table table-hover main-txt-color mb-0 \">\n            <thead class=\"table-header-bg table-header-color \">\n                <tr>\n                    <th [class.active]=\"order === 'sCreadedOn_Str' \" (click)=\"setOrder('sCreadedOn_Str')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Transaction Id</th>\n                    <th [class.active]=\"order === 'Account' \" (click)=\"setOrder('Account')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Timestamp</th>\n                    <th [class.active]=\"order === 'Value' \" (click)=\"setOrder('Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Details</th>\n                    <th [class.active]=\"order === 'oPerc_Value' \" (click)=\"setOrder('oPerc_Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Withdraw</th>\n                    <th [class.active]=\"order === 'oAction' \" (click)=\"setOrder('oAction')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Deposit</th>\n                    <th [class.active]=\"order === 'oAlert_Disable_Trade' \" (click)=\"setOrder('oAlert_Disable_Trade')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Status</th>\n                    <th [class.active]=\"order === 'oAlert_Mail' \" (click)=\"setOrder('oAlert_Mail')\" class=\"font-weight-500 bd-color text-capitalize align-middle align-middle\">Remarks</th>\n                    <th [class.active]=\"order === 'oUP_DOWN' \" (click)=\"setOrder('oUP_DOWN')\" class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Action</th>\n                </tr>\n            </thead>\n            <tbody *ngIf=\"(!IsDataNotFound)\" class=\"secondary-txt-color \">\n                <tr *ngIf=\"(isLoading)\">\n                    <td colspan=\"9\" class=\"text-center\" class=\"align-middle\">\n                        <div class=\"text-size-17 font-weight-300\">Loading ...</div>\n                    </td>\n                </tr>\n                <tr *ngFor=\"let ledger of ledgersDetail | orderBy:order:reverse | filter:searchText | paginate: { itemsPerPage: pageSize, currentPage: p, totalItems: TotalCount}; let i = index\">\n                    <td class=\"align-middle\">{{ledger.uReference}}</td>\n                    <td class=\"align-middle\">{{ledger.sTimestamp?.sCreadedOn_Str | date: 'dd-MM-yyyy hh:mm a'}}</td>\n                    <td class=\"align-middle\">\n                        <span *ngIf=\"ledger.uSource==0\">Neteller</span>\n                        <span *ngIf=\"ledger.uSource==1\">Skrill</span>\n                        <span *ngIf=\"ledger.uSource==2\">Insta mozo</span>\n                        <span *ngIf=\"ledger.uSource==3\">Payee88</span>\n                        <span *ngIf=\"ledger.uSource==4\">Perfect money</span>\n                        <span *ngIf=\"ledger.uSource==5\">Bank wire 1</span>\n                        <span *ngIf=\"ledger.uSource==6\">Bank wire 2</span>\n                        <span *ngIf=\"ledger.uSource==7\">Bank wire 3</span>\n                        <span *ngIf=\"ledger.uSource==8\">Crypto currency</span>\n                        <span *ngIf=\"ledger.uSource==9\">Bank wire 4</span>\n                        <span *ngIf=\"ledger.uSource==10\">Bank wire 5</span>\n                        <span *ngIf=\"ledger.uSource==11\">Bank wire 6</span>\n                    </td>\n                    <td class=\"align-middle\">{{ledger.uTransType==1 ? ledger.uAmount:'-'}}</td>\n                    <td class=\"align-middle\">{{ledger.uTransType==0 ? ledger.uAmount:'-'}}</td>\n                    <td class=\"align-middle\">\n                        <span class=\"badge badge-warning\" *ngIf=\"ledger.uStatus==0\">Pending</span>\n                        <span class=\"badge badge-success\" *ngIf=\"ledger.uStatus==1 && ledger.uComment!='Transaction Claimed '\">Success</span>\n                        <span class=\"badge badge-info\" *ngIf=\"ledger.uComment=='Transaction Claimed '\">Claimed</span>\n                        <span class=\"badge badge-danger\" *ngIf=\"ledger.uStatus==2\">Rejected</span>\n                    </td>\n                    <td class=\"text-center align-middle\">\n                        <i-feather class=\"icon-size-20\" name=\"message-square\" tooltip=\"{{ledger.uComment}}\" placement=\"top\" *ngIf=\"ledger.uComment!=''\"></i-feather>\n                        <i-feather class=\"icon-size-20\" name=\"message-square\" tooltip=\"{{ledger.uAdmMsg}}\" placement=\"top\" *ngIf=\"ledger.uAdmMsg!=''\"></i-feather>\n                    </td>\n                    <td class=\"text-center align-middle\">\n                        <button *ngIf=\"ledger.uStatus==0\" (click)=\"onClaim(ledger.sLedgerId)\" class=\"btn btn-warning btn-sm font-weight-400 text-size-11 btn-sm-padd\" type=\"button\">Claim</button>\n                        <!-- <button *ngIf=\"ledger.uStatus==1\" disabled class=\"btn btn-secondary btn-sm px-3 font-weight-500 text-size-12\" type=\"button\">Not Required</button> -->\n                        <span *ngIf=\"ledger.uStatus==1\"> - </span>\n\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"(IsDataNotFound)\" class=\"text-size-17 font-weight-300 text-center p-4\" style=\"background: #eff3f6;\">Data Not Found</div>\n    </div>\n    <div class=\"table-pagination text-right border-top-0 pt-4\">\n        <pagination-controls (pageChange)=\"getLedgerDetails($event,false)\"></pagination-controls>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fund-transfer',\n  templateUrl: './fund-transfer.component.html',\n  styleUrls: ['./fund-transfer.component.scss']\n})\nexport class FundTransferComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"small-content-section bg-f\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card border-0 \">\r\n                <div class=\"card-body border-0 p-0\">\r\n                    <div class=\"tabs-container\">\r\n                        <ul class=\"tabs-heading d-flex flex-row border-bottom\">\r\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\r\n                                <a class=\"p-3\" routerLink=\"/home/money/transfer-funds/wallet-to-wallet\">\r\n                                    <span class=\"material-icons\">account_balance_wallet</span>\r\n                                    <span class=\"tab-text\">Wallet To Wallet</span>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\r\n                                <a class=\"p-3\" routerLink=\"/home/money/transfer-funds/account-to-account\">\r\n                                    <span class=\"material-icons\">museum</span>\r\n                                    <span class=\"tab-text\">Account To Account</span>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\r\n                                <a class=\"p-3\" routerLink=\"/home/money/transfer-funds/account-to-wallet\">\r\n                                    <span class=\"material-icons\">swap_horizontal_circle</span>\r\n                                    <span class=\"tab-text\">Account To  Wallet</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <div class=\"tabs-body p-2\">\r\n                            <router-outlet></router-outlet>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NotificationService } from './../../../../../../shared/services/notification.service';\nimport { HeaderService } from './../../../../../../shared/services/header.service';\nimport { resolve } from 'url';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../shared/services/global.service';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-wallet-to-wallet',\n  templateUrl: './wallet-to-wallet.component.html',\n  styleUrls: ['./wallet-to-wallet.component.scss']\n})\nexport class WalletToWalletComponent implements OnInit, OnDestroy {\n  public isLoading = false;\n  public transactionSetting: number;\n  public ledgersDetail = [];\n  public walletToWalletLedger = [];\n  public walletId: string;\n  public dealerId: string;\n  public isVisibleFormArea = false;\n  @ViewChild('formData', {static: false}) fundTransactionForm: NgForm;\n  public LoggedParams: any;\n  public accountSnapSubscription: Subscription;\n  public ledgerDetailscription: Subscription;\n  public headerSubscription: Subscription;\n  public transactionSubscription: Subscription;\n  public walletBalance: any;\n  public pendingBalance: any;\n  public availableBalance: number;\n  public senderEmailId: string;\n  public messageToDisplay: string;\n  public ErrorMsqBlock = false;\n  public successMsqBlock = false;\n\n    // pagination Setting\n    public TotalCount = 0;\n    public cat;\n    public searchText: any; // Search Text property is used to filter text in table\n    public p: any;          // Current page in pagination\n    public pageSize = 5;  // Table Rows Perpage property\n    public sortedData: any[]; // Sorted Product list array\n    public order = '';     // Order property to sort coloum of table\n    public reverse = true; // Reverse property is used to sort table coloum\n    public setParams: any;\n    public IsDataNotFound = false;\n  constructor(\n    private globalService: GlobalService,\n    private headerService: HeaderService,\n    private orderPipe: OrderPipe,\n    private notificationService: NotificationService\n    ) {\n      this.headerSubscription = this.headerService.castLoggedUserDetail.subscribe(\n        resData => (this.LoggedParams = resData)\n      );\n      this.walletId = this.LoggedParams.sProfile.sWalletId;\n      this.dealerId = this.LoggedParams.sProfile.sDealerId;\n      this.senderEmailId = this.LoggedParams.sProfile.uContactInfo.Email;\n    }\n  toggleFormArea() {\n    this.isVisibleFormArea = !this.isVisibleFormArea;\n  }\n\n  ngOnInit(): void {\n    this.getLedgerDetails(1, this.cat);\n    this.getTransactionSetting();\n  }\n  setOrder(value: string) {\n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n    this.order = value;\n  }\n  getTransactionSetting() {\n    const params = {\n      sDealerID: this.LoggedParams.sProfile.sDealerId\n    };\n    try {\n      this.transactionSubscription = this.globalService.getSettings(params).subscribe(data => {\n        if (data.length) {\n          this.transactionSetting = data[0].Wallet_Auto_ITC;\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  onClaim(id: number) {\n    Swal.fire({\n      title: 'Are you Sure!',\n      text: 'Do you really want to Claim Amount? This process cannot be undone',\n      icon: 'error',\n      showCancelButton: true,\n      confirmButtonText: 'Claim',\n      cancelButtonText: 'Cancel',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n        const params = {\n          sDealerID: this.LoggedParams.sProfile.sDealerId,\n          sLedgerId: id,\n          uWalletID: this.LoggedParams.sProfile.sWalletId,\n        };\n        console.log(params);\n        this.globalService.claim(params).subscribe(data => {\n          if (data.Result === true) {\n            this.getLedgerDetails(1, this.cat);\n            Swal.fire(\n              'Claimed!',\n              'Your Amount has been Claimed.',\n              'success'\n            );\n            this.notificationService.showSuccess('Your Amount has been Claimed Successfully', 'Success');\n          }\n        }, err => {\n          console.log(err);\n        });\n      }\n    });\n  }\n  getLedgerDetails(indexval, countVal) {\n    this.isLoading = true;\n    if (countVal) {\n      this.pageSize = indexval;\n      this.p = 1;\n      this.setParams = {\n        WalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Initial: this.p,\n        MaxCount: this.pageSize\n      };\n    } else {\n      this.p = indexval;\n      this.setParams = {\n        WalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Initial:  (this.p - 1) * this.pageSize + 1,\n        MaxCount: this.p * this.pageSize\n      };\n    }\n    this.ledgerDetailscription = this.globalService.getLedger(this.setParams).subscribe(\n      data => {\n        this.TotalCount = data.sLedger.Count;\n        this.isLoading = false;\n        this.walletBalance = data.uBalance;\n        this.pendingBalance = data.uPending;\n        this.ledgersDetail = data.sLedger.lstLedger.map(res => {\n           console.log(res);\n           return res;\n        });\n        console.log(this.ledgersDetail);\n      }, err => {\n        console.log(err);\n        this.isLoading = false;\n        this.IsDataNotFound = true;\n      }\n    );\n  }\n  autoCloseMsqBlock() {\n    setTimeout(() => {\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n  onCloseMsqBlock() {\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = false;\n    this.messageToDisplay = '';\n  }\n  onSuccessMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.ErrorMsqBlock = false;\n    this.successMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  onErrorMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n\n   // Check Fund Balance before make a Transaction or submit the form\n   isBalanceAvaliable(transferAmount: number) {\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      const params = {\n        sWalletId: this.walletId\n      };\n      // Called getWalletInfo function from global service to get Wallet information\n      this.globalService.getWalletInfo(params).subscribe(data => {\n        console.log(data);\n        if (data) {\n          // console.warn('Avaliable Balance = ' + data.uBalance);\n          // console.warn('Transfer Amount = ' + transferAmount);\n          if (transferAmount <= data.uBalance) {\n            resolve(true);\n          } else {\n            // this.onErrorMsqDisplay('Please maintain Sufficient Balance in your Account before make a Transaction ');\n            this.notificationService.showError('You have not sufficient Balance in your Wallet.', 'Error');\n            resolve(false);\n            this.isLoading = false;\n            // this.autoCloseMsqBlock();\n          }\n        } else {\n          reject('Balance Not Found .....');\n        }\n      });\n    });\n  }\n\n\n  // Check KYC is Required or not\n  isKYCRequired() {\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      const params = {\n        Dealer: this.LoggedParams.sProfile.sDealerId\n      };\n      // Call getKycset function to check KYC setting\n      this.globalService.getKycset(params).subscribe(data => {\n        // console.warn('KYC Settings = ' + data);\n        if (data && data === 3) {\n          // console.warn('KYC Required');\n          resolve(true);\n         } else if (data && data === 1 || data === 2) {\n          // console.warn('KYC Not Required');\n          resolve(false);\n         } else if (data || data === 0) {\n          // console.warn('KYC Not Required');\n          resolve(false);\n        } else {\n          reject('KYC Settings Not Found .....');\n        }\n      });\n    });\n  }\n\n    // IS KYC Approved If KYC required\n  isKYCApproved() {\n    const params = {\n      KYCStatus: this.LoggedParams.sProfile.uKYCStatus,\n    };\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      if (params.KYCStatus) {\n        if (params.KYCStatus !== 2) {\n          // console.warn('Your KYC Is Not Approved');\n          // this.onErrorMsqDisplay('KYC is required to make Transaction In Wallet to Wallet!');\n          this.notificationService.showError('KYC is required to make Transaction In Wallet to Wallet!', 'Error');\n          // Swal.fire('Oops...', 'KYC is required to make Transaction In Wallet to Wallet!', 'error');\n          resolve(false);\n          this.displayKYCPopup();\n          this.isLoading = false;\n          // this.autoCloseMsqBlock();\n        } else {\n          // console.warn('Your KYC IS approved');\n          resolve(true);\n        }\n      } else {\n        reject('KYC Status Not Found ....');\n      }\n    });\n  }\n\n  displayKYCPopup() {\n    Swal.fire({\n      title: 'Please update KYC First!',\n      text: 'Your KYC is not Verified. You will not be able to make Transaction without KYC Approved!',\n      icon: 'error',\n      showCancelButton: false,\n      confirmButtonText: 'Show me the way',\n      cancelButtonText: 'No, keep it',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n          this.globalService.redirect('/home/documents/kyc-upload');\n      }\n    });\n  }\n\n\n  makeWalletToWalletTransaction(formData: any) {\n    // console.log('makeWalletTransfer function excuted');\n    const params = {\n      uReceipt_Email: formData.email,\n      uAmount: formData.amount,\n      uSender_Email:  this.LoggedParams.sProfile.uContactInfo.Email,\n      uSender_WalletId:  this.LoggedParams.sProfile.sWalletId,\n      uReceipt_WalletId: 0,\n      DealerId:  this.LoggedParams.sProfile.sDealerId,\n      RequestId: 0,\n      sStatus: 0,\n      uComment: 'Wallet to Wallet Transfer',\n      uTimestamp: {\n        sCreadedOn: 0,\n        sUpdatedOn: 0,\n        sCreadedOn_Str: '0',\n        sUpdatedOn_Str: '0'\n      }\n    };\n    this.globalService.makeW2WTransfer(params).subscribe(data => {\n      if (data.oRet.Result === true) {\n        //  this.onSuccessMsqDisplay(data.oRet.MSG_USER);\n        //  this.onSuccessMsqDisplay(`You have Successfully transfer ${formData.amount} dollor to ${formData.email}`);\n         // tslint:disable-next-line: max-line-length\n         if (this.transactionSetting === 0) {\n          this.notificationService.showSuccess('Your Request has been generated, Please wait for admin Approval.', 'Success');\n         } else {\n          // tslint:disable-next-line: max-line-length\n          this.notificationService.showSuccess(`You have Successfully transferred ${formData.amount} dollor to ${formData.email}`, 'Success');\n         }\n         this.headerService.getUserWalletDetail();\n         this.isLoading = false;\n         this.fundTransactionForm.reset();\n         this.autoCloseMsqBlock();\n      } else {\n        // this.onErrorMsqDisplay('Failed To Make Transaction');\n        this.notificationService.showError('Failed To Make Transaction', 'Error');\n        this.isLoading = false;\n        // this.autoCloseMsqBlock();\n      }\n    }, err => {\n      console.log(err);\n      this.notificationService.showError('Failed To Make Transaction', 'Error');\n    });\n   }\n\n\n\n  //  Check Sender and reciever Email ID\n   isEmailIdSame(receiverEmailId: string) {\n    // tslint:disable-next-line: no-shadowed-variable\n    return new Promise((resolve, reject) => {\n      if (receiverEmailId !== this.senderEmailId) {\n        resolve(true) ;\n      } else {\n        // this.onErrorMsqDisplay('Sender and Receiver Email Id could Not be Same !');\n        this.notificationService.showError('Sender and Receiver Email Id could Not be Same !', 'Error');\n        resolve(false) ;\n        this.isLoading = false;\n        // this.autoCloseMsqBlock();\n      }\n    });\n   }\n  onSubmit() {\n    this.isLoading = true;\n    this.onCloseMsqBlock();\n    // Get Form Field Data on Submit\n    const formData = {\n      email: this.fundTransactionForm.value.email,\n      amount: this.fundTransactionForm.value.amount,\n    };\n    if (0 >= formData.amount) {\n      // this.onErrorMsqDisplay(`${formData.amount} is not a Valid Number in Amount Field`);\n      this.notificationService.showError(`${formData.amount} is not a Valid Number in Amount Field`, 'Error');\n      this.isLoading = false;\n      // this.autoCloseMsqBlock();\n      return;\n    }\n    this.isEmailIdSame(formData.email).then((emailIdreponse) => {\n      if (emailIdreponse) {\n        this.isBalanceAvaliable(formData.amount).then((BalanceResponse) => {\n          // console.warn('IsBalance Avaliable = ' + BalanceResponse);\n          if (BalanceResponse) {\n            this.isKYCRequired().then((KYCResponse) => {\n              // console.warn('Is KYC Required = ' + KYCResponse);\n              if (KYCResponse) {\n                this.isKYCApproved().then((approvalReponse) => {\n                  if (approvalReponse) {\n                    // console.log('w2w function excuted');\n                    this.makeWalletToWalletTransaction(formData);\n                  }\n                }).catch((err) => {\n                  console.error(err);\n                  this.onErrorMsqDisplay(err);\n                });\n              } else {\n                this.makeWalletToWalletTransaction(formData);\n                // console.log('w2w function excuted');\n              }\n             }).catch((err) => {\n              console.error(err);\n              this.onErrorMsqDisplay(err);\n             });\n            }\n        }).catch((err) => {\n          console.error(err);\n          this.onErrorMsqDisplay(err);\n        });\n      }\n    });\n  }\n  ngOnDestroy() {\n    // this.accountSubscription.unsubscribe();\n    this.ledgerDetailscription.unsubscribe();\n    this.headerSubscription.unsubscribe();\n    this.transactionSubscription.unsubscribe();\n  }\n}\n","<div class=\"right-tabBtn-row d-none d-sm-block d-md-block d-lg-block\">\n    <button class=\"btn btn-warning btn-sm font-weight-400 text-size-13\" (click)=\"toggleFormArea()\">\n        <i-feather class=\"icon-size-18\" name=\"dollar-sign\"></i-feather>Make a Transaction\n    </button>\n</div>\n<div *ngIf=\"isVisibleFormArea\" class=\"transaction-form-container\">\n    <!-- <div class=\"transaction-form-container\"> -->\n    <div class=\"traction-from-box bg-b\">\n        <div class=\"heading\">\n            <div class=\"title\">Transfer in Wallet to Wallet</div>\n            <small>All fields are required to transfer from Wallet to Wallet</small>\n        </div>\n        <!-- Success Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n                    <strong>Success -: </strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n                    <strong></strong>{{messageToDisplay}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                </div>\n            </div>\n        </div>\n        <form class=\"\" (ngSubmit)=\"onSubmit()\" #formData=\"ngForm\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"\" for=\"email\">Email Address</label>\n                        <span class=\"asterick\">*</span>\n                        <input required email ngModel #email=\"ngModel\" name=\"email\" type=\"email\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"email\" placeholder=\"Enter Email Address\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!email.valid && email.touched  \">Please enter a valid email address</span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"main-txt-color\" for=\"amount\">Amount ($)</label>\n                        <span class=\"asterick\">*</span>\n                        <input min=\"1\" pattern=\"^\\d+$\" required ngModel #amount=\"ngModel\" name=\"amount\" type=\"number\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"amount\" placeholder=\"Enter Amount\" />\n                        <span class=\"form-icon text-size-12 \"><i class=\"fas fa-envelope \"></i></span>\n                        <span class=\"help-block text-danger \" *ngIf=\"!amount.valid && amount.touched  \">Please enter a valid Amount</span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"position-relative\" style=\"padding-top:29px;\">\n                        <button [disabled]=\"(!formData.valid || isLoading )\" class=\"btn btn-primary btn-sm px-3  position-relative\">\n                            <span [class.btn-spinner]=\"isLoading\"></span> Transfer Fund</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n<div class=\"tab-inner-content px-2 position-relative\">\n    <div class=\"history-title \">Your Transaction History\n        <!-- <small class=\"d-block text-size-12 \">Historical data of your transactions</small> -->\n    </div>\n    <div class=\"wallet_balance\">\n        <p>Pending : <strong style=\"color:#f36\">${{pendingBalance}}.00</strong> </p>\n        <p>Wallet Balance : <strong style=\"color:#10b759 \">${{walletBalance}}.00</strong></p>\n    </div>\n\n    <div class=\"table-container table-responsive table-responsive table-responsive-sm mb-3 \">\n        <div class=\"table-filter-area \">\n            <div class=\"row no-gutters \">\n                <div class=\"col-md-4 form-inline d-none d-md-block \">\n                    <div class=\"form-group mb-2 \">\n                        <label for=\"entries \" class=\" main-txt-color mr-1 \">Show </label>\n                        <select (change)=\"getLedgerDetails($event.target.value,true)\" class=\"form-control main-txt-color bd-color shadow-none \" id=\"entries \">\n                            <option selected>5</option>\n                            <option>10</option>\n                            <option>15</option>\n                            <option>20</option>\n                            <option>25</option>\n                            <option>30</option>\n                            <option>50</option>\n                            <option>100</option>\n                      </select>\n                        <label for=\"entries \" class=\" main-txt-color ml-1 \"> Entries</label>\n                    </div>\n                </div>\n                <div class=\"col-md-3 offset-md-5 \">\n                    <div class=\"form-group \">\n                        <input [(ngModel)]=\"searchText\" type=\"text \" class=\"form-control main-txt-color bd-color shadow-none \" id=\"searchText \" placeholder=\"Enter Keyword to search \" />\n                    </div>\n                </div>\n            </div>\n        </div>\n        <table class=\"table table-hover main-txt-color mb-0 \">\n            <thead class=\"table-header-bg table-header-color \">\n                <tr>\n                    <th [class.active]=\"order === 'sCreadedOn_Str' \" (click)=\"setOrder('sCreadedOn_Str')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Transaction Id</th>\n                    <th [class.active]=\"order === 'Account' \" (click)=\"setOrder('Account')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Timestamp</th>\n                    <th [class.active]=\"order === 'Value' \" (click)=\"setOrder('Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Details</th>\n                    <th [class.active]=\"order === 'oPerc_Value' \" (click)=\"setOrder('oPerc_Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Withdraw</th>\n                    <th [class.active]=\"order === 'oAction' \" (click)=\"setOrder('oAction')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Deposit</th>\n                    <th [class.active]=\"order === 'oAlert_Disable_Trade' \" (click)=\"setOrder('oAlert_Disable_Trade')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Status</th>\n                    <th [class.active]=\"order === 'oAlert_Mail' \" (click)=\"setOrder('oAlert_Mail')\" class=\"font-weight-500 bd-color text-capitalize align-middle align-middle\">Remarks</th>\n                    <th [class.active]=\"order === 'oUP_DOWN' \" (click)=\"setOrder('oUP_DOWN')\" class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Action</th>\n                </tr>\n            </thead>\n            <tbody *ngIf=\"(!IsDataNotFound)\" class=\"secondary-txt-color \">\n                <tr *ngIf=\"(isLoading)\">\n                    <td colspan=\"9\" class=\"text-center\" class=\"align-middle\">\n                        <div class=\"text-size-17 font-weight-300\">Loading ...</div>\n                    </td>\n                </tr>\n                <tr *ngFor=\"let ledger of ledgersDetail | orderBy:order:reverse | filter:searchText | paginate: { itemsPerPage: pageSize, currentPage: p, totalItems: TotalCount}; let i = index\">\n                    <td class=\"align-middle\">{{ledger.uReference}}</td>\n                    <td class=\"align-middle\">{{ledger.sTimestamp?.sCreadedOn_Str | date: 'dd-MM-yyyy hh:mm a'}}</td>\n                    <td class=\"align-middle\">\n                        <span *ngIf=\"ledger.uSource==0\">Neteller</span>\n                        <span *ngIf=\"ledger.uSource==1\">Skrill</span>\n                        <span *ngIf=\"ledger.uSource==2\">Insta mozo</span>\n                        <span *ngIf=\"ledger.uSource==3\">Payee88</span>\n                        <span *ngIf=\"ledger.uSource==4\">Perfect money</span>\n                        <span *ngIf=\"ledger.uSource==5\">Bank wire 1</span>\n                        <span *ngIf=\"ledger.uSource==6\">Bank wire 2</span>\n                        <span *ngIf=\"ledger.uSource==7\">Bank wire 3</span>\n                        <span *ngIf=\"ledger.uSource==8\">Crypto currency</span>\n                        <span *ngIf=\"ledger.uSource==9\">Bank wire 4</span>\n                        <span *ngIf=\"ledger.uSource==10\">Bank wire 5</span>\n                        <span *ngIf=\"ledger.uSource==11\">Bank wire 6</span>\n                    </td>\n                    <td class=\"align-middle\">{{ledger.uTransType==1 ? ledger.uAmount:'-'}}</td>\n                    <td class=\"align-middle\">{{ledger.uTransType==0 ? ledger.uAmount:'-'}}</td>\n                    <td class=\"align-middle\">\n                        <span class=\"badge badge-warning\" *ngIf=\"ledger.uStatus==0\">Pending</span>\n                        <span class=\"badge badge-success\" *ngIf=\"ledger.uStatus==1 && ledger.uComment!='Transaction Claimed '\">Success</span>\n                        <span class=\"badge badge-info\" *ngIf=\"ledger.uComment=='Transaction Claimed '\">Claimed</span>\n                        <span class=\"badge badge-danger\" *ngIf=\"ledger.uStatus==2\">Rejected</span>\n                    </td>\n                    <td class=\"text-center align-middle\">\n                        <i-feather class=\"icon-size-20\" name=\"message-square\" tooltip=\"{{ledger.uComment}}\" placement=\"top\" *ngIf=\"ledger.uComment!=''\"></i-feather>\n                        <i-feather class=\"icon-size-20\" name=\"message-square\" tooltip=\"{{ledger.uAdmMsg}}\" placement=\"top\" *ngIf=\"ledger.uAdmMsg!=''\"></i-feather>\n                    </td>\n                    <td class=\"text-center align-middle\">\n                        <button *ngIf=\"ledger.uStatus==0\" (click)=\"onClaim(ledger.sLedgerId)\" class=\"btn btn-warning btn-sm font-weight-400 text-size-11 btn-sm-padd\" type=\"button\">Claim</button>\n                        <!-- <button *ngIf=\"ledger.uStatus==1\" disabled class=\"btn btn-secondary btn-sm px-3 font-weight-500 text-size-12\" type=\"button\">Not Required</button> -->\n                        <span *ngIf=\"ledger.uStatus==1\"> - </span>\n\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"(IsDataNotFound)\" class=\"text-size-17 font-weight-300 text-center p-4\" style=\"background: #eff3f6;\">There is no wallet to wallet transfer from your Profile</div>\n    </div>\n    <div class=\"table-pagination text-right border-top-0 pt-4\">\n        <pagination-controls (pageChange)=\"getLedgerDetails($event,false)\"></pagination-controls>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal/ngx-bootstrap-modal';\nimport { GlobalService } from '../../../../../shared/services/global.service';\nimport { HttpClient } from '@angular/common/http';\nimport { WithDrawModalData } from '../../../../../shared/models/withdraw.modal';\nimport { NotificationService } from '../../../../../shared/services/notification.service';\n\n@Component({\n  selector: 'app-fund-withdraw',\n  templateUrl: './fund-withdraw.component.html',\n  styleUrls: ['./fund-withdraw.component.scss']\n})\nexport class FundWithdrawComponent implements OnInit {\n  paymentMethodAll: any[] = [];\n  withdraw = new WithDrawModalData();\n  balanceError = false;\n  kycSettingError = false;\n  kycStatusError = false;\n  kycStatus;\n  withDrawSuccess = false;\n  withDrawSuccessMsg = false;\n\n  constructor(private global: GlobalService, private notificationService: NotificationService, private http: HttpClient) {\n    this.kycStatus = JSON.parse(localStorage.getItem('LoggedUser'));\n    this.withdraw.sWalletId = this.global.localDealerwallet;\n    this.withdraw.sDealerID = this.global.localDealerCode;\n  }\n\n  @ViewChild('autoShownModal', { static: false })\n  autoShownModal: ModalDirective;\n  isModalShown = false;\n\n  showModal(uPaySource): void {\n    this.isModalShown = true;\n    this.withdraw.uSource = uPaySource;\n  }\n\n  hideModal(): void {\n    this.autoShownModal.hide();\n  }\n\n  onHidden(): void {\n    this.isModalShown = false;\n  }\n  getPaymentGatewayManual() {\n    const data = {\n      DealerId: 1001\n    };\n    this.global.getManulGateway(data).subscribe(\n      (res: any) => {\n        this.paymentMethodAll = res;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  makeWithdraw(withdrawForm) {\n    console.log(withdrawForm);\n    const walletParans = {\n      sWalletId: this.global.localDealerwallet\n    };\n\n    this.global.getWalletInfo(walletParans).subscribe((resp: any) => {\n      if (resp.uBalance > this.withdraw.uAmount && this.withdraw.uAmount > 0) {\n        const kycSettingParams = {\n          Dealer: this.global.localDealerCode\n        };\n        this.global.getKycset(kycSettingParams).subscribe((kycset: any) => {\n          if (kycset == 3 && this.kycStatus.sProfile.uKYCStatus !== 2) {\n            this.kycSettingError = true;\n            this.notificationService.showWarning('Please update kyc for generating withdraw request', 'Warning');\n            setTimeout(() => {\n              this.kycSettingError = false;\n            }, 10000);\n          } else {\n            this.global.makeManualWithdraw(this.withdraw).subscribe(\n              (withdraw: any) => {\n                this.withDrawSuccess = withdraw.MSG_USER;\n                this.withDrawSuccessMsg = true;\n                // tslint:disable-next-line: max-line-length\n                this.notificationService.showSuccess('Your withdraw request has been generated successfully. please wait for admin approvel', 'Success');\n\n                setTimeout(() => {\n                  this.withDrawSuccessMsg = false;\n                }, 10000);\n              },\n              err => {\n                console.log(err);\n                this.notificationService.showError('unable to generate request for withdraw wallet', 'Error');\n              }\n            );\n          }\n        });\n      } else {\n        this.kycSettingError = false;\n        this.notificationService.showError('Please enter a valid amount', 'Error');\n      }\n    });\n  }\n\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n\n  }\n\n  ngOnInit(): void {\n    this.getPaymentGatewayManual();\n  }\n}\n","<div class=\"small-content-section bg-f\">\n    <div class=\"history-title px-3 border-bottom\">\n        Withdraw From wallet\n        <!-- <small class=\"d-block text-size-12\">You can generate a request from here for withdraw</small> -->\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card border-0 \">\n                <div class=\"card-body border-0 p-0\">\n                    <div class=\"tabs-container\">\n                        <div class=\"tabs-body p-3\">\n                            <div *ngIf=\"isModalShown\" [config]=\"{ show: true }\" (onHidden)=\"onHidden()\" bsModal #autoShownModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-auto-name\">\n                                <div class=\"modal-dialog modal-sm\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h4 id=\"dialog-auto-name\" class=\"modal-title pull-left\"> Withdraw from wallet </h4>\n                                            <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"hideModal()\"><span aria-hidden=\"true\">&times;</span></button>\n                                        </div>\n                                        <div class=\"modal-body\">\n\n                                            <form #withdrawForm=\"ngForm\">\n                                                <div class=\"form-group\">\n                                                    <label for=\"pwd\">Amount</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter Amount\" [(ngModel)]=\"withdraw.uAmount\" name=\"uAmount\" (keypress)=\"numberOnly($event)\" min=\"1\" required>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"pwd\">Payment Details</label>\n                                                    <textarea class=\"form-control\" style=\"height: 100px; width: 100%;resize: vertical;\" [(ngModel)]=\"withdraw.uComment\" name=\"uComment\" required></textarea>\n                                                </div>\n                                            </form>\n                                        </div>\n                                        <div class=\"modal-footer\">\n                                            <button type=\"button\" [disabled]=\"withdrawForm.invalid\" class=\"btn btn-primary btn-sm ml-1\" (click)=\"makeWithdraw(withdrawForm)\">Submit</button>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"table-container table-responsive  mb-3\">\n\n                                <table class=\"table table-hover main-txt-color mb-0\">\n                                    <thead class=\"table-header-bg table-header-color\">\n                                        <tr>\n                                            <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Withdraw Method</th>\n                                            <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Fee/Commission</th>\n                                            <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Processing Time</th>\n                                            <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Withdraw</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody class=\"secondary-txt-color\">\n                                        <tr *ngFor=\"let payment of paymentMethodAll\">\n                                            <!-- <td class=\"gateway_img\">\n                                                <img *ngIf=\"payment.PaySource_Name === 'NETELLER'\" src=\"assets//images/payment_gateway/neteller.png\" alt=\"\">\n                                                <span *ngIf=\"payment.PaySource_Name !== 'NETELLER'\">{{payment.PaySource_Name}}</span>\n                                            </td> -->\n                                            <td>Manual</td>\n                                            <td>---</td>\n                                            <td>---</td>\n                                            <td><button class=\"btn btn-primary btn-sm ml-1\" (click)=\"showModal(payment.uPaySource)\">Withdraw</button></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NotificationService } from './../../../../../shared/services/notification.service';\nimport { HeaderService } from './../../../../../shared/services/header.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {  GlobalService } from '../../../../../shared/services/global.service';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-ledger-details',\n  templateUrl: './ledger-details.component.html',\n  styleUrls: ['./ledger-details.component.scss']\n})\nexport class LedgerDetailsComponent implements OnInit, OnDestroy {\n  public LoggedParams: any;\n  subscription1: Subscription;\n  public walletId;\n  public dealerId;\n  public walletDetails: any;\n  public ledgerDetail: any;\n  public pagination: any;\n  public TotalCount = 0;\n  public cat;\n  public searchText: any; // Search Text property is used to filter text in table\n  public p: any;          // Current page in pagination\n  public pageSize = 10;  // Table Rows Perpage property\n  public sortedData: any[]; // Sorted Product list array\n  public order = '';     // Order property to sort coloum of table\n  public reverse = true; // Reverse property is used to sort table coloum\n  public setParams;\n  constructor(\n    private globalService: GlobalService,\n    private orderPipe: OrderPipe,\n    private headerService: HeaderService,\n    private notificationService: NotificationService\n    ) {\n      this.subscription1 = this.headerService.castLoggedUserDetail.subscribe(\n        resData => (this.LoggedParams = resData)\n      );\n      this.walletId = localStorage.getItem('LoggedDealerwalletID');\n      this.dealerId = localStorage.getItem('LoggedDealerCode');\n      this.sortedData = orderPipe.transform(this.ledgerDetail, this.order);\n  }\n  setOrder(value: string) {\n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n    this.order = value;\n  }\n  onClaim(id: number) {\n    Swal.fire({\n      title: 'Are you Sure!',\n      text: 'Do you really want to Claim Amount? This process cannot be undone',\n      icon: 'error',\n      showCancelButton: true,\n      confirmButtonText: 'Claim',\n      cancelButtonText: 'Cancel',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n        const params = {\n          sDealerID: this.LoggedParams.sProfile.sDealerId,\n          sLedgerId: id,\n          uWalletID: this.LoggedParams.sProfile.sWalletId,\n        };\n        console.log(params);\n        this.globalService.claim(params).subscribe(data => {\n          if (data.Result === true) {\n            this.getLedgerDetails(1, this.cat);\n            Swal.fire(\n              'Claimed!',\n              'Your Amount has been Claimed.',\n              'success'\n            );\n            this.notificationService.showSuccess('Your Amount has been Claimed Successfully', 'Success');\n          }\n        }, err => {\n          console.log(err);\n        });\n      }\n    });\n  }\n  getLedgerDetails(indexval, countVal) {\n    if (countVal) {\n      this.pageSize = indexval;\n      this.p = 1;\n      this.setParams = {\n        WalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Initial: this.p,\n        MaxCount: this.pageSize\n      };\n    } else {\n      this.p = indexval;\n      this.setParams = {\n        WalletId: this.LoggedParams.sProfile.sWalletId,\n        DealerID: this.LoggedParams.sProfile.sDealerId,\n        Initial:  (this.p - 1) * this.pageSize + 1,\n        MaxCount: this.p * this.pageSize\n      };\n    }\n    this.globalService.getLedger(this.setParams).subscribe((ledger: any) => {\n      console.log(ledger);\n      this.TotalCount = ledger.sLedger.Count;\n      this.ledgerDetail = ledger.sLedger.lstLedger.map(res => {\n        return res;\n      });\n      console.log(this.ledgerDetail);\n    }, err => {\n      console.log(err);\n    });\n  }\n  showEntry() { }\n  getWallet() {\n    const data: any = {\n      sWalletId: this.walletId\n    };\n    this.globalService.getWalletInfo(data).subscribe((wallet: any) => {\n      this.walletDetails = wallet;\n      console.log(this.walletDetails);\n    });\n  }\n  ngOnInit(): void {\n    this.getWallet();\n    this.getLedgerDetails(1, this.cat);\n  }\n  ngOnDestroy() {\n    this.subscription1.unsubscribe();\n  }\n\n}\n","<div class=\"small-content-section bg-f\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card border-0 \">\n                <div class=\"card-body border-0 p-0\">\n                    <div class=\"tabs-container\">\n                        <div class=\"history-title px-3 border-bottom\">Your Transaction History\n                            <!-- <small class=\"d-block text-size-12\">Historical data of your transactions</small> -->\n                        </div>\n                        <div class=\"tabs-body p-2\">\n                            <div class=\"tab-inner-content px-2\">\n                                <div class=\"wallet_balance\">\n                                    <p>Pending : <strong style=\"color:#f36\">${{walletDetails?.uPending}}.00</strong> </p>\n                                    <p>Wallet Balance : <strong style=\"color:#10b759 \">${{walletDetails?.uBalance}}.00</strong></p>\n                                </div>\n                                <div class=\"table-filter-area\">\n                                    <div class=\"row no-gutters\">\n                                        <div class=\"col-md-4 form-inline d-none d-md-block\">\n                                            <div class=\"form-group mb-2\">\n                                                <label for=\"entries\" class=\" main-txt-color mr-1\">Show </label>\n                                                <select (change)=\"getLedgerDetails($event.target.value,true)\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"entries\">\n                                                <option>5</option>\n                                                <option>10</option>\n                                                <option>15</option>\n                                                <option>20</option>\n                                                <option>25</option>\n                                                <option>50</option>\n                                            </select>\n                                                <label for=\"entries\" class=\" main-txt-color ml-1\"> Entries</label>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-3 offset-md-5\">\n                                            <div class=\"form-group\">\n                                                <input [(ngModel)]=\"searchText\" name=\"searchText\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"\" placeholder=\"Enter keyword to search\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"table-container table-responsive\">\n                                    <table class=\"table table-hover main-txt-color mb-0\">\n                                        <thead class=\"table-header-bg table-header-color\">\n                                            <tr>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle\" (click)=\"setOrder('uReference')\">Transaction Id</th>\n                                                <!-- <th class=\"font-weight-500 bd-color text-capitalize align-middle\" (click)=\"setOrder('uReference')\">Reference No.</th> -->\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle\" (click)=\"setOrder('sCreadedOn_Str')\">Timestamp</th>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Details</th>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Withdraw</th>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Deposit</th>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle\" (click)=\"setOrder('uStatus')\">Status</th>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Remarks</th>\n                                                <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Action</th>\n                                            </tr>\n                                        </thead>\n\n                                        <tbody class=\"secondary-txt-color\">\n                                            <tr *ngFor=\"let ledger of ledgerDetail | orderBy:order:reverse | filter:searchText | paginate: { itemsPerPage: pageSize, currentPage: p, totalItems: TotalCount}; let i = index\">\n                                                <td>{{ledger.uReference}}</td>\n                                                <!-- <td>{{ledger.uCMW_Reference}}</td> -->\n                                                <td>{{ledger.sTimestamp?.sCreadedOn_Str | date: 'dd-MM-yyyy hh:mm a'}}</td>\n                                                <td>\n                                                    <span *ngIf=\"ledger.uSource==0\">Neteller</span>\n                                                    <span *ngIf=\"ledger.uSource==1\">Skrill</span>\n                                                    <span *ngIf=\"ledger.uSource==2\">Insta mozo</span>\n                                                    <span *ngIf=\"ledger.uSource==3\">Payee88</span>\n                                                    <span *ngIf=\"ledger.uSource==4\">Perfect money</span>\n                                                    <span *ngIf=\"ledger.uSource==5\">Bank wire 1</span>\n                                                    <span *ngIf=\"ledger.uSource==6\">Bank wire 2</span>\n                                                    <span *ngIf=\"ledger.uSource==7\">Bank wire 3</span>\n                                                    <span *ngIf=\"ledger.uSource==8\">Crypto currency</span>\n                                                    <span *ngIf=\"ledger.uSource==9\">Bank wire 4</span>\n                                                    <span *ngIf=\"ledger.uSource==10\">Bank wire 5</span>\n                                                    <span *ngIf=\"ledger.uSource==11\">Bank wire 6</span>\n                                                </td>\n                                                <td>{{ledger.uTransType==1 ? ledger.uAmount:'-'}}</td>\n                                                <td>{{ledger.uTransType==0 ? ledger.uAmount:'-'}}</td>\n                                                <td>\n                                                    <span class=\"badge badge-warning\" *ngIf=\"ledger.uStatus==0\">Pending</span>\n                                                    <span class=\"badge badge-success\" *ngIf=\"ledger.uStatus==1 && ledger.uComment!='Transaction Claimed '\">Success</span>\n                                                    <span class=\"badge badge-info\" *ngIf=\"ledger.uComment=='Transaction Claimed '\">Claimed</span>\n                                                    <span class=\"badge badge-danger\" *ngIf=\"ledger.uStatus==2\">Rejected</span>\n                                                </td>\n                                                <td class=\"text-center\">\n                                                    <i-feather class=\"icon-size-20\" name=\"message-square\" tooltip=\"{{ledger.uComment}}\" placement=\"top\" *ngIf=\"ledger.uComment!=''\"></i-feather>\n                                                    <i-feather class=\"icon-size-20\" name=\"message-square\" tooltip=\"{{ledger.uAdmMsg}}\" placement=\"top\" *ngIf=\"ledger.uAdmMsg!=''\"></i-feather>\n                                                </td>\n                                                <td class=\"text-center\">\n                                                    <button (click)=\"onClaim(ledger.sLedgerId)\" *ngIf=\"ledger.uStatus==0\" class=\"btn btn-warning btn-sm font-weight-400 text-size-11 btn-sm-padd\" type=\"button\">Claim</button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                                <div class=\"table-pagination text-right border-top-0 pt-4\">\n                                    <pagination-controls (pageChange)=\"getLedgerDetails($event,false)\"></pagination-controls>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { AccountToWalletComponent } from './fund-management-core/fund-transfer/account-to-wallet/account-to-wallet.component';\nimport { AccountToAccountComponent } from './fund-management-core/fund-transfer/account-to-account/account-to-account.component';\nimport { WalletToWalletComponent } from './fund-management-core/fund-transfer/wallet-to-wallet/wallet-to-wallet.component';\nimport { ToAccountComponent } from './fund-management-core/fund-deposit/to-account/to-account.component';\nimport { ToWalletComponent } from './fund-management-core/fund-deposit/to-wallet/to-wallet.component';\nimport { LedgerDetailsComponent } from './fund-management-core/ledger-details/ledger-details.component';\nimport { FundWithdrawComponent } from './fund-management-core/fund-withdraw/fund-withdraw.component';\nimport { FundTransferComponent } from './fund-management-core/fund-transfer/fund-transfer.component';\nimport { FundDepositComponent } from './fund-management-core/fund-deposit/fund-deposit.component';\nimport { FundManagementCoreComponent } from './fund-management-core/fund-management-core.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FundManagementCoreComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'deposit-funds'\n      },\n      {\n        path: 'deposit-funds',\n        component: FundDepositComponent,\n        data: {breadcrumb: 'Deposit Funds'},\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'deposit-to-wallet',\n          },\n          {\n            path: 'deposit-to-wallet',\n            component: ToWalletComponent,\n            data: {title: 'Deposit Funds', breadcrumb: 'Deposit To Wallet'}\n          },\n          {\n            path: 'deposit-to-account',\n            component: ToAccountComponent,\n            data: {title: 'Deposit Funds', breadcrumb: 'Deposit To Account'}\n          },\n        ]\n      },\n      {\n        path: 'transfer-funds',\n        component: FundTransferComponent,\n        data: {breadcrumb: 'Transfer Funds'},\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'wallet-to-wallet'\n          },\n          {\n            path: 'wallet-to-wallet',\n            component: WalletToWalletComponent,\n            data: {title: 'Transfer Funds', breadcrumb: 'Wallet To Wallet'}\n          },\n          {\n            path: 'account-to-account',\n            component: AccountToAccountComponent,\n            data: {title: 'Transfer Funds', breadcrumb: 'Account To Account'}\n          },\n          {\n            path: 'account-to-wallet',\n            component: AccountToWalletComponent,\n            data: {title: 'Transfer Funds', breadcrumb: 'Account To Wallet'}\n          },\n        ]\n      },\n      {\n        path: 'withdraw-funds',\n        component: FundWithdrawComponent,\n        data: {title: 'Withdraw Funds', breadcrumb: 'Withdraw Funds'}\n      },\n      {\n        path: 'ledger-overview',\n        component: LedgerDetailsComponent,\n        data: {title: 'Ledger Overview', breadcrumb: 'Ledger Overview'}\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FundManagementRoutingModule { }\n","import { SharedModule } from './../../../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AlertModule } from 'ngx-bootstrap/alert';\n\nimport { FundManagementRoutingModule } from './fund-management-routing.module';\nimport { FundManagementCoreComponent } from './fund-management-core/fund-management-core.component';\nimport { FundDepositComponent } from './fund-management-core/fund-deposit/fund-deposit.component';\nimport { ToWalletComponent } from './fund-management-core/fund-deposit/to-wallet/to-wallet.component';\nimport { ToAccountComponent } from './fund-management-core/fund-deposit/to-account/to-account.component';\nimport { FundWithdrawComponent } from './fund-management-core/fund-withdraw/fund-withdraw.component';\nimport { LedgerDetailsComponent } from './fund-management-core/ledger-details/ledger-details.component';\nimport { FundTransferComponent } from './fund-management-core/fund-transfer/fund-transfer.component';\nimport { WalletToWalletComponent } from './fund-management-core/fund-transfer/wallet-to-wallet/wallet-to-wallet.component';\nimport { AccountToAccountComponent } from './fund-management-core/fund-transfer/account-to-account/account-to-account.component';\nimport { AccountToWalletComponent } from './fund-management-core/fund-transfer/account-to-wallet/account-to-wallet.component';\n\n\n@NgModule({\n  declarations: [\n    FundManagementCoreComponent,\n    FundDepositComponent,\n    ToWalletComponent,\n    ToAccountComponent,\n    FundWithdrawComponent,\n    LedgerDetailsComponent,\n    FundTransferComponent,\n    WalletToWalletComponent,\n    AccountToAccountComponent,\n    AccountToWalletComponent],\n  imports: [\n    CommonModule,\n    FundManagementRoutingModule,\n    SharedModule,\n    AlertModule.forRoot(),\n  ]\n})\nexport class FundManagementModule { }\n","export class DepositWalletModalData {\r\n    uCommission: number | undefined | null;\r\n    uAmount: number | undefined | null;\r\n    uComment: string | undefined | null;\r\n    sWalletId: string | undefined | null;\r\n    sDealerID: string | undefined | null;\r\n    sProcessedBy: number | undefined | null;\r\n    uSourceInfo: string | undefined | null;\r\n    uReceipt_Snap: string | undefined | null;\r\n    uBalance: number | undefined | null;\r\n    uSource: number | undefined | null;\r\n    uStatus: number | undefined | null;\r\n    sTimestamp = {\r\n      sCreatedOn_Str: new Date(),\r\n      sUpdatedOn_Str: new Date()\r\n    }\r\n   constructor() {\r\n    this.uCommission = 0;\r\n    this.uAmount = 0;\r\n    this.uComment = '';\r\n    this.sWalletId = '';\r\n    this.sDealerID = '';\r\n    this.sProcessedBy = 0;\r\n    this.uSourceInfo = '';\r\n    this.uReceipt_Snap = '';\r\n    this.uBalance = 0;\r\n    this.uSource = 0;\r\n    this.uStatus = 0;\r\n   }\r\n  };","export class WithDrawModalData {\r\n    uCommission: number | undefined | null;\r\n    uAmount: number | undefined | null;\r\n    uComment: string | undefined | null;\r\n    sWalletId: string | undefined | null;\r\n    sDealerID: string | undefined | null;\r\n    sProcessedBy: number | undefined | null;\r\n    uSourceInfo: string | undefined | null;\r\n    uReceipt_Snap: string | undefined | null;\r\n    uBalance: number | undefined | null;\r\n    uSource: number | undefined | null;\r\n    uStatus: number | undefined | null;\r\n    sTimestamp = {\r\n      sCreatedOn_Str: new Date(),\r\n      sUpdatedOn_Str: new Date()\r\n    }\r\n   constructor() {\r\n    this.uCommission = 0;\r\n    this.uAmount = 0;\r\n    this.uComment = '';\r\n    this.sWalletId = '';\r\n    this.sDealerID = '';\r\n    this.sProcessedBy = 0;\r\n    this.uSourceInfo = '';\r\n    this.uReceipt_Snap = '';\r\n    this.uBalance = 0;\r\n    this.uSource = 0;\r\n    this.uStatus = 0;\r\n   }\r\n  }\r\n"],"sourceRoot":"webpack:///"}