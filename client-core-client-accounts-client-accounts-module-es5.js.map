{"version":3,"sources":["webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/accounts-management.component.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/accounts-management.component.html","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/live-account-configuration/live-account-configuration.component.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/live-account-configuration/live-account-configuration.component.html","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/open-demo-account/open-demo-account.component.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/open-demo-account/open-demo-account.component.html","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/open-live-account/open-live-account.component.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/open-live-account/open-live-account.component.html","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-overview.component.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-overview.component.html","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/accounts-settings-models.component.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/accounts-settings-models.component.html","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/change-investor-password/change-investor-password.component.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/change-investor-password/change-investor-password.component.html","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/change-leverage/change-leverage.component.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/change-leverage/change-leverage.component.html","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/change-master-password/change-master-password.component.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/change-master-password/change-master-password.component.html","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/demo-account-overview/demo-account-overview.component.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/demo-account-overview/demo-account-overview.component.html","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/live-account-overview/live-account-overview.component.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/live-account-overview/live-account-overview.component.html","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/client-accounts-core.component.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts-core/client-accounts-core.component.html","webpack:///src/app/pages/client-core/client-accounts/client-accounts-routing.module.ts","webpack:///src/app/pages/client-core/client-accounts/client-accounts.module.ts","webpack:///src/app/shared/models/account-verification.modal.ts","webpack:///src/app/shared/models/open-demo-account.modal.ts","webpack:///src/app/shared/models/open-live-account.modal.ts"],"names":["AccountsManagementComponent","selector","templateUrl","styleUrls","LiveAccountConfigurationComponent","global","mt4Manager","accountData","passwordMsg","canExitStep2Backwards","canExitStep2Forwards","canExitStep3","canExitStep2","direction","Forwards","Backwards","Stay","GET_MT4_MANAGERS","DealerIds","params","DealerId","subscribe","data","err","console","log","accountInformation","form","value","Password","status","canExitStep1","event","charCode","which","keyCode","GET_ACCOUNT_VERIFICATION","res","getAccountDetails","account","password","MasterId","localDealermasterID","PlanId","PkgId","Leverage","Account","CONFIGURE_ACCOUNT","confAccDetail","numberOnly","checkStep","OpenDemoAccountComponent","allPackage","demoAccount","accountSuccessMsg","getLeverage","masterId","localStorage","getItem","nameUser","LoggedParams","JSON","parse","name","sProfile","uPersonalInfo","First","country","uAddressInfo","Country","email","uContactInfo","Email","account_type","oAccount_Type","getPackage","accountType","find","plan","planId","sAccountPlanId","PackageId","getLeverageByPackage","pkg","demoAccountGroup","LoginId","Depoist","Amount","Name","openDemoAcc","MT4Account","accountErrorMsg","ERR_MSG","canExitStepdemo","getPlan","demoLiveAccount","OpenLiveAccountComponent","liveAccount","ReferCode","IB_Code","openAcc","openLiveAccount","AccountsOverviewComponent","AccountsSettingsModelsComponent","bsModalRef","list","isFirstOpen","oneAtATime","accountDetails","ChangeInvestorPasswordComponent","submitted","ErrorMsqBlock","successMsqBlock","isPasswordLengthOk","accountDetail","isPasswordPatterenOK","length","newMPassword","chnageInvestorPasswordForm","newPassword","ConfirmMPassword","cpPassword","messageToDisplay","ManagerIndex","uManager","changeInvestorPassword","ERR_DEV","MSG_USER","setTimeout","onKeydown","onblur","static","ChangeLeverageComponent","changeLeverage","checkLeverage","leverageList","spin","changeLev","Result","ChangeMasterPasswordComponent","ErrorMsq","successMsq","chnageMasterPasswordForm","changeMasterPassword","DemoAccountOverviewComponent","LiveAccountOverviewComponent","orderPipe","modalService","notificationService","liveAccountData","TotalCount","pageSize","order","reverse","sortedLiveAccountData","transform","getAccounts","p","ProfileId","sMasterId","accountSnapSubscription","GET_PROFILE_ACCOUNTS","lstAccount","map","acc","Object","assign","sUserInfo","sAccountPlan","showError","unsubscribe","selectedItem","initialState","title","show","content","closeBtnName","onChangePageSize","setOrder","ClientAccountsCoreComponent","routes","path","component","children","pathMatch","redirectTo","breadcrumb","ClientAccountsRoutingModule","forChild","imports","exports","ClientAccountsModule","declarations","entryComponents","AccountVerificationModalData","DemoAccountModalData","Plan","confirm_password","LiveAccountModalData"],"mappings":"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","file":"client-core-client-accounts-client-accounts-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-accounts-management',\n  templateUrl: './accounts-management.component.html',\n  styleUrls: ['./accounts-management.component.scss']\n})\nexport class AccountsManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"small-content-section bg-f\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card border-0 \">\n                <div class=\"card-body border-0 p-0\">\n                    <div class=\"tabs-container\">\n                        <ul class=\"tabs-heading d-flex flex-row border-bottom\">\n                            <li class=\"tabs-item\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/accounts/management/live-account-configuration\">Configure Account</a>\n                            </li>\n                            <li class=\"tabs-item\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/accounts/management/open-live-account\">Open Live Account</a>\n                            </li>\n                            <li class=\"tabs-item\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/accounts/management/open-demo-account\">Open Demo Account</a>\n                            </li>\n                        </ul>\n                        <div class=\"tabs-body p-2\">\n                            <router-outlet></router-outlet>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from '../../../../../../shared/services/global.service';\nimport { AccountVerificationModalData } from '../../../../../../shared/models/account-verification.modal';\nimport { MovingDirection } from 'angular-archwizard';\n@Component({\n  selector: 'app-live-account-configuration',\n  templateUrl: './live-account-configuration.component.html',\n  styleUrls: ['./live-account-configuration.component.scss']\n})\nexport class LiveAccountConfigurationComponent implements OnInit {\n  public mt4Manager: any[] = [];\n  public accountData: any = new AccountVerificationModalData();\n  public getAccountDetails: any;\n  public confAccDetail: any;\n  public passwordMsg = false;\n  public canExitStep1: boolean;\n  public cpassword: any;\n  public canExitStep2Backwards = true;\n  public canExitStep2Forwards = true;\n  public canExitStep3 = true;\n  public canExitStep2: (MovingDirection) => boolean = (direction) => {\n    switch (direction) {\n      case MovingDirection.Forwards:\n        return this.canExitStep2Forwards;\n      case MovingDirection.Backwards:\n        return this.canExitStep2Backwards;\n      case MovingDirection.Stay:\n        return true;\n    }\n  }\n  constructor(public global: GlobalService) {\n    this.GET_MT4_MANAGERS(1001);\n  }\n  // GET ACCOUNT TYPE\n  GET_MT4_MANAGERS(DealerIds) {\n    const params = {\n      DealerId: DealerIds\n    };\n    this.global.GET_MT4_MANAGERS(params).subscribe(data => {\n      this.mt4Manager = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  // tslint:disable-next-line: variable-name\n  checkStep(accountInformation) {\n    if (accountInformation.form.value.Password && accountInformation.form.status === 'VALID') {\n      this.canExitStep1 = true;\n    } else {\n      this.canExitStep1 = false;\n    }\n  }\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n\n  }\n  // GET ACCOUNT VERIFICATION\n  // tslint:disable-next-line: variable-name\n  GET_ACCOUNT_VERIFICATION(accountInformation) {\n\n    if (accountInformation.form.value.Password && accountInformation.form.status === 'VALID') {\n      this.global.GET_ACCOUNT_VERIFICATION(accountInformation.form.value).subscribe((res: any) => {\n        if (res) {\n          this.getAccountDetails = res;\n        }\n      }, err => {\n        console.log(err);\n      });\n      this.passwordMsg = false;\n    } else {\n      this.passwordMsg = true;\n      this.canExitStep1 = false;\n    }\n  }\n\n  // GET CONFIGURE ACCOUNT\n  CONFIGURE_ACCOUNT(account: HTMLInputElement, password: HTMLInputElement) {\n    const params: any = {\n      MasterId: this.global.localDealermasterID,\n      PlanId: this.getAccountDetails.PkgId,\n      Leverage: this.getAccountDetails.Leverage,\n      Account: account.value,\n      Password: password.value\n    };\n    this.global.CONFIGURE_ACCOUNT(params).subscribe(data => {\n      this.confAccDetail = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n  ngOnInit() {}\n}\n","<!-- Step Wizard Reference :https://www.npmjs.com/package/angular-archwizard -->\n<div class=\"row\">\n    <div class=\"col-sm-12 col-lg-10 \">\n        <div class=\"stepsContainer\" id=\"configure-account-step\">\n            <aw-wizard id=\"\" class=\"aw-wizard-css\" navBarLayout=\"large-filled\">\n                <aw-wizard-step stepTitle=\"Account Information\" class=\"step1\" [canExit]=\"canExitStep1\" [navigationSymbol]=\"{ symbol: '1' }\">\n                    <div class=\"step-body rounded m-3 p-3\">\n                        <div class=\"step-heading-section mb-3\">\n                            <h3 class=\"title\">Configure Your Account</h3>\n                            <p class=\"description\">Please fill all the mandatory fields</p>\n                        </div>\n                        <form #getAccount=\"ngForm\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label> Account number</label> <span class=\"asterick\">*</span>\n                                        <input autocomplete=\"off\" type=\"text\" class=\"form-control\" placeholder=\"Enter account number\" #account=\"ngModel\" #accountt name=\"Account\" (keypress)=\"numberOnly($event)\" [(ngModel)]=\"accountData.Account\" pattern=\"^-?(0|[1-9]\\d*)?$\" required>\n                                        <div *ngIf=\"account.touched && account.invalid\">\n                                            <label class=\"error_msg\" *ngIf=\"account.errors?.required\">Account number is\n                                                a required field !</label>\n                                            <label class=\"error_msg\" *ngIf=\"account.errors?.pattern\">Account number will\n                                                be numeric value !</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Plan</label> <span class=\"asterick\">*</span>\n                                        <select class=\"form-control\" name=\"ManagerIndex\" [(ngModel)]=\"accountData.ManagerIndex\">\n                                            <option value=\"\" [disabled]=\"true\">Select Plan</option>\n                                            <option *ngFor=\"let manager of mt4Manager\" name=\"managerIndex\" [ngValue]=\"manager.Manager_Index\">{{manager.ServerCODE}}</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-12\">\n                                    <label *ngIf=\"passwordMsg\" class=\"error_msg\">Password doesn't match !</label>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Password</label> <span class=\"asterick\">*</span>\n                                        <input autocomplete=\"off\" type=\"password\" class=\"form-control\" placeholder=\"Enter your password\" #password name=\"Password\" (keyup)=\"checkStep(getAccount)\" [(ngModel)]=\"accountData.Password\" required>\n                                        <label *ngIf=\"passwordMsg\" class=\"error_msg\">Password doesn't match !</label>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Confirm Password  <span class=\"asterick\">*</span></label>\n                                        <input type=\"Password\" class=\"form-control\" placeholder=\"Enter your confirm password\" (keyup)=\"checkStep(getAccount,confirm_pass)\" #confirm_pass name=\"cpassword\" [(ngModel)]=\"cpassword\" required>\n                                    </div>\n                                </div> -->\n                            </div>\n\n                            <div class=\"btn-row clearfix\">\n                                <button type=\"submit\" [disabled]=\"!getAccount.valid\" awNextStep class=\"btn btn-primary btn-sm mt-3 float-right\" (click)=\"GET_ACCOUNT_VERIFICATION(getAccount)\">Next Step <span>Account\n                                        confirmation </span></button>\n                            </div>\n                        </form>\n                    </div>\n                </aw-wizard-step>\n                <aw-wizard-step stepTitle=\"Account Confirmation\" [canExit]=\"canExitStep2\" [navigationSymbol]=\"{ symbol: '2' }\">\n                    <div class=\"step-body rounded m-3 p-4\">\n                        <div class=\"step-heading-section mb-4\">\n                            <h3 class=\"title\">Account Confirmation</h3>\n                            <p class=\"description\">Please confirm your account details and click on Confirm button to configure your account</p>\n                        </div>\n                        <div class=\"details-container\">\n                            <div class=\"details-table border bd-color rounded p-3\">\n                                <table class=\"table table-hover table-sm\">\n                                    <tbody>\n                                        <tr>\n                                            <td class=\"d-label border-0\">Name</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.Name}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"d-label border-0\">Email Address</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.Email}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"d-label border-0\">Balance</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.Balance}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"d-label border-0\">Equity Status</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.Equity}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"d-label border-0\">Leverage Status</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.Leverage}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"d-label border-0\">Package</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.Package}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"d-label border-0\">PkgId</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.PkgId}}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        <div class=\"btn-row clearfix\">\n                            <button type=\"button\" awPreviousStep class=\"btn btn-primary btn-sm mt-3 float-left\">\n                                Previous Step\n                                <span>Account Information </span>\n                            </button>\n                            <button type=\"button\" awNextStep class=\"btn btn-primary btn-sm mt-3 float-right\" (click)=\"CONFIGURE_ACCOUNT(accountt,password)\">\n                                Next Step\n                                <span>Account confirmation</span>\n                            </button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n\n\n                <aw-wizard-step stepTitle=\"Confirmation Message\" [canExit]=\"canExitStep3\" [navigationSymbol]=\"{ symbol: '3' }\">\n                    <div class=\"step-body rounded m-3 p-4\">\n                        <div class=\"step-heading-section mb-4\">\n                            <h3 class=\"title\">Confirmation Message</h3>\n                            <p class=\"description\">Please Check your confirmation message. After checking message click on finish button and go to accounts overview screen</p>\n                        </div>\n                        <div class=\"details-container\">\n                            <div class=\"message-area border bd-color rounded p-3\" style=\"height:100px\">\n                                <div class=\"message\">{{confAccDetail?.MSG_USER}}</div>\n                            </div>\n\n                        </div>\n                        <div class=\"btn-row clearfix\">\n                            <button type=\"button\" awPreviousStep class=\"btn btn-primary btn-sm mt-3 float-left\">\n                                Previous Step\n                                <span>Account Information </span>\n                            </button>\n                            <button type=\"button\" class=\"btn btn-primary btn-sm mt-3 float-right\" routerLink=\"['/home/accounts/overview/live-account-overview']\">\n                                Finish Step <span>Go to Accounts Overview</span>\n                            </button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n            </aw-wizard>\n        </div>\n    </div>\n    <!-- <div class=\"col-lg-4 col-sm-12\">\n        <div class=\"text-center\" style=\"position: relative; top: 50%; left: 50%; transform: translate(-50%, -50%);\">\n            <img src=\"assets/images/right_Icon.png\" class=\"\">\n        </div>\n    </div> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DemoAccountModalData } from '../../../../../../shared/models/open-demo-account.modal';\nimport { GlobalService } from '../../../../../../shared/services/global.service';\n\n@Component({\n  selector: 'app-open-demo-account',\n  templateUrl: './open-demo-account.component.html',\n  styleUrls: ['./open-demo-account.component.scss']\n})\nexport class OpenDemoAccountComponent implements OnInit {\n\n   public masterId: string;\n  public planId: number;\n  public allPackage: any[] = [];\n  public demoAccount = new DemoAccountModalData();\n  public accountSuccessMsg = false;\n  public accountErrorMsg: string;\n  public passwordMsg = false;\n  public nameUser: string;\n  public canExitStepdemo: boolean;\n  public LoggedParams: any;\n  public name: string;\n  public country: string;\n  public email: string;\n  constructor(private global: GlobalService) {\n    this.getLeverage();\n    this.masterId = localStorage.getItem('LoggedDealermasterid');\n    this.nameUser = localStorage.getItem('LoggedDealerName');\n    this.LoggedParams = JSON.parse(localStorage.getItem('LoggedUser'));\n    this.name = this.LoggedParams.sProfile.uPersonalInfo.First;\n    this.country = this.LoggedParams.sProfile.uAddressInfo.Country;\n    this.email = this.LoggedParams.sProfile.uContactInfo.Email;\n   }\n  getPlan(account_type) {\n    const data: any = {\n      oAccount_Type: account_type,\n      DealerId: 1001\n    };\n    this.global.getPackage(data).subscribe((accountType: any) => {\n      accountType.find(plan => {\n        this.planId = plan.sAccountPlanId;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  getLeverage() {\n    const data: any = {\n      PackageId: 1000\n    };\n    this.global.getLeverageByPackage(data).subscribe((pkg: any) => {\n      console.log(pkg);\n      this.allPackage = pkg;\n    }, err => {\n      console.log(err);\n    });\n  }\n  demoLiveAccount(demoAccountGroup) {\n    const data: any = {\n      MasterId: this.masterId,\n      PlanId: this.planId,\n      LoginId: this.masterId,\n      Depoist: this.demoAccount.Amount,\n      Name: this.nameUser,\n      Password: this.demoAccount.password\n    };\n    if (demoAccountGroup.form.value.password && demoAccountGroup.form.status === 'VALID') {\n    this.global.openDemoAcc(data).subscribe((res: any) => {\n      if (res.MT4Account) {\n        this.accountSuccessMsg = true;\n      } else {\n        this.accountErrorMsg = res.ERR_MSG;\n      }\n    }, err => {\n      console.log(err);\n    });\n    this.passwordMsg = false;\n      } else {\n         this.passwordMsg = true;\n      }\n  }\n  checkStep(demoAccountGroup) {\n    if (demoAccountGroup.form.value.password && demoAccountGroup.form.status === 'VALID') {\n      this.canExitStepdemo = true;\n    } else {\n      this.canExitStepdemo = false;\n    }\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Step Wizard Reference :https://www.npmjs.com/package/angular-archwizard -->\n<div class=\"row\">\n    <div class=\"col-lg-10 col-sm-12\">\n        <div class=\"stepsContainer\" id=\"demo-account-step\">\n            <aw-wizard id=\"\" class=\"aw-wizard-css\" navBarLayout=\"large-filled\">\n                <aw-wizard-step stepTitle=\"Account Information\" class=\"step1\" [navigationSymbol]=\"{ symbol: '1' }\">\n                    <div class=\"step-body rounded m-3 p-3\">\n                        <div class=\"step-heading-section mb-3\">\n                            <h3 class=\"title\">Demo Account</h3>\n                            <p class=\"description\">Please fill all the mandatory fields</p>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"name\" disabled required>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Country</label>\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"country\" disabled required>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Email</label>\n                                    <input type=\"email\" class=\"form-control\" [(ngModel)]=\"email\" disabled required>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"btn-row clearfix\">\n                            <button type=\"button\" awNextStep class=\"btn btn-primary btn-sm mt-3 float-right\">Next Step <span>Account confirmation </span></button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n                <aw-wizard-step stepTitle=\"Account Confirmation\" [navigationSymbol]=\"{ symbol: '2' }\" [canExit]=\"canExitStepdemo\">\n                    <div class=\"step-body rounded m-3 p-4\">\n                        <div class=\"step-heading-section mb-4\">\n                            <h3 class=\"title\">Account Confirmation</h3>\n                            <p class=\"description\">Please confirm your account details and click on Confirm button to configure your account</p>\n                        </div>\n                        <form #demoAccountGroup=\"ngForm\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Plan</label> <span class=\"asterick\">*</span>\n                                        <select class=\"form-control\" [(ngModel)]=\"demoAccount.Plan\" name=\"Plan\" (change)=\"getPlan(demoAccount.Plan)\" required>\n                                                <option value=\"\" [disabled]=\"true\">Select Account Plan</option>\n                                                <option value=\"0\">Demo</option>\n                                            </select>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Amount </label> <span class=\"asterick\">*</span>\n                                        <select [(ngModel)]=\"demoAccount.Amount\" name=\"Amount\" class=\"form-control\" required>\n                                                <option value=\"\" disabled=\"true\">Select Leverage</option>\n                                                <option>100</option>\n                                                <option>500</option>\n                                                <option>1000</option>\n                                                <option>2000</option>\n                                                <option>3000</option>\n                                                <option>4000</option>\n                                                <option>5000</option>\n                                            </select>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>password</label>\n                                        <input type=\"password\" (keyup)=\"checkStep(demoAccountGroup)\" class=\"form-control\" #password placeholder=\"Enter password\" [(ngModel)]=\"demoAccount.password\" name=\"password\" required>\n                                        <label *ngIf=\"passwordMsg\" class=\"error_msg\">Password doesn't match !</label>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Confirm password</label>\n                                        <input type=\"password\" (keyup)=\"checkStep(demoAccountGroup,confirm_password)\" #confirm_password class=\"form-control\" [(ngModel)]=\"demoAccount.confirm_password\" name=\"confirm_password\" required>\n                                    </div>\n                                </div> -->\n                            </div>\n                            <div class=\"btn-row clearfix\">\n                                <button type=\"button\" awPreviousStep class=\"btn btn-primary btn-sm mt-3 float-left\"> Previous Step \n                                    <span>Account Information </span> \n                                </button>\n                                <button (click)=\"demoLiveAccount(demoAccountGroup)\" [disabled]=\"demoAccountGroup.invalid\" type=\"button\" awNextStep class=\"btn btn-primary btn-sm mt-3 float-right\">Next Step\n                                    <span>Account confirmation</span>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </aw-wizard-step>\n\n                <aw-wizard-step stepTitle=\"Confirmation Message\" [navigationSymbol]=\"{ symbol: '3' }\">\n                    <div class=\"step-body rounded m-3 p-4\">\n                        <div class=\"step-heading-section mb-4\">\n                            <h3 class=\"title\">Confirmation Message</h3>\n                            <p class=\"description\">Please Check your confirmation message. After checking message click on finish button and go to accounts overview screen</p>\n                        </div>\n                        <div class=\"details-container\">\n                            <div class=\"message-area border bd-color rounded p-3\" style=\"height:100px\">\n                                <div class=\"message\" *ngIf=\"accountSuccessMsg\">Congratulations! Your account has been configured successfully.</div>\n                                <div class=\"message\" [innerHTML]=\"accountErrorMsg\"></div>\n                            </div>\n\n                        </div>\n                        <div class=\"btn-row clearfix\">\n                            <button type=\"button\" class=\"btn btn-primary btn-sm mt-3 float-right\" [routerLink]=\"[ '/home/accounts/overview/live-account-overview']\">\n                                Finish Step <span>Go to Accounts Overview</span>\n                            </button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n\n            </aw-wizard>\n        </div>\n    </div>\n    <!-- <div class=\"col-lg-4 col-sm-12\">\n        <div class=\"text-center\" style=\"position: relative; top: 50%; left: 50%; transform: translate(-50%, -50%);\">\n            <img src=\"assets/images/right_Icon.png\" class=\"\">\n        </div>\n    </div> -->\n</div>","import {Component, OnInit } from '@angular/core';\nimport { GlobalService } from '../../../../../../shared/services/global.service';\nimport {  LiveAccountModalData } from '../../../../../../shared/models/open-live-account.modal';\n\n@Component({\n  selector: 'app-open-live-account',\n  templateUrl: './open-live-account.component.html',\n  styleUrls: ['./open-live-account.component.scss']\n})\nexport class OpenLiveAccountComponent implements OnInit {\n  public planId: number;\n  public allPackage: any[] = [];\n  public liveAccount = new LiveAccountModalData();\n  public accountSuccessMsg = false;\n  public accountErrorMsg: string;\n  public masterId: string;\n  public name: string;\n  public country: string;\n  public LoggedParams: any;\n  public email: string;\n  constructor(private global: GlobalService) {\n    this.getLeverage();\n    this.masterId = localStorage.getItem('LoggedDealermasterid');\n    this.LoggedParams = JSON.parse(localStorage.getItem('LoggedUser'));\n    this.name = this.LoggedParams.sProfile.uPersonalInfo.First;\n    this.country = this.LoggedParams.sProfile.uAddressInfo.Country;\n    this.email = this.LoggedParams.sProfile.uContactInfo.Email;\n  }\n  getPlan(account_type) {\n    const data: any = {\n      oAccount_Type: account_type,\n      DealerId: 1001\n    }\n    this.global.getPackage(data).subscribe((accountType: any) => {\n      accountType.find(plan => {\n        this.planId = plan.sAccountPlanId;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  getLeverage() {\n    const data: any = {\n      PackageId: 1000\n    };\n    this.global.getLeverageByPackage(data).subscribe((pkg: any) => {\n      console.log(pkg);\n      this.allPackage = pkg;\n    }, err => {\n      console.log(err);\n    });\n  }\n  openLiveAccount() {\n    // alert(this.liveAccount.Leverage);\n    const data: any = {\n      PlanId: this.planId,\n      Leverage: this.liveAccount.Leverage,\n      MasterId: this.masterId,\n      LoginId: this.masterId,\n      Depoist: 0,\n      ReferCode: this.liveAccount.IB_Code\n    };\n    this.global.openAcc(data).subscribe((res: any) => {\n      if (res.MT4Account) {\n        this.accountSuccessMsg = true;\n      } else {\n        this.accountErrorMsg = res.ERR_MSG;\n      }\n    }, err => {\n      console.log(err);\n    });\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n","<!-- Step Wizard Reference :https://www.npmjs.com/package/angular-archwizard -->\n<div class=\"row\">\n    <div class=\"col-lg-10 col-sm-12\">\n        <div class=\"stepsContainer\" id=\"live-account-step\">\n            <aw-wizard id=\"\" class=\"aw-wizard-css\" navBarLayout=\"large-filled\">\n                <aw-wizard-step stepTitle=\"Account Information\" class=\"step1\" [navigationSymbol]=\"{ symbol: '1' }\">\n                    <div class=\"step-body rounded m-3 p-3\">\n                        <div class=\"step-heading-section mb-3\">\n                            <h3 class=\"title\">Live Account</h3>\n                            <p class=\"description\">Please fill all the mandatory fields</p>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"name\" disabled required>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Country</label>\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"country\" disabled required>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Email</label>\n                                    <input type=\"email\" class=\"form-control\" [(ngModel)]=\"email\" disabled required>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"btn-row clearfix\">\n                            <button type=\"button\" awNextStep class=\"btn btn-primary btn-sm mt-3 float-right\">Next Step <span>Account confirmation </span></button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n                <aw-wizard-step stepTitle=\"Account Confirmation\" [navigationSymbol]=\"{ symbol: '2' }\">\n                    <div class=\"step-body rounded m-3 p-4\">\n                        <div class=\"step-heading-section mb-4\">\n                            <h3 class=\"title\">Account Confirmation</h3>\n                            <p class=\"description\">Please confirm your account details and click on Confirm button to configure your account\n                            </p>\n                        </div>\n                        <form #liveAccountGroup=\"ngForm\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Plan</label><span class=\"asterick\">*</span>\n                                        <select class=\"form-control\" [(ngModel)]=\"liveAccount.Plan\" name=\"Plan\" (change)=\"getPlan(liveAccount.Plan)\" required>\n                                                <option value=\"\" [disabled]=\"true\">Select Account Plan</option>\n                                                <option value=\"1\">Live</option>\n                                            </select>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Leverage </label><span class=\"asterick\">*</span>\n                                        <select [(ngModel)]=\"liveAccount.Leverage\" name=\"Leverage\" class=\"form-control\" required>\n                                                <option value=\"\" disabled=\"true\">Select Leverage</option>\n                                                <option *ngFor=\"let lev of allPackage\" [ngValue]=\"lev\">1 : {{lev}}</option>\n                                             </select>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                        <div class=\"btn-row clearfix\">\n                            <button type=\"button\" awPreviousStep class=\"btn btn-primary btn-sm mt-3 float-left\"> Previous Step\n                                <span>Account Information </span>\n                            </button>\n                            <button (click)=\"openLiveAccount()\" [disabled]=\"liveAccountGroup.invalid\" type=\"button\" awNextStep class=\"btn btn-primary btn-sm mt-3 float-right\">\n                                Next Step <span>Confirmation Message</span>\n                            </button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n                <aw-wizard-step stepTitle=\"Confirmation Message\" [navigationSymbol]=\"{ symbol: '3' }\">\n                    <div class=\"step-body rounded m-3 p-4\">\n                        <div class=\"step-heading-section mb-4\">\n                            <h3 class=\"title\">Confirmation Message</h3>\n                            <!-- <p class=\"description\">Please Check your confirmation message. After checking message click on finish button and go to accounts overview screen</p> -->\n                        </div>\n                        <div class=\"details-container\">\n                            <div class=\"message-area border bd-color rounded p-3\" style=\"height:100px\">\n                                <div class=\"message\" *ngIf=\"accountSuccessMsg\">Congratulations! Your live account has been created successfully.</div>\n                                <div class=\"message\" [innerHTML]=\"accountErrorMsg\"></div>\n                            </div>\n\n                        </div>\n                        <div class=\"btn-row clearfix\">\n                            <!-- <button type=\"button\" awPreviousStep class=\"btn btn-primary btn-sm mt-3 float-left\">\n                                Previous Step\n                                <span>Account Information </span>\n                            </button> -->\n                            <button type=\"button\" class=\"btn btn-primary btn-sm mt-3 float-right\" [routerLink]=\"[ '/home/accounts/overview/live-account-overview']\">\n                                Finish Step <span>Go to Accounts Overview</span>\n                            </button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n            </aw-wizard>\n        </div>\n    </div>\n    <!-- <div class=\"col-lg-4 col-sm-12\">\n        <div class=\"text-center\" style=\"position: relative; top: 50%; left: 50%; transform: translate(-50%, -50%);\">\n            <img src=\"assets/images/right_Icon.png\" class=\"\">\n        </div>\n    </div> -->\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-accounts-overview',\n  templateUrl: './accounts-overview.component.html',\n  styleUrls: ['./accounts-overview.component.scss']\n})\nexport class AccountsOverviewComponent implements OnInit {\n\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div class=\"toolbar d-none d-sm-block d-md-block d-lg-block\">\r\n    <a routerLink=\"/home/accounts/management/live-account-configuration\" class=\"btn btn-primary btn-sm \">Configure Live Account</a>\r\n    <a routerLink=\"/home/accounts/management/open-live-account\" class=\"btn btn-primary btn-sm ml-1\">Open Live Account</a>\r\n    <a routerLink=\"/home/accounts/management/open-demo-account\" class=\"btn btn-primary btn-sm ml-1\">Open Demo Account</a>\r\n</div> -->\r\n<div class=\"small-content-section bg-f\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card border-0 \">\r\n                <div class=\"card-body border-0 p-0\">\r\n                    <div class=\"tabs-container\">\r\n                        <ul class=\"tabs-heading d-flex flex-row border-bottom\">\r\n                            <li class=\"tabs-item\" routerLinkActive=\"active\">\r\n                                <a class=\" \" routerLink=\"/home/accounts/overview/live-account\">Live Account</a>\r\n                            </li>\r\n                            <li class=\"tabs-item\" routerLinkActive=\"active\">\r\n                                <a class=\" \" routerLink=\"/home/accounts/overview/demo-account\">Demo Account</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div class=\"tabs-body p-2\">\r\n                            <router-outlet></router-outlet>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { GlobalService } from './../../../../../../shared/services/global.service';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-accounts-settings-models',\n  templateUrl: './accounts-settings-models.component.html',\n  styleUrls: ['./accounts-settings-models.component.scss']\n})\nexport class AccountsSettingsModelsComponent implements OnInit {\n  title: string;\n  accountDetails: any;\n  closeBtnName: string;\n  list: any[] = [];\n  isFirstOpen = true;\n  oneAtATime = true;\n  constructor(\n    public bsModalRef: BsModalRef,\n    public global: GlobalService\n    ) { }\n\n  ngOnInit(): void {\n    console.log(this.accountDetails);\n  }\n  onChangeInvestorPassword() {\n\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">\n        <i-feather name=\"settings\"></i-feather> Settings</h4>\n    <p class=\"sub-title\">Account: {{accountDetails.MT4Account}}</p>\n    <button type=\"button\" class=\"close cursor-pointer\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n        <i-feather name=\"x\"></i-feather>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <accordion [isAnimated]=\"true\" [closeOthers]=\"oneAtATime\" class=\"modal-accordian-container\">\n        <accordion-group [isOpen]=\"isFirstOpen\" class=\"accordian-group\">\n            <div class=\"clearfix according-heading\" accordion-heading>\n                <div class=\"title\">Change Master Password </div>\n                <small class=\"text-success\">Please Use Alphanumeric Password*</small>\n            </div>\n            <app-change-master-password [accountDetail]=\"accountDetails\"></app-change-master-password>\n        </accordion-group>\n        <accordion-group class=\"accordian-group\">\n            <div class=\"clearfix according-heading\" accordion-heading>\n                <div class=\"title\">Change Investor Password</div>\n                <small class=\"text-success\">Please Use Alphanumeric Password*</small>\n            </div>\n            <app-change-investor-password [accountDetail]=\"accountDetails\"></app-change-investor-password>\n        </accordion-group>\n        <accordion-group class=\"accordian-group\">\n            <div class=\"clearfix according-heading\" accordion-heading>\n                <div class=\"title\">Change Leverage</div>\n                <small class=\"text-success\">Please Select at least one Value*</small>\n            </div>\n            <app-change-leverage [accountDetail]=\"accountDetails\"></app-change-leverage>\n        </accordion-group>\n    </accordion>\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../../shared/services/global.service';\n@Component({\n  selector: 'app-change-investor-password',\n  templateUrl: './change-investor-password.component.html',\n  styleUrls: ['./change-investor-password.component.scss']\n})\nexport class ChangeInvestorPasswordComponent implements OnInit {\n  title: string;\n  @Input() accountDetail: any;\n  closeBtnName: string;\n  list: any[] = [];\n  isFirstOpen = true;\n  oneAtATime = true;\n  submitted = false;\n  ErrorMsqBlock = false;\n  successMsqBlock = false;\n  messageToDisplay: string;\n  isPasswordLengthOk = true;\n  isPasswordPatterenOK: boolean;\n  @ViewChild('formData', {static: false}) chnageInvestorPasswordForm: NgForm;\n  constructor( public global: GlobalService) { }\n\n  ngOnInit(): void {\n    console.log(this.accountDetail);\n  }\n  onKeydown(event: any) {\n    this.isPasswordLengthOk = true;\n    this.isPasswordPatterenOK = true;\n   }\n   onblur(value) {\n     if (value.length >= 6) {\n       this.isPasswordLengthOk = true;\n     } else {\n       this.isPasswordLengthOk = false;\n     }\n   }\n  onChangeInvestorPassword() {\n    const newMPassword = this.chnageInvestorPasswordForm.value.newPassword;\n    const ConfirmMPassword = this.chnageInvestorPasswordForm.value.cpPassword;\n    if ( newMPassword !== ConfirmMPassword) {\n      this.ErrorMsqBlock = true;\n      this.messageToDisplay = 'Confirm Password Not Matched...';\n    } else {\n      const params = {\n        Account: this.accountDetail.MT4Account,\n        password: newMPassword,\n        ManagerIndex: this.accountDetail.uManager\n      };\n      this.global.changeInvestorPassword(params).subscribe(data => {\n        if (data.ERR_DEV === null && data.MSG_USER === null) {\n          this.successMsqBlock = true;\n          this.messageToDisplay = 'Investor Password has been changed successfully';\n        } else {\n          this.ErrorMsqBlock = true;\n          this.messageToDisplay = 'Failed to Update the Investor Password';\n        }\n      });\n    }\n    setTimeout(() => {\n      this.ErrorMsqBlock = false;\n      this.successMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <!-- Success Message After Submit section start -->\n        <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n            {{messageToDisplay}}\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            </button>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n            {{messageToDisplay}}\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            </button>\n        </div>\n        <!--Form Area :  Investor password change -->\n        <form class=\"\" (ngSubmit)=\" onChangeInvestorPassword()\" #formData=\"ngForm\">\n            <!-- Password form Field Start-->\n            <div class=\"form-group position-relative \">\n                <label class=\"text-size-13\" for=\"New password \">New Password</label>\n                <span class=\"asterick\">*</span>\n                <!-- <input required pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\" ngModel #newPassword=\"ngModel\" name=\"newPassword\" type=\"password\" class=\"form-control main-txt-color bg-f bd-color \" id=\"niPassword \" placeholder=\"Enter New your password\"> -->\n                <input required (keydown)=\"onKeydown($event)\" (blur)=\"onblur(newPassword.value)\" ngModel #newPassword=\"ngModel\" name=\"newPassword\" type=\"password\" class=\"form-control main-txt-color bg-f bd-color \" id=\"niPassword \" placeholder=\"Enter new password\">\n                <div>\n                    <!-- <div class=\"help-block text-danger\" *ngIf=\"newPassword.errors?.required && newPassword.touched && !newPassword.dirty \">Password Field can not be blank</div>\n                    <div class=\"help-block text-danger\" *ngIf=\"newPassword.invalid && newPassword.dirty && newPassword.errors?.pattern\">Please enter a valid password, Password must be at least 8 characters long.</div> -->\n\n                    <div class=\"help-block text-danger\" *ngIf=\"!isPasswordLengthOk && newPassword.touched\">Password must be at least 6 characters</div>\n                    <!-- <div class=\"help-block text-danger\" *ngIf=\"newPassword.invalid && newPassword.dirty && newPassword.errors?.pattern\">Please enter a valid password, Password must be at least 8 characters long.</div> -->\n                </div>\n            </div>\n            <!-- Password form Field Close-->\n            <!-- Confirm Password form Field Start-->\n            <div class=\"form-group position-relative \">\n                <label class=\"text-size-13\" for=\"cpassword \">Confirm Password</label>\n                <span class=\"asterick\">*</span>\n                <input ngModel required #cpPassword=\"ngModel\" name=\"cpPassword\" type=\"password\" class=\"form-control main-txt-color bg-f bd-color \" id=\"ciPassword \" placeholder=\"Enter confirm password\">\n                <!-- <span class=\"help-block text-danger \" *ngIf=\"cpPassword.invalid && cpPassword.touched && (newPassword !== cpPassword)\">Confirm Password should be match the new password</span> -->\n                <span class=\"help-block text-danger \" *ngIf=\"cpPassword.touched && (newPassword != cpPassword)\">New password and Confirm password should be same</span>\n            </div>\n            <!-- Confirm Password form Field Close-->\n            <div class=\"submit-btn mb-2 text-right \">\n                <button [disabled]=\"!formData.valid\" type=\"submit\" class=\"btn btn-primary btn-sm text-size-13\">Save Changes</button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../../shared/services/global.service';\n\n@Component({\n  selector: 'app-change-leverage',\n  templateUrl: './change-leverage.component.html',\n  styleUrls: ['./change-leverage.component.scss']\n})\nexport class ChangeLeverageComponent implements OnInit {\n  title: string;\n  changeLeverage = '-1';\n  leverageList: any;\n  @Input() accountDetail: any;\n  closeBtnName: string;\n  list: any[] = [];\n  isFirstOpen = true;\n  oneAtATime = true;\n  submitted = false;\n  ErrorMsqBlock = false;\n  successMsqBlock = false;\n  messageToDisplay: string;\n  @ViewChild('formData', {static: false}) chnageInvestorPasswordForm: NgForm;\n  constructor( public global: GlobalService) { }\n\n  ngOnInit(): void {\n    console.log(this.accountDetail);\n    this.checkLeverage();\n  }\n  checkLeverage() {\n    const params = {\n      PackageId: 1000\n    };\n    this.global.getLeverage(params).subscribe(data => {\n      this.leverageList = data;\n    });\n  }\n  onChangeLeverage() {\n    const params = {\n      Account: this.accountDetail.MT4Account,\n      Leverage: this.changeLeverage,\n      ManagerIndex: this.accountDetail.ManagerIndex\n    };\n    this.global.spin(true);\n    this.global.changeLev(params).subscribe(data => {\n      console.log(data);\n      if (data.Result === true) {\n        this.successMsqBlock = true;\n        this.messageToDisplay = 'Leverage Changed Successfully!';\n      } else {\n        this.ErrorMsqBlock = true;\n        this.messageToDisplay = 'Failed to change Leverage!';\n      }\n    });\n    setTimeout(() => {\n      this.ErrorMsqBlock = false;\n      this.successMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <!-- Success Message After Submit section start -->\n        <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n            {{messageToDisplay}}\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            </button>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n            {{messageToDisplay}}\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            </button>\n        </div>\n        <form (ngSubmit)=\" onChangeLeverage()\" #formData=\"ngForm\">\n            <!-- Change Leverage form Field Start-->\n            <div class=\"form-group position-relative \">\n                <label class=\"text-size-15 font-weight-400 \" for=\"New password \">Change Leverage</label>\n                <span class=\"asterick\">*</span>\n                <select class=\"form-control\" [(ngModel)]=\"changeLeverage\" name=\"leverageList\">\n                    <option value='-1'>Select Leverage</option>\n                    <option [value]=\"x\" *ngFor=\"let x of leverageList\">1:{{x}}</option>\n                  </select>\n            </div>\n            <div class=\"submit-btn mb-2 text-right \">\n                <button [disabled]=\"!formData.valid\" type=\"submit\" class=\"btn btn-primary btn-sm text-size-13\">Save Changes</button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../../shared/services/global.service';\n\n@Component({\n  selector: 'app-change-master-password',\n  templateUrl: './change-master-password.component.html',\n  styleUrls: ['./change-master-password.component.scss']\n})\nexport class ChangeMasterPasswordComponent implements OnInit {\n  title: string;\n  @Input() accountDetail: any;\n  // accountDetails: any;\n  closeBtnName: string;\n  list: any[] = [];\n  isFirstOpen = true;\n  oneAtATime = true;\n  submitted = false;\n  ErrorMsq = false;\n  successMsq = false;\n  messageToDisplay: string;\n  isPasswordLengthOk = true;\n  isPasswordPatterenOK: boolean;\n  @ViewChild('cmpFormData', {static: false}) chnageMasterPasswordForm: NgForm;\n  @ViewChild('cipFormData', {static: false}) chnageInvestorPasswordForm: NgForm;\n  constructor( public global: GlobalService) { }\n\n  ngOnInit(): void {\n    // console.log(this.accountDetail);\n  }\n  onKeydown(event: any) {\n   this.isPasswordLengthOk = true;\n   this.isPasswordPatterenOK = true;\n  }\n  onblur(value) {\n    if (value.length >= 6) {\n      this.isPasswordLengthOk = true;\n    } else {\n      this.isPasswordLengthOk = false;\n    }\n  }\n  onChangeMasterPassword() {\n    const newMPassword = this.chnageMasterPasswordForm.value.newPassword;\n    const ConfirmMPassword = this.chnageMasterPasswordForm.value.cpPassword;\n    if ( newMPassword !== ConfirmMPassword) {\n      this.ErrorMsq = true;\n      this.messageToDisplay = 'Confirm Password Not Matched...';\n    } else {\n      const params = {\n        Account: this.accountDetail.MT4Account,\n        password: newMPassword,\n        ManagerIndex: this.accountDetail.uManager\n      };\n      this.global.changeMasterPassword(params).subscribe(data => {\n        if (data.ERR_DEV === null && data.MSG_USER === null) {\n          this.successMsq = true;\n          this.messageToDisplay = 'Master Password has been changed successfully';\n        } else {\n          this.ErrorMsq = true;\n          this.messageToDisplay = 'Failed to update the Master Password';\n        }\n      });\n    }\n    setTimeout(() => {\n      this.ErrorMsq = false;\n      this.successMsq = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <!-- Success Message After Submit section start -->\n        <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsq\">\n            {{messageToDisplay}}\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            </button>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsq\">\n            {{messageToDisplay}}\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            </button>\n        </div>\n        <!--Form Area :  Master password change -->\n        <form class=\"\" (ngSubmit)=\" onChangeMasterPassword()\" #cmpFormData=\"ngForm\">\n            <!-- Password form Field Start-->\n            <div class=\"form-group position-relative \">\n                <label class=\"text-size-13\" for=\"New password \">New Password</label>\n                <span class=\"asterick\">*</span>\n                <!-- <input required pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\" ngModel #nMasterPassword=\"ngModel\" name=\"newPassword\" type=\"password\" class=\"form-control main-txt-color bg-f bd-color \" id=\"nmPassword \" placeholder=\"Enter New your password\"> -->\n                <input required (keydown)=\"onKeydown($event)\" (blur)=\"onblur(nMasterPassword.value)\" ngModel #nMasterPassword=\"ngModel\" name=\"newPassword\" type=\"password\" class=\"form-control main-txt-color bg-f bd-color \" id=\"nmPassword \" placeholder=\"Enter new password\">\n                <div>\n                    <!-- <div class=\"help-block text-danger\" *ngIf=\"nMasterPassword.errors?.required && nMasterPassword.touched && !nMasterPassword.dirty \">Password Field can not be blank</div>\n                    <div class=\"help-block text-danger\" *ngIf=\"nMasterPassword.invalid && nMasterPassword.dirty && nMasterPassword.errors?.pattern\">Please enter a valid password, Password must be at least 8 characters long.</div> -->\n                    <!-- <div class=\"help-block text-danger\" *ngIf=\"!nMasterPassword.valid && nMasterPassword.touched\">Password Field can not be blank</div> -->\n                    <div class=\"help-block text-danger\" *ngIf=\"!isPasswordLengthOk && nMasterPassword.touched\">Password must be at least 6 characters</div>\n                    <!-- <div class=\"help-block text-danger\" *ngIf=\"nMasterPassword.invalid && nMasterPassword.dirty && nMasterPassword.errors?.pattern\">Please enter a valid password, Password must be at least 8 characters long.</div> -->\n                </div>\n            </div>\n            <!-- Password form Field Close-->\n            <!-- Confirm Password form Field Start-->\n            <div class=\"form-group position-relative \">\n                <label class=\"text-size-13\" for=\"cpassword \">Confirm Password</label>\n                <span class=\"asterick\">*</span>\n                <input ngModel required #cMasterPassword=\"ngModel\" name=\"cpPassword\" type=\"password\" class=\"form-control main-txt-color bg-f bd-color \" id=\"cmPassword \" placeholder=\"Enter confirm password\">\n                <span class=\"help-block text-danger \" *ngIf=\"cMasterPassword.touched && (nMasterPassword != cMasterPassword)\">New password and Confirm password should be same</span>\n            </div>\n            <!-- Confirm Password form Field Close-->\n            <div class=\"submit-btn mb-2 text-right \">\n                <button [disabled]=\"!cmpFormData.valid\" type=\"submit\" class=\"btn btn-primary btn-sm text-size-13\">Save Changes</button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-demo-account-overview',\n  templateUrl: './demo-account-overview.component.html',\n  styleUrls: ['./demo-account-overview.component.scss']\n})\nexport class DemoAccountOverviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tab-inner-content\">\n    <div class=\"table-filter-area\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-md-4 form-inline d-none d-md-block\">\n                <div class=\"form-group mb-2\">\n                    <label for=\"entries\" class=\" main-txt-color mr-1\">Show </label>\n                    <select class=\"form-control main-txt-color bd-color shadow-none\" id=\"entries\">\n                        <option>5</option>\n                        <option selected>10</option>\n                        <option>15</option>\n                        <option>20</option>\n                        <option>25</option>\n                        <option>50</option>\n                    </select>\n                    <label for=\"entries\" class=\" main-txt-color ml-1\"> Entries</label>\n                </div>\n            </div>\n            <div class=\"col-md-3 offset-md-5\">\n                <div class=\"form-group\">\n                    <!-- <label class=\"main-txt-color\" for=\"searchtext\">Search</label> -->\n                    <input type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"\" placeholder=\"Enter keyword to search\" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"table-container table-responsive mb-3\">\n        <table class=\"table table-hover main-txt-color mb-0 border-0\">\n            <thead class=\"table-header-bg table-header-color\">\n                <tr>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Account</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Name</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Phone Number</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Balance</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Credit</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Equity</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Plan</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Leverage</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Margin</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Free Margin</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Action</th>\n                </tr>\n            </thead>\n\n            <tbody class=\"secondary-txt-color\">\n                <tr>\n                    <td colspan=\"11\" class=\"bd-color font-weight-400\">\n                        You dont have a demo account\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n    </div>\n</div>","import { NotificationService } from './../../../../../../shared/services/notification.service';\nimport { GlobalService } from './../../../../../../shared/services/global.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { AccountsSettingsModelsComponent } from './../accounts-settings-models/accounts-settings-models.component';\n@Component({\n  selector: 'app-live-account-overview',\n  templateUrl: './live-account-overview.component.html',\n  styleUrls: ['./live-account-overview.component.scss']\n})\nexport class LiveAccountOverviewComponent implements OnInit, OnDestroy {\n\n  liveAccountData: any[] = [];\n  LoggedParams: any;\n  accountSnapSubscription: Subscription;\n\n  // pagination Setting\n  public TotalCount = 0;\n  searchText: any; // Search Text property is used to filter text in table\n  p: any;          // Current page in pagination\n  pageSize = 10;  // Table Rows Perpage property\n  sortedLiveAccountData: any[]; // Sorted Product list array\n  order = '';     // Order property to sort coloum of table\n  reverse = true; // Reverse property is used to sort table coloum\n\n  // Model For AccounsSettingsModels Components\n  bsModalRef: BsModalRef;\n  constructor(\n    private global: GlobalService,\n    private orderPipe: OrderPipe,\n    private modalService: BsModalService,\n    private notificationService: NotificationService\n    ) {\n    this.LoggedParams = JSON.parse(localStorage.getItem('LoggedUser'));\n    // To save value inside sortedProductList\n    this.sortedLiveAccountData = orderPipe.transform(this.liveAccountData, this.order);\n    this.getAccounts();\n  }\n  setOrder(value: string) {\n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n    this.order = value;\n  }\n  onChangePageSize(value) {\n    this.pageSize = value;\n    this.p = 1;\n  }\n  ngOnInit(): void {\n  }\n  getAccounts() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n      LoginId: this.LoggedParams.sProfile.sMasterId\n    };\n    this.accountSnapSubscription = this.global.GET_PROFILE_ACCOUNTS(params).subscribe(\n      data => {\n        this.liveAccountData = data.lstAccount.map( acc => {\n          if (acc) {\n            return Object.assign(acc.sUserInfo, acc.sAccountPlan);\n          }\n        });\n      }, err => {\n        console.log(err);\n        this.notificationService.showError('Failed to get Data!', 'Error');\n      }\n    );\n  }\n  ngOnDestroy() {\n    this.accountSnapSubscription.unsubscribe();\n  }\n\n  // Pass Selected Account details to Models Component - AccountsSettingsModelsComponent\n  accountSettingsModel(selectedItem: any) {\n    // alert(accountNumber);\n    const initialState = {\n      title: 'Account Settings',\n      accountDetails: selectedItem,\n    };\n    this.bsModalRef = this.modalService.show(AccountsSettingsModelsComponent, {initialState});\n    this.bsModalRef.content.closeBtnName = 'Close';\n  }\n\n}\n\n","<div class=\"tab-inner-content\">\n    <div class=\"table-filter-area\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-md-4 form-inline d-none d-md-block\">\n                <div class=\"form-group mb-2\">\n                    <label for=\"entries\" class=\" main-txt-color mr-1\">Show </label>\n                    <select (change)=\"onChangePageSize($event.target.value)\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"entries\">\n                        <option>5</option>\n                        <option selected>10</option>\n                        <option>15</option>\n                        <option>20</option>\n                        <option>25</option>\n                        <option>50</option>\n                    </select>\n                    <label for=\"entries\" class=\" main-txt-color ml-1\"> Entries</label>\n                </div>\n            </div>\n            <div class=\"col-md-3 offset-md-5\">\n                <div class=\"form-group\">\n                    <!-- <label class=\"main-txt-color\" for=\"searchtext\">Search</label> -->\n                    <input [(ngModel)]=\"searchText\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"\" placeholder=\"Enter keyword to search\" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"table-container table-responsive  table-responsive table-responsive-sm  mb-3\">\n        <table class=\"table table-hover main-txt-color mb-0\">\n            <thead class=\"table-header-bg table-header-color\">\n                <tr>\n                    <th [class.active]=\"order === 'MT4Account' \" (click)=\"setOrder('MT4Account')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Account</th>\n                    <th [class.active]=\"order === 'Name' \" (click)=\"setOrder('Name')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Name</th>\n                    <!-- <th [class.active]=\"order === 'EmailID' \" (click)=\"setOrder('EmailID')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Email ID</th> -->\n                    <th [class.active]=\"order === 'Phone' \" (click)=\"setOrder('Phone')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Phone number</th>\n                    <th [class.active]=\"order === 'Balance' \" (click)=\"setOrder('Balance')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Balance</th>\n                    <th [class.active]=\"order === 'Credit' \" (click)=\"setOrder('Credit')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Credit</th>\n                    <th [class.active]=\"order === 'Equity' \" (click)=\"setOrder('Equity')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Equity</th>\n                    <th [class.active]=\"order === 'Plan' \" (click)=\"setOrder('uAccount_Name')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Plan</th>\n                    <th [class.active]=\"order === 'Leverage' \" (click)=\"setOrder('Leverage')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Leverage</th>\n                    <th [class.active]=\"order === 'Margin' \" (click)=\"setOrder('Margin')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Margin</th>\n                    <th [class.active]=\"order === 'Marginfree' \" (click)=\"setOrder('Marginfree')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Free Margin</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Action</th>\n                </tr>\n            </thead>\n\n            <tbody class=\"secondary-txt-color\">\n                <tr *ngFor=\"let item of liveAccountData | orderBy:order:reverse | filter:searchText | paginate: { itemsPerPage: pageSize, currentPage: p,  totalItems: TotalCount}; let i = index \">\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.MT4Account}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.First}}</td>\n                    <!-- <td class=\"bd-color  text-capitalize font-weight-400\">{{item.EmailID}}</td> -->\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.Phone}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.Balance}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.Credit}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.Equity}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.uAccount_Name}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">1:{{item.Leverage}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.Margin}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.Marginfree}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400 text-center\">\n                        <i-feather class=\"icon-size-18 primary-icons-color cursor-pointer\" name=\"settings\" (click)=\"accountSettingsModel(item)\"></i-feather>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"table-pagination text-right pt-4\">\n        <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-client-accounts-core',\n  templateUrl: './client-accounts-core.component.html',\n  styleUrls: ['./client-accounts-core.component.scss']\n})\nexport class ClientAccountsCoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","// tslint:disable-next-line: max-line-length\nimport { DemoAccountOverviewComponent } from './client-accounts-core/accounts-overview/demo-account-overview/demo-account-overview.component';\n// tslint:disable-next-line: max-line-length\nimport { LiveAccountOverviewComponent } from './client-accounts-core/accounts-overview/live-account-overview/live-account-overview.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientAccountsCoreComponent } from './client-accounts-core/client-accounts-core.component';\nimport { AccountsOverviewComponent } from './client-accounts-core/accounts-overview/accounts-overview.component';\nimport { AccountsManagementComponent } from './client-accounts-core/accounts-management/accounts-management.component';\nimport { LiveAccountConfigurationComponent\n} from './client-accounts-core/accounts-management/live-account-configuration/live-account-configuration.component';\nimport { OpenLiveAccountComponent } from './client-accounts-core/accounts-management/open-live-account/open-live-account.component';\nimport { OpenDemoAccountComponent } from './client-accounts-core/accounts-management/open-demo-account/open-demo-account.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientAccountsCoreComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'overview'\n      },\n      {\n        path: 'management',\n        component: AccountsManagementComponent,\n        data: {breadcrumb: 'Accounts Management'},\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'live-account-configuration'\n          },\n          {\n            path: 'live-account-configuration',\n            component: LiveAccountConfigurationComponent,\n            data: {title: 'Accounts Management', breadcrumb: 'Configure Account'}\n          },\n          {\n            path: 'open-live-account',\n            component: OpenLiveAccountComponent,\n            data: {title: 'Accounts Management', breadcrumb: 'Open Live Account'}\n          },\n          {\n            path: 'open-demo-account',\n            component: OpenDemoAccountComponent,\n            data: {title: 'Accounts Management', breadcrumb: 'Open Demo Account'}\n          },\n        ]\n      },\n      {\n        path: 'overview',\n        component: AccountsOverviewComponent,\n        data: {breadcrumb: 'Accounts Overview'},\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'live-account'\n          },\n          {\n            path: 'live-account',\n            component: LiveAccountOverviewComponent,\n            data: {title: 'Accounts Overview',\n            breadcrumb: 'Live Account'}\n          },\n          {\n            path: 'demo-account',\n            component: DemoAccountOverviewComponent,\n            data: {title: 'Accounts Overview',\n            breadcrumb: 'Demo Account'}\n          },\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientAccountsRoutingModule { }\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from './../../../shared/shared.module';\n\nimport { ClientAccountsRoutingModule } from './client-accounts-routing.module';\nimport { ClientAccountsCoreComponent } from './client-accounts-core/client-accounts-core.component';\nimport { AccountsOverviewComponent } from './client-accounts-core/accounts-overview/accounts-overview.component';\nimport { AccountsManagementComponent } from './client-accounts-core/accounts-management/accounts-management.component';\nimport { LiveAccountConfigurationComponent\n} from './client-accounts-core/accounts-management/live-account-configuration/live-account-configuration.component';\nimport { OpenLiveAccountComponent } from './client-accounts-core/accounts-management/open-live-account/open-live-account.component';\nimport { OpenDemoAccountComponent } from './client-accounts-core/accounts-management/open-demo-account/open-demo-account.component';\n\n\n// tslint:disable-next-line: max-line-length\nimport { LiveAccountOverviewComponent } from './client-accounts-core/accounts-overview/live-account-overview/live-account-overview.component';\n// tslint:disable-next-line: max-line-length\nimport { DemoAccountOverviewComponent } from './client-accounts-core/accounts-overview/demo-account-overview/demo-account-overview.component';\n// tslint:disable-next-line: max-line-length\nimport { AccountsSettingsModelsComponent } from './client-accounts-core/accounts-overview/accounts-settings-models/accounts-settings-models.component';\n// tslint:disable-next-line: max-line-length\nimport { ChangeMasterPasswordComponent } from './client-accounts-core/accounts-overview/accounts-settings-models/change-master-password/change-master-password.component';\n// tslint:disable-next-line: max-line-length\nimport { ChangeInvestorPasswordComponent } from './client-accounts-core/accounts-overview/accounts-settings-models/change-investor-password/change-investor-password.component';\n// tslint:disable-next-line: max-line-length\nimport { ChangeLeverageComponent } from './client-accounts-core/accounts-overview/accounts-settings-models/change-leverage/change-leverage.component';\n \n\n@NgModule({\n  declarations: [\n    ClientAccountsCoreComponent,\n    AccountsOverviewComponent,\n    AccountsManagementComponent,\n    LiveAccountConfigurationComponent,\n    OpenLiveAccountComponent,\n    OpenDemoAccountComponent,\n    LiveAccountOverviewComponent,\n    DemoAccountOverviewComponent,\n    AccountsSettingsModelsComponent,\n    ChangeMasterPasswordComponent,\n    ChangeInvestorPasswordComponent,\n    ChangeLeverageComponent,\n  ],\n  entryComponents: [\n    AccountsSettingsModelsComponent\n  ],\n  imports: [\n    CommonModule,\n    ClientAccountsRoutingModule,\n    SharedModule,\n  ]\n})\nexport class ClientAccountsModule { }\n","export class AccountVerificationModalData {\r\n    Account: string | undefined | null;\r\n    Password: string | undefined | null;\r\n    ManagerIndex: string | undefined | null;\r\n\r\n   constructor() {\r\n    this.Account = '';\r\n    this.Password = '';\r\n    this.ManagerIndex = '';\r\n   }\r\n}\r\n"," export class DemoAccountModalData{\r\n    Plan: string | undefined | null;\r\n    Amount: string | undefined | null;\r\n    password: string | undefined | null;\r\n    confirm_password: string | undefined | null;\r\n    \r\n   constructor(){\r\n    this.Plan = '';\r\n    this.Amount = '';\r\n    this.password = '';\r\n    this.confirm_password = '';\r\n   }\r\n}","export class LiveAccountModalData{\r\n    Plan: string | undefined | null;\r\n    Leverage :  string | undefined | null;\r\n    IB_Code:  string | undefined | null;\r\n    \r\n   constructor(){\r\n    this.Plan = '';\r\n    this.Leverage = '';\r\n    this.IB_Code = '';\r\n   }\r\n}"]}