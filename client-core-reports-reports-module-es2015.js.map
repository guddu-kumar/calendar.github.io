{"version":3,"sources":["./src/app/pages/client-core/reports/reports-core/close-trades/close-trades.component.ts","./src/app/pages/client-core/reports/reports-core/close-trades/close-trades.component.html","./src/app/pages/client-core/reports/reports-core/open-trades/open-trades.component.ts","./src/app/pages/client-core/reports/reports-core/open-trades/open-trades.component.html","./src/app/pages/client-core/reports/reports-core/reports-core.component.ts","./src/app/pages/client-core/reports/reports-core/reports-core.component.html","./src/app/pages/client-core/reports/reports-routing.module.ts","./src/app/pages/client-core/reports/reports.module.ts"],"names":[],"mappings":"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","file":"client-core-reports-reports-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from '../../../../../shared/services/global.service';\nimport { DatePipe } from '@angular/common';\n@Component({\n  selector: 'app-close-trades',\n  templateUrl: './close-trades.component.html',\n  styleUrls: ['./close-trades.component.scss']\n})\nexport class CloseTradesComponent implements OnInit {\n\n  managerindex: number;\n  profileAccounts: any[] = [];\n  public closeTradess: any[] = [];\n  datechoose: any;\n  accountNumber = '';\n  accountType = '';\n  colorTheme = 'theme-blue';\n    constructor(private global: GlobalService , private datepipe: DatePipe) {\n    }\n    profileAccount(accountTyp) {\n      const data = {\n        ProfileId: localStorage.getItem('LoggedDealermasterid'),\n        LoginId:  localStorage.getItem('LoggedDealermasterid')\n      };\n      this.global.getProfileAccounts(data).subscribe((res: any) => {\n        this.profileAccounts = res.lstAccount.filter( (account: any) => {\n          // tslint:disable-next-line: triple-equals\n          if (account.sAccountPlan.uAccount_Type == accountTyp) {\n            return Object.assign(account.sAccountPlan, account.sUserInfo);\n          }\n        });\n      }, err => {\n        console.log(err);\n      });\n    }\n    getCloseTrades(acc, dt) {\n\n  this.profileAccounts.filter(manager => {\n         if (manager.sUserInfo.MT4Account === acc) {\n           this.managerindex = manager.sAccountPlan.uManager;\n         }\n       });\n  const queryString = {\n         Account: acc,\n         ManagerIndex: this.managerindex,\n         _StartTm: this.datepipe.transform(dt._bsValue[0] , 'yyyy-MM-dd hh:mm:ss'),\n         _EndTm: this.datepipe.transform(dt._bsValue[1] , 'yyyy-MM-dd hh:mm:ss')\n       };\n  this.global.getClosePositions(queryString).subscribe((closeAccount: any) => {\n         this.closeTradess = closeAccount.lstCLOSE;\n         console.log(this.closeTradess);\n       },\n       err => {\n         console.log(err);\n       });\n     }\n      ngOnInit(): void {\n  }\n}\n","<form #closeTrades=\"ngForm\">\n    <div class=\"row fromarea rounded\">\n        <div class=\"col-md-3\">\n            <div class=\"form-group\">\n                <label>Account Type</label><span class=\"asterick\">*</span>\n                <select class=\"form-control\" [(ngModel)]=\"accountType\" name=\"accountType\" required (change)=\"profileAccount($event.target.value)\">\n                  <option value=\"\" [disabled]=\"true\">Select Account Type</option>\n                  <option value=\"0\">Demo</option>\n                  <option value=\"1\">Live</option>\n              </select>\n            </div>\n        </div>\n        <div class=\"col-md-3\">\n            <div class=\"form-group\">\n                <label>Account Number</label><span class=\"asterick\">*</span>\n                <select class=\"form-control\" [(ngModel)]=\"accountNumber\" #account=\"ngModel\" name=\"accountNumber\" required>\n                  <option value=\"\" [disabled]=\"true\">Select Account Number</option>\n                  <option *ngFor=\"let account of profileAccounts\" [ngValue]=\"account.sAccountPlan.MT4Account\"> {{account.sAccountPlan.MT4Account}} </option>\n              </select>\n            </div>\n        </div>\n        <div class=\"col-md-3\">\n            <div class=\"form-group\">\n                <label>Select Date</label><span class=\"asterick\">*</span>\n                <input [(ngModel)]=\"datechoose\" name=\"datechoose\" type=\"text\" placeholder=\"Select Date\" class=\"form-control\" bsDaterangepicker #datepickerYMD=\"bsDaterangepicker\" required>\n            </div>\n        </div>\n        <div class=\"col-md-2\" style=\"display: flex;align-items: center;\">\n            <button [disabled]=\"closeTrades.invalid\" type=\"button\" (click)=\"getCloseTrades(account.value,datepickerYMD)\" class=\"px-4 btn btn-primary btn-sm mt-3\" style=\"padding: 6px;\n        margin-top: 12px!important;\">\n          submit\n      </button>\n        </div>\n    </div>\n</form>\n\n<div class=\"table-container table-responsive  mb-3\">\n    <table class=\"table table-hover main-txt-color mb-0\">\n        <thead class=\"table-header-bg table-header-color\">\n            <tr>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Trade Type</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Ticket</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Symbol</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Lot</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Open Price</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Profit</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Close price</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Close time</th>\n            </tr>\n        </thead>\n        <tbody class=\"secondary-txt-color\">\n            <tr *ngFor=\"let close of closeTradess\">\n                <td class=\"bd-color text-capitalize align-middle\"><span *ngIf=\"close.uTradeFlag == 0\">BUY</span><span *ngIf=\"close.uTradeFlag == 1\">SELL</span></td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Ticket}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Symbol}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Lot}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Open_Price}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Profit}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Close_Price}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Close_Time | date :'dd-MMM-yy h : mm : ss a '}}</td>\n            </tr>\n            <tr *ngIf=\"closeTradess.length == 0\">\n                <td colspan=\"8\"> <label style=\"width: 100%;text-align: center;\">no record found</label> </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { GlobalService } from '../../../../../shared/services/global.service';\n\n@Component({\n  selector: 'app-open-trades',\n  templateUrl: './open-trades.component.html',\n  styleUrls: ['./open-trades.component.scss']\n})\nexport class OpenTradesComponent implements OnInit {\n  managerindex: number;\n  profileAccounts: any[] = [];\n  openTradess: any[] = [];\n  accountNumber = '';\n  accountTypee = '';\n  constructor(private global: GlobalService) {\n  }\n  profileAccount(accountTyp) {\n    const data = {\n      ProfileId: localStorage.getItem('LoggedDealermasterid'),\n      LoginId:  localStorage.getItem('LoggedDealermasterid')\n    };\n    this.global.getProfileAccounts(data).subscribe((res: any) => {\n      this.profileAccounts = res.lstAccount.filter( (account: any) => {\n        // tslint:disable-next-line: triple-equals\n        if (account.sAccountPlan.uAccount_Type == accountTyp) {\n\n          return Object.assign(account.sAccountPlan, account.sUserInfo);\n        }\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n\n\n  getOpenTrades(acc) {\n   this.profileAccounts.find(manager => {\n      if (manager.sUserInfo.MT4Account == acc) {\n        this.managerindex = manager.sAccountPlan.uManager;\n      }\n    });\n   const queryString = {\n      Account:acc,\n      ManagerIndex: this.managerindex\n    };\n   this.global.getOpenPositions(queryString).subscribe((openAccount: any) => {\n      //  let data = JSON.stringify();\n        this.openTradess = openAccount.lstOPEN\n        console.log(this.openTradess);\n    },\n    err => {\n      console.log(err);\n    });\n  }\n  ngOnInit(): void {\n\n  }\n}\n","<form #openTrades=\"ngForm\">\n    <div class=\"row fromarea rounded\">\n        <div class=\"col-md-4\">\n            <div class=\"form-group\">\n                <label>Account Type</label><span class=\"asterick\">*</span>\n                <select class=\"form-control\" [(ngModel)]=\"accountTypee\" name=\"accountTypee\" #accountType required (change)=\"profileAccount($event.target.value)\">\n                  <option value=\"\" [disabled]=\"true\">Select Account type</option>\n                  <option value=\"0\">Demo</option>\n                  <option value=\"1\">Live</option>\n              </select>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"form-group\">\n                <label>Account Number</label><span class=\"asterick\">*</span>\n                <select class=\"form-control\" [(ngModel)]=\"accountNumber\" name=\"accountNumber\" #account=\"ngModel\" required>\n                  <option value=\"\" [disabled]=\"true\">Select Account Number</option>\n                  <option *ngFor=\"let account of profileAccounts\" [ngValue]=\"account.sAccountPlan.MT4Account\"> {{account.sAccountPlan.MT4Account}} </option>\n              </select>\n            </div>\n        </div>\n        <div class=\"col-md-3\" style=\"display: flex;align-items: center;\">\n            <button [disabled]=\"openTrades.invalid\" (click)=\"getOpenTrades(account.value)\" type=\"button\" class=\"btn btn-primary btn-sm mt-3 px-4\" style=\"padding: 6px;\n        margin-top: 12px!important;\">\n          Submit\n      </button>\n        </div>\n    </div>\n</form>\n<div class=\"table-container table-responsive  mb-3\">\n    <table class=\"table table-hover main-txt-color mb-0\">\n        <thead class=\"table-header-bg table-header-color\">\n            <tr>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Trade type</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Ticket</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Symbol</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Lot</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Open price</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Profit</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Stop loss</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Open time</th>\n            </tr>\n        </thead>\n        <tbody class=\"secondary-txt-color\">\n\n            <tr *ngFor=\"let trades of openTradess\">\n                <td class=\"bd-color text-capitalize align-middle\">\n                    <span *ngIf=\"trades.BUY_SELL == 0\">BUY</span>\n                    <span *ngIf=\"trades.BUY_SELL == 1\">SELL</span>\n                </td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Ticket}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Symbol}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Lot}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Open_Price}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Profit}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Stop_Loss}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Open_Time | date :'dd-MMM-yy h : mm : ss a '}}</td>\n            </tr>\n            <tr *ngIf=\"openTradess.length == 0\">\n                <td colspan=\"8\"> <label style=\"text-align:center;width:100%;\">no record found</label> </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports-core',\n  templateUrl: './reports-core.component.html',\n  styleUrls: ['./reports-core.component.scss']\n})\nexport class ReportsCoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"small-content-section bg-f\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card border-0 \">\n                <div class=\"card-body border-0 p-0\">\n                    <div class=\"tabs-container\">\n                        <ul class=\"tabs-heading d-flex flex-row border-bottom\">\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/reports/open-trades\">\n                                    <span class=\"material-icons\">attach_money</span>\n                                    <span class=\"tab-text\">Open trades</span>\n                                </a>\n                            </li>\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/reports/close-trades\">\n                                    <span class=\"material-icons\">money_off</span>\n                                    <span class=\"tab-text\">Close trades</span>\n                                </a>\n                            </li>\n                        </ul>\n                        <div class=\"tabs-body p-2\">\n                            <router-outlet></router-outlet>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { CloseTradesComponent } from './reports-core/close-trades/close-trades.component';\nimport { OpenTradesComponent } from './reports-core/open-trades/open-trades.component';\nimport { ReportsCoreComponent } from './reports-core/reports-core.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportsCoreComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'open-trades'\n      },\n      {\n        path: 'open-trades',\n        component: OpenTradesComponent,\n        data: {title: 'Reports', breadcrumb: 'Open Trades'}\n      },\n      {\n        path: 'close-trades',\n        component: CloseTradesComponent,\n        data: {title: 'Reports', breadcrumb: 'Close Trades'}\n      }\n    ]\n  }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportsRoutingModule { }\n","import { SharedModule } from './../../../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReportsRoutingModule } from './reports-routing.module';\nimport { ReportsCoreComponent } from './reports-core/reports-core.component';\nimport { OpenTradesComponent } from './reports-core/open-trades/open-trades.component';\nimport { CloseTradesComponent } from './reports-core/close-trades/close-trades.component';\n\n\n@NgModule({\n  declarations: [ReportsCoreComponent, OpenTradesComponent, CloseTradesComponent],\n  imports: [\n    CommonModule,\n    ReportsRoutingModule,\n    SharedModule\n  ]\n})\nexport class ReportsModule { }\n"],"sourceRoot":"webpack:///"}