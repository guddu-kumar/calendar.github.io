{"version":3,"sources":["webpack:///src/app/pages/client-core/reports/reports-core/close-trades/close-trades.component.ts","webpack:///src/app/pages/client-core/reports/reports-core/close-trades/close-trades.component.html","webpack:///src/app/pages/client-core/reports/reports-core/open-trades/open-trades.component.ts","webpack:///src/app/pages/client-core/reports/reports-core/open-trades/open-trades.component.html","webpack:///src/app/pages/client-core/reports/reports-core/reports-core.component.ts","webpack:///src/app/pages/client-core/reports/reports-core/reports-core.component.html","webpack:///src/app/pages/client-core/reports/reports-routing.module.ts","webpack:///src/app/pages/client-core/reports/reports.module.ts"],"names":["CloseTradesComponent","global","datepipe","profileAccounts","closeTradess","accountNumber","accountType","colorTheme","accountTyp","data","ProfileId","localStorage","getItem","LoginId","getProfileAccounts","subscribe","res","lstAccount","filter","account","sAccountPlan","uAccount_Type","Object","assign","sUserInfo","err","console","log","acc","dt","manager","MT4Account","managerindex","uManager","queryString","Account","ManagerIndex","_StartTm","transform","_bsValue","_EndTm","getClosePositions","closeAccount","lstCLOSE","profileAccount","getCloseTrades","selector","templateUrl","styleUrls","OpenTradesComponent","openTradess","accountTypee","find","getOpenPositions","openAccount","lstOPEN","getOpenTrades","ReportsCoreComponent","routes","path","component","children","pathMatch","redirectTo","title","breadcrumb","ReportsRoutingModule","forChild","imports","exports","ReportsModule","declarations"],"mappings":"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","file":"client-core-reports-reports-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from '../../../../../shared/services/global.service';\nimport { DatePipe } from '@angular/common';\n@Component({\n  selector: 'app-close-trades',\n  templateUrl: './close-trades.component.html',\n  styleUrls: ['./close-trades.component.scss']\n})\nexport class CloseTradesComponent implements OnInit {\n\n  managerindex: number;\n  profileAccounts: any[] = [];\n  public closeTradess: any[] = [];\n  datechoose: any;\n  accountNumber = '';\n  accountType = '';\n  colorTheme = 'theme-blue';\n    constructor(private global: GlobalService , private datepipe: DatePipe) {\n    }\n    profileAccount(accountTyp) {\n      const data = {\n        ProfileId: localStorage.getItem('LoggedDealermasterid'),\n        LoginId:  localStorage.getItem('LoggedDealermasterid')\n      };\n      this.global.getProfileAccounts(data).subscribe((res: any) => {\n        this.profileAccounts = res.lstAccount.filter( (account: any) => {\n          // tslint:disable-next-line: triple-equals\n          if (account.sAccountPlan.uAccount_Type == accountTyp) {\n            return Object.assign(account.sAccountPlan, account.sUserInfo);\n          }\n        });\n      }, err => {\n        console.log(err);\n      });\n    }\n    getCloseTrades(acc, dt) {\n\n  this.profileAccounts.filter(manager => {\n         if (manager.sUserInfo.MT4Account === acc) {\n           this.managerindex = manager.sAccountPlan.uManager;\n         }\n       });\n  const queryString = {\n         Account: acc,\n         ManagerIndex: this.managerindex,\n         _StartTm: this.datepipe.transform(dt._bsValue[0] , 'yyyy-MM-dd hh:mm:ss'),\n         _EndTm: this.datepipe.transform(dt._bsValue[1] , 'yyyy-MM-dd hh:mm:ss')\n       };\n  this.global.getClosePositions(queryString).subscribe((closeAccount: any) => {\n         this.closeTradess = closeAccount.lstCLOSE;\n         console.log(this.closeTradess);\n       },\n       err => {\n         console.log(err);\n       });\n     }\n      ngOnInit(): void {\n  }\n}\n","<form #closeTrades=\"ngForm\">\n    <div class=\"row fromarea rounded\">\n        <div class=\"col-md-3\">\n            <div class=\"form-group\">\n                <label>Account Type</label><span class=\"asterick\">*</span>\n                <select class=\"form-control\" [(ngModel)]=\"accountType\" name=\"accountType\" required (change)=\"profileAccount($event.target.value)\">\n                  <option value=\"\" [disabled]=\"true\">Select Account Type</option>\n                  <option value=\"0\">Demo</option>\n                  <option value=\"1\">Live</option>\n              </select>\n            </div>\n        </div>\n        <div class=\"col-md-3\">\n            <div class=\"form-group\">\n                <label>Account Number</label><span class=\"asterick\">*</span>\n                <select class=\"form-control\" [(ngModel)]=\"accountNumber\" #account=\"ngModel\" name=\"accountNumber\" required>\n                  <option value=\"\" [disabled]=\"true\">Select Account Number</option>\n                  <option *ngFor=\"let account of profileAccounts\" [ngValue]=\"account.sAccountPlan.MT4Account\"> {{account.sAccountPlan.MT4Account}} </option>\n              </select>\n            </div>\n        </div>\n        <div class=\"col-md-3\">\n            <div class=\"form-group\">\n                <label>Select Date</label><span class=\"asterick\">*</span>\n                <input [(ngModel)]=\"datechoose\" name=\"datechoose\" type=\"text\" placeholder=\"Select Date\" class=\"form-control\" bsDaterangepicker #datepickerYMD=\"bsDaterangepicker\" required>\n            </div>\n        </div>\n        <div class=\"col-md-2\" style=\"display: flex;align-items: center;\">\n            <button [disabled]=\"closeTrades.invalid\" type=\"button\" (click)=\"getCloseTrades(account.value,datepickerYMD)\" class=\"px-4 btn btn-primary btn-sm mt-3\" style=\"padding: 6px;\n        margin-top: 12px!important;\">\n          submit\n      </button>\n        </div>\n    </div>\n</form>\n\n<div class=\"table-container table-responsive  mb-3\">\n    <table class=\"table table-hover main-txt-color mb-0\">\n        <thead class=\"table-header-bg table-header-color\">\n            <tr>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Trade Type</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Ticket</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Symbol</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Lot</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Open Price</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Profit</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Close price</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Close time</th>\n            </tr>\n        </thead>\n        <tbody class=\"secondary-txt-color\">\n            <tr *ngFor=\"let close of closeTradess\">\n                <td class=\"bd-color text-capitalize align-middle\"><span *ngIf=\"close.uTradeFlag == 0\">BUY</span><span *ngIf=\"close.uTradeFlag == 1\">SELL</span></td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Ticket}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Symbol}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Lot}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Open_Price}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Profit}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Close_Price}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{close.Close_Time | date :'dd-MMM-yy h : mm : ss a '}}</td>\n            </tr>\n            <tr *ngIf=\"closeTradess.length == 0\">\n                <td colspan=\"8\"> <label style=\"width: 100%;text-align: center;\">no record found</label> </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { GlobalService } from '../../../../../shared/services/global.service';\n\n@Component({\n  selector: 'app-open-trades',\n  templateUrl: './open-trades.component.html',\n  styleUrls: ['./open-trades.component.scss']\n})\nexport class OpenTradesComponent implements OnInit {\n  managerindex: number;\n  profileAccounts: any[] = [];\n  openTradess: any[] = [];\n  accountNumber = '';\n  accountTypee = '';\n  constructor(private global: GlobalService) {\n  }\n  profileAccount(accountTyp) {\n    const data = {\n      ProfileId: localStorage.getItem('LoggedDealermasterid'),\n      LoginId:  localStorage.getItem('LoggedDealermasterid')\n    };\n    this.global.getProfileAccounts(data).subscribe((res: any) => {\n      this.profileAccounts = res.lstAccount.filter( (account: any) => {\n        // tslint:disable-next-line: triple-equals\n        if (account.sAccountPlan.uAccount_Type == accountTyp) {\n\n          return Object.assign(account.sAccountPlan, account.sUserInfo);\n        }\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n\n\n  getOpenTrades(acc) {\n   this.profileAccounts.find(manager => {\n      if (manager.sUserInfo.MT4Account == acc) {\n        this.managerindex = manager.sAccountPlan.uManager;\n      }\n    });\n   const queryString = {\n      Account:acc,\n      ManagerIndex: this.managerindex\n    };\n   this.global.getOpenPositions(queryString).subscribe((openAccount: any) => {\n      //  let data = JSON.stringify();\n        this.openTradess = openAccount.lstOPEN\n        console.log(this.openTradess);\n    },\n    err => {\n      console.log(err);\n    });\n  }\n  ngOnInit(): void {\n\n  }\n}\n","<form #openTrades=\"ngForm\">\n    <div class=\"row fromarea rounded\">\n        <div class=\"col-md-4\">\n            <div class=\"form-group\">\n                <label>Account Type</label><span class=\"asterick\">*</span>\n                <select class=\"form-control\" [(ngModel)]=\"accountTypee\" name=\"accountTypee\" #accountType required (change)=\"profileAccount($event.target.value)\">\n                  <option value=\"\" [disabled]=\"true\">Select Account type</option>\n                  <option value=\"0\">Demo</option>\n                  <option value=\"1\">Live</option>\n              </select>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"form-group\">\n                <label>Account Number</label><span class=\"asterick\">*</span>\n                <select class=\"form-control\" [(ngModel)]=\"accountNumber\" name=\"accountNumber\" #account=\"ngModel\" required>\n                  <option value=\"\" [disabled]=\"true\">Select Account Number</option>\n                  <option *ngFor=\"let account of profileAccounts\" [ngValue]=\"account.sAccountPlan.MT4Account\"> {{account.sAccountPlan.MT4Account}} </option>\n              </select>\n            </div>\n        </div>\n        <div class=\"col-md-3\" style=\"display: flex;align-items: center;\">\n            <button [disabled]=\"openTrades.invalid\" (click)=\"getOpenTrades(account.value)\" type=\"button\" class=\"btn btn-primary btn-sm mt-3 px-4\" style=\"padding: 6px;\n        margin-top: 12px!important;\">\n          Submit\n      </button>\n        </div>\n    </div>\n</form>\n<div class=\"table-container table-responsive  mb-3\">\n    <table class=\"table table-hover main-txt-color mb-0\">\n        <thead class=\"table-header-bg table-header-color\">\n            <tr>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Trade type</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Ticket</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Symbol</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Lot</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Open price</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Profit</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Stop loss</th>\n                <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Open time</th>\n            </tr>\n        </thead>\n        <tbody class=\"secondary-txt-color\">\n\n            <tr *ngFor=\"let trades of openTradess\">\n                <td class=\"bd-color text-capitalize align-middle\">\n                    <span *ngIf=\"trades.BUY_SELL == 0\">BUY</span>\n                    <span *ngIf=\"trades.BUY_SELL == 1\">SELL</span>\n                </td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Ticket}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Symbol}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Lot}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Open_Price}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Profit}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Stop_Loss}}</td>\n                <td class=\"bd-color text-capitalize align-middle\">{{trades.Open_Time | date :'dd-MMM-yy h : mm : ss a '}}</td>\n            </tr>\n            <tr *ngIf=\"openTradess.length == 0\">\n                <td colspan=\"8\"> <label style=\"text-align:center;width:100%;\">no record found</label> </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports-core',\n  templateUrl: './reports-core.component.html',\n  styleUrls: ['./reports-core.component.scss']\n})\nexport class ReportsCoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"small-content-section bg-f\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card border-0 \">\n                <div class=\"card-body border-0 p-0\">\n                    <div class=\"tabs-container\">\n                        <ul class=\"tabs-heading d-flex flex-row border-bottom\">\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/reports/open-trades\">\n                                    <span class=\"material-icons\">attach_money</span>\n                                    <span class=\"tab-text\">Open trades</span>\n                                </a>\n                            </li>\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/reports/close-trades\">\n                                    <span class=\"material-icons\">money_off</span>\n                                    <span class=\"tab-text\">Close trades</span>\n                                </a>\n                            </li>\n                        </ul>\n                        <div class=\"tabs-body p-2\">\n                            <router-outlet></router-outlet>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { CloseTradesComponent } from './reports-core/close-trades/close-trades.component';\nimport { OpenTradesComponent } from './reports-core/open-trades/open-trades.component';\nimport { ReportsCoreComponent } from './reports-core/reports-core.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportsCoreComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'open-trades'\n      },\n      {\n        path: 'open-trades',\n        component: OpenTradesComponent,\n        data: {title: 'Reports', breadcrumb: 'Open Trades'}\n      },\n      {\n        path: 'close-trades',\n        component: CloseTradesComponent,\n        data: {title: 'Reports', breadcrumb: 'Close Trades'}\n      }\n    ]\n  }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportsRoutingModule { }\n","import { SharedModule } from './../../../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReportsRoutingModule } from './reports-routing.module';\nimport { ReportsCoreComponent } from './reports-core/reports-core.component';\nimport { OpenTradesComponent } from './reports-core/open-trades/open-trades.component';\nimport { CloseTradesComponent } from './reports-core/close-trades/close-trades.component';\n\n\n@NgModule({\n  declarations: [ReportsCoreComponent, OpenTradesComponent, CloseTradesComponent],\n  imports: [\n    CommonModule,\n    ReportsRoutingModule,\n    SharedModule\n  ]\n})\nexport class ReportsModule { }\n"]}