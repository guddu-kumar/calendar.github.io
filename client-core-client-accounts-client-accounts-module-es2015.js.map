{"version":3,"sources":["./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/accounts-management.component.ts","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/accounts-management.component.html","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/live-account-configuration/live-account-configuration.component.ts","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/live-account-configuration/live-account-configuration.component.html","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/open-demo-account/open-demo-account.component.ts","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/open-demo-account/open-demo-account.component.html","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/open-live-account/open-live-account.component.ts","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-management/open-live-account/open-live-account.component.html","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-overview.component.ts","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-overview.component.html","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/accounts-settings-models.component.ts","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/accounts-settings-models.component.html","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/change-investor-password/change-investor-password.component.ts","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/change-investor-password/change-investor-password.component.html","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/change-leverage/change-leverage.component.ts","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/change-leverage/change-leverage.component.html","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/change-master-password/change-master-password.component.ts","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/accounts-settings-models/change-master-password/change-master-password.component.html","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/demo-account-overview/demo-account-overview.component.ts","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/demo-account-overview/demo-account-overview.component.html","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/live-account-overview/live-account-overview.component.ts","./src/app/pages/client-core/client-accounts/client-accounts-core/accounts-overview/live-account-overview/live-account-overview.component.html","./src/app/pages/client-core/client-accounts/client-accounts-core/client-accounts-core.component.ts","./src/app/pages/client-core/client-accounts/client-accounts-core/client-accounts-core.component.html","./src/app/pages/client-core/client-accounts/client-accounts-routing.module.ts","./src/app/pages/client-core/client-accounts/client-accounts.module.ts","./src/app/shared/models/account-verification.modal.ts","./src/app/shared/models/open-demo-account.modal.ts","./src/app/shared/models/open-live-account.modal.ts"],"names":[],"mappings":"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","file":"client-core-client-accounts-client-accounts-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-accounts-management',\n  templateUrl: './accounts-management.component.html',\n  styleUrls: ['./accounts-management.component.scss']\n})\nexport class AccountsManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"small-content-section bg-f\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card border-0 \">\n                <div class=\"card-body border-0 p-0\">\n                    <div class=\"tabs-container\">\n                        <ul class=\"tabs-heading d-flex flex-row border-bottom\">\n                            <li class=\"tabs-item\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/accounts/management/live-account-configuration\">Configure Account</a>\n                            </li>\n                            <li class=\"tabs-item\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/accounts/management/open-live-account\">Open Live Account</a>\n                            </li>\n                            <li class=\"tabs-item\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/accounts/management/open-demo-account\">Open Demo Account</a>\n                            </li>\n                        </ul>\n                        <div class=\"tabs-body p-2\">\n                            <router-outlet></router-outlet>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from '../../../../../../shared/services/global.service';\nimport { AccountVerificationModalData } from '../../../../../../shared/models/account-verification.modal';\nimport { MovingDirection } from 'angular-archwizard';\n@Component({\n  selector: 'app-live-account-configuration',\n  templateUrl: './live-account-configuration.component.html',\n  styleUrls: ['./live-account-configuration.component.scss']\n})\nexport class LiveAccountConfigurationComponent implements OnInit {\n  public mt4Manager: any[] = [];\n  public accountData: any = new AccountVerificationModalData();\n  public getAccountDetails: any;\n  public confAccDetail: any;\n  public passwordMsg = false;\n  public canExitStep1: boolean;\n  public cpassword: any;\n  public canExitStep2Backwards = true;\n  public canExitStep2Forwards = true;\n  public canExitStep3 = true;\n  public canExitStep2: (MovingDirection) => boolean = (direction) => {\n    switch (direction) {\n      case MovingDirection.Forwards:\n        return this.canExitStep2Forwards;\n      case MovingDirection.Backwards:\n        return this.canExitStep2Backwards;\n      case MovingDirection.Stay:\n        return true;\n    }\n  }\n  constructor(public global: GlobalService) {\n    this.GET_MT4_MANAGERS(1001);\n  }\n  // GET ACCOUNT TYPE\n  GET_MT4_MANAGERS(DealerIds) {\n    const params = {\n      DealerId: DealerIds\n    };\n    this.global.GET_MT4_MANAGERS(params).subscribe(data => {\n      this.mt4Manager = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  // tslint:disable-next-line: variable-name\n  checkStep(accountInformation) {\n    if (accountInformation.form.value.Password && accountInformation.form.status === 'VALID') {\n      this.canExitStep1 = true;\n    } else {\n      this.canExitStep1 = false;\n    }\n  }\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n\n  }\n  // GET ACCOUNT VERIFICATION\n  // tslint:disable-next-line: variable-name\n  GET_ACCOUNT_VERIFICATION(accountInformation) {\n\n    if (accountInformation.form.value.Password && accountInformation.form.status === 'VALID') {\n      this.global.GET_ACCOUNT_VERIFICATION(accountInformation.form.value).subscribe((res: any) => {\n        if (res) {\n          this.getAccountDetails = res;\n        }\n      }, err => {\n        console.log(err);\n      });\n      this.passwordMsg = false;\n    } else {\n      this.passwordMsg = true;\n      this.canExitStep1 = false;\n    }\n  }\n\n  // GET CONFIGURE ACCOUNT\n  CONFIGURE_ACCOUNT(account: HTMLInputElement, password: HTMLInputElement) {\n    const params: any = {\n      MasterId: this.global.localDealermasterID,\n      PlanId: this.getAccountDetails.PkgId,\n      Leverage: this.getAccountDetails.Leverage,\n      Account: account.value,\n      Password: password.value\n    };\n    this.global.CONFIGURE_ACCOUNT(params).subscribe(data => {\n      this.confAccDetail = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n  ngOnInit() {}\n}\n","<!-- Step Wizard Reference :https://www.npmjs.com/package/angular-archwizard -->\n<div class=\"row\">\n    <div class=\"col-sm-12 col-lg-10 \">\n        <div class=\"stepsContainer\" id=\"configure-account-step\">\n            <aw-wizard id=\"\" class=\"aw-wizard-css\" navBarLayout=\"large-filled\">\n                <aw-wizard-step stepTitle=\"Account Information\" class=\"step1\" [canExit]=\"canExitStep1\" [navigationSymbol]=\"{ symbol: '1' }\">\n                    <div class=\"step-body rounded m-3 p-3\">\n                        <div class=\"step-heading-section mb-3\">\n                            <h3 class=\"title\">Configure Your Account</h3>\n                            <p class=\"description\">Please fill all the mandatory fields</p>\n                        </div>\n                        <form #getAccount=\"ngForm\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label> Account number</label> <span class=\"asterick\">*</span>\n                                        <input autocomplete=\"off\" type=\"text\" class=\"form-control\" placeholder=\"Enter account number\" #account=\"ngModel\" #accountt name=\"Account\" (keypress)=\"numberOnly($event)\" [(ngModel)]=\"accountData.Account\" pattern=\"^-?(0|[1-9]\\d*)?$\" required>\n                                        <div *ngIf=\"account.touched && account.invalid\">\n                                            <label class=\"error_msg\" *ngIf=\"account.errors?.required\">Account number is\n                                                a required field !</label>\n                                            <label class=\"error_msg\" *ngIf=\"account.errors?.pattern\">Account number will\n                                                be numeric value !</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Plan</label> <span class=\"asterick\">*</span>\n                                        <select class=\"form-control\" name=\"ManagerIndex\" [(ngModel)]=\"accountData.ManagerIndex\">\n                                            <option value=\"\" [disabled]=\"true\">Select Plan</option>\n                                            <option *ngFor=\"let manager of mt4Manager\" name=\"managerIndex\" [ngValue]=\"manager.Manager_Index\">{{manager.ServerCODE}}</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-12\">\n                                    <label *ngIf=\"passwordMsg\" class=\"error_msg\">Password doesn't match !</label>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Password</label> <span class=\"asterick\">*</span>\n                                        <input autocomplete=\"off\" type=\"password\" class=\"form-control\" placeholder=\"Enter your password\" #password name=\"Password\" (keyup)=\"checkStep(getAccount)\" [(ngModel)]=\"accountData.Password\" required>\n                                        <label *ngIf=\"passwordMsg\" class=\"error_msg\">Password doesn't match !</label>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Confirm Password  <span class=\"asterick\">*</span></label>\n                                        <input type=\"Password\" class=\"form-control\" placeholder=\"Enter your confirm password\" (keyup)=\"checkStep(getAccount,confirm_pass)\" #confirm_pass name=\"cpassword\" [(ngModel)]=\"cpassword\" required>\n                                    </div>\n                                </div> -->\n                            </div>\n\n                            <div class=\"btn-row clearfix\">\n                                <button type=\"submit\" [disabled]=\"!getAccount.valid\" awNextStep class=\"btn btn-primary btn-sm mt-3 float-right\" (click)=\"GET_ACCOUNT_VERIFICATION(getAccount)\">Next Step <span>Account\n                                        confirmation </span></button>\n                            </div>\n                        </form>\n                    </div>\n                </aw-wizard-step>\n                <aw-wizard-step stepTitle=\"Account Confirmation\" [canExit]=\"canExitStep2\" [navigationSymbol]=\"{ symbol: '2' }\">\n                    <div class=\"step-body rounded m-3 p-4\">\n                        <div class=\"step-heading-section mb-4\">\n                            <h3 class=\"title\">Account Confirmation</h3>\n                            <p class=\"description\">Please confirm your account details and click on Confirm button to configure your account</p>\n                        </div>\n                        <div class=\"details-container\">\n                            <div class=\"details-table border bd-color rounded p-3\">\n                                <table class=\"table table-hover table-sm\">\n                                    <tbody>\n                                        <tr>\n                                            <td class=\"d-label border-0\">Name</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.Name}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"d-label border-0\">Email Address</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.Email}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"d-label border-0\">Balance</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.Balance}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"d-label border-0\">Equity Status</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.Equity}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"d-label border-0\">Leverage Status</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.Leverage}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"d-label border-0\">Package</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.Package}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"d-label border-0\">PkgId</td>\n                                            <td class=\"d-val border-0\">: {{getAccountDetails?.PkgId}}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        <div class=\"btn-row clearfix\">\n                            <button type=\"button\" awPreviousStep class=\"btn btn-primary btn-sm mt-3 float-left\">\n                                Previous Step\n                                <span>Account Information </span>\n                            </button>\n                            <button type=\"button\" awNextStep class=\"btn btn-primary btn-sm mt-3 float-right\" (click)=\"CONFIGURE_ACCOUNT(accountt,password)\">\n                                Next Step\n                                <span>Account confirmation</span>\n                            </button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n\n\n                <aw-wizard-step stepTitle=\"Confirmation Message\" [canExit]=\"canExitStep3\" [navigationSymbol]=\"{ symbol: '3' }\">\n                    <div class=\"step-body rounded m-3 p-4\">\n                        <div class=\"step-heading-section mb-4\">\n                            <h3 class=\"title\">Confirmation Message</h3>\n                            <p class=\"description\">Please Check your confirmation message. After checking message click on finish button and go to accounts overview screen</p>\n                        </div>\n                        <div class=\"details-container\">\n                            <div class=\"message-area border bd-color rounded p-3\" style=\"height:100px\">\n                                <div class=\"message\">{{confAccDetail?.MSG_USER}}</div>\n                            </div>\n\n                        </div>\n                        <div class=\"btn-row clearfix\">\n                            <button type=\"button\" awPreviousStep class=\"btn btn-primary btn-sm mt-3 float-left\">\n                                Previous Step\n                                <span>Account Information </span>\n                            </button>\n                            <button type=\"button\" class=\"btn btn-primary btn-sm mt-3 float-right\" routerLink=\"['/home/accounts/overview/live-account-overview']\">\n                                Finish Step <span>Go to Accounts Overview</span>\n                            </button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n            </aw-wizard>\n        </div>\n    </div>\n    <!-- <div class=\"col-lg-4 col-sm-12\">\n        <div class=\"text-center\" style=\"position: relative; top: 50%; left: 50%; transform: translate(-50%, -50%);\">\n            <img src=\"assets/images/right_Icon.png\" class=\"\">\n        </div>\n    </div> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DemoAccountModalData } from '../../../../../../shared/models/open-demo-account.modal';\nimport { GlobalService } from '../../../../../../shared/services/global.service';\n\n@Component({\n  selector: 'app-open-demo-account',\n  templateUrl: './open-demo-account.component.html',\n  styleUrls: ['./open-demo-account.component.scss']\n})\nexport class OpenDemoAccountComponent implements OnInit {\n\n   public masterId: string;\n  public planId: number;\n  public allPackage: any[] = [];\n  public demoAccount = new DemoAccountModalData();\n  public accountSuccessMsg = false;\n  public accountErrorMsg: string;\n  public passwordMsg = false;\n  public nameUser: string;\n  public canExitStepdemo: boolean;\n  public LoggedParams: any;\n  public name: string;\n  public country: string;\n  public email: string;\n  constructor(private global: GlobalService) {\n    this.getLeverage();\n    this.masterId = localStorage.getItem('LoggedDealermasterid');\n    this.nameUser = localStorage.getItem('LoggedDealerName');\n    this.LoggedParams = JSON.parse(localStorage.getItem('LoggedUser'));\n    this.name = this.LoggedParams.sProfile.uPersonalInfo.First;\n    this.country = this.LoggedParams.sProfile.uAddressInfo.Country;\n    this.email = this.LoggedParams.sProfile.uContactInfo.Email;\n   }\n  getPlan(account_type) {\n    const data: any = {\n      oAccount_Type: account_type,\n      DealerId: 1001\n    };\n    this.global.getPackage(data).subscribe((accountType: any) => {\n      accountType.find(plan => {\n        this.planId = plan.sAccountPlanId;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  getLeverage() {\n    const data: any = {\n      PackageId: 1000\n    };\n    this.global.getLeverageByPackage(data).subscribe((pkg: any) => {\n      console.log(pkg);\n      this.allPackage = pkg;\n    }, err => {\n      console.log(err);\n    });\n  }\n  demoLiveAccount(demoAccountGroup) {\n    const data: any = {\n      MasterId: this.masterId,\n      PlanId: this.planId,\n      LoginId: this.masterId,\n      Depoist: this.demoAccount.Amount,\n      Name: this.nameUser,\n      Password: this.demoAccount.password\n    };\n    if (demoAccountGroup.form.value.password && demoAccountGroup.form.status === 'VALID') {\n    this.global.openDemoAcc(data).subscribe((res: any) => {\n      if (res.MT4Account) {\n        this.accountSuccessMsg = true;\n      } else {\n        this.accountErrorMsg = res.ERR_MSG;\n      }\n    }, err => {\n      console.log(err);\n    });\n    this.passwordMsg = false;\n      } else {\n         this.passwordMsg = true;\n      }\n  }\n  checkStep(demoAccountGroup) {\n    if (demoAccountGroup.form.value.password && demoAccountGroup.form.status === 'VALID') {\n      this.canExitStepdemo = true;\n    } else {\n      this.canExitStepdemo = false;\n    }\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Step Wizard Reference :https://www.npmjs.com/package/angular-archwizard -->\n<div class=\"row\">\n    <div class=\"col-lg-10 col-sm-12\">\n        <div class=\"stepsContainer\" id=\"demo-account-step\">\n            <aw-wizard id=\"\" class=\"aw-wizard-css\" navBarLayout=\"large-filled\">\n                <aw-wizard-step stepTitle=\"Account Information\" class=\"step1\" [navigationSymbol]=\"{ symbol: '1' }\">\n                    <div class=\"step-body rounded m-3 p-3\">\n                        <div class=\"step-heading-section mb-3\">\n                            <h3 class=\"title\">Demo Account</h3>\n                            <p class=\"description\">Please fill all the mandatory fields</p>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"name\" disabled required>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Country</label>\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"country\" disabled required>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Email</label>\n                                    <input type=\"email\" class=\"form-control\" [(ngModel)]=\"email\" disabled required>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"btn-row clearfix\">\n                            <button type=\"button\" awNextStep class=\"btn btn-primary btn-sm mt-3 float-right\">Next Step <span>Account confirmation </span></button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n                <aw-wizard-step stepTitle=\"Account Confirmation\" [navigationSymbol]=\"{ symbol: '2' }\" [canExit]=\"canExitStepdemo\">\n                    <div class=\"step-body rounded m-3 p-4\">\n                        <div class=\"step-heading-section mb-4\">\n                            <h3 class=\"title\">Account Confirmation</h3>\n                            <p class=\"description\">Please confirm your account details and click on Confirm button to configure your account</p>\n                        </div>\n                        <form #demoAccountGroup=\"ngForm\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Plan</label> <span class=\"asterick\">*</span>\n                                        <select class=\"form-control\" [(ngModel)]=\"demoAccount.Plan\" name=\"Plan\" (change)=\"getPlan(demoAccount.Plan)\" required>\n                                                <option value=\"\" [disabled]=\"true\">Select Account Plan</option>\n                                                <option value=\"0\">Demo</option>\n                                            </select>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Amount </label> <span class=\"asterick\">*</span>\n                                        <select [(ngModel)]=\"demoAccount.Amount\" name=\"Amount\" class=\"form-control\" required>\n                                                <option value=\"\" disabled=\"true\">Select Leverage</option>\n                                                <option>100</option>\n                                                <option>500</option>\n                                                <option>1000</option>\n                                                <option>2000</option>\n                                                <option>3000</option>\n                                                <option>4000</option>\n                                                <option>5000</option>\n                                            </select>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>password</label>\n                                        <input type=\"password\" (keyup)=\"checkStep(demoAccountGroup)\" class=\"form-control\" #password placeholder=\"Enter password\" [(ngModel)]=\"demoAccount.password\" name=\"password\" required>\n                                        <label *ngIf=\"passwordMsg\" class=\"error_msg\">Password doesn't match !</label>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Confirm password</label>\n                                        <input type=\"password\" (keyup)=\"checkStep(demoAccountGroup,confirm_password)\" #confirm_password class=\"form-control\" [(ngModel)]=\"demoAccount.confirm_password\" name=\"confirm_password\" required>\n                                    </div>\n                                </div> -->\n                            </div>\n                            <div class=\"btn-row clearfix\">\n                                <button type=\"button\" awPreviousStep class=\"btn btn-primary btn-sm mt-3 float-left\"> Previous Step \n                                    <span>Account Information </span> \n                                </button>\n                                <button (click)=\"demoLiveAccount(demoAccountGroup)\" [disabled]=\"demoAccountGroup.invalid\" type=\"button\" awNextStep class=\"btn btn-primary btn-sm mt-3 float-right\">Next Step\n                                    <span>Account confirmation</span>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </aw-wizard-step>\n\n                <aw-wizard-step stepTitle=\"Confirmation Message\" [navigationSymbol]=\"{ symbol: '3' }\">\n                    <div class=\"step-body rounded m-3 p-4\">\n                        <div class=\"step-heading-section mb-4\">\n                            <h3 class=\"title\">Confirmation Message</h3>\n                            <p class=\"description\">Please Check your confirmation message. After checking message click on finish button and go to accounts overview screen</p>\n                        </div>\n                        <div class=\"details-container\">\n                            <div class=\"message-area border bd-color rounded p-3\" style=\"height:100px\">\n                                <div class=\"message\" *ngIf=\"accountSuccessMsg\">Congratulations! Your account has been configured successfully.</div>\n                                <div class=\"message\" [innerHTML]=\"accountErrorMsg\"></div>\n                            </div>\n\n                        </div>\n                        <div class=\"btn-row clearfix\">\n                            <button type=\"button\" class=\"btn btn-primary btn-sm mt-3 float-right\" [routerLink]=\"[ '/home/accounts/overview/live-account-overview']\">\n                                Finish Step <span>Go to Accounts Overview</span>\n                            </button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n\n            </aw-wizard>\n        </div>\n    </div>\n    <!-- <div class=\"col-lg-4 col-sm-12\">\n        <div class=\"text-center\" style=\"position: relative; top: 50%; left: 50%; transform: translate(-50%, -50%);\">\n            <img src=\"assets/images/right_Icon.png\" class=\"\">\n        </div>\n    </div> -->\n</div>","import {Component, OnInit } from '@angular/core';\nimport { GlobalService } from '../../../../../../shared/services/global.service';\nimport {  LiveAccountModalData } from '../../../../../../shared/models/open-live-account.modal';\n\n@Component({\n  selector: 'app-open-live-account',\n  templateUrl: './open-live-account.component.html',\n  styleUrls: ['./open-live-account.component.scss']\n})\nexport class OpenLiveAccountComponent implements OnInit {\n  public planId: number;\n  public allPackage: any[] = [];\n  public liveAccount = new LiveAccountModalData();\n  public accountSuccessMsg = false;\n  public accountErrorMsg: string;\n  public masterId: string;\n  public name: string;\n  public country: string;\n  public LoggedParams: any;\n  public email: string;\n  constructor(private global: GlobalService) {\n    this.getLeverage();\n    this.masterId = localStorage.getItem('LoggedDealermasterid');\n    this.LoggedParams = JSON.parse(localStorage.getItem('LoggedUser'));\n    this.name = this.LoggedParams.sProfile.uPersonalInfo.First;\n    this.country = this.LoggedParams.sProfile.uAddressInfo.Country;\n    this.email = this.LoggedParams.sProfile.uContactInfo.Email;\n  }\n  getPlan(account_type) {\n    const data: any = {\n      oAccount_Type: account_type,\n      DealerId: 1001\n    }\n    this.global.getPackage(data).subscribe((accountType: any) => {\n      accountType.find(plan => {\n        this.planId = plan.sAccountPlanId;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  getLeverage() {\n    const data: any = {\n      PackageId: 1000\n    };\n    this.global.getLeverageByPackage(data).subscribe((pkg: any) => {\n      console.log(pkg);\n      this.allPackage = pkg;\n    }, err => {\n      console.log(err);\n    });\n  }\n  openLiveAccount() {\n    // alert(this.liveAccount.Leverage);\n    const data: any = {\n      PlanId: this.planId,\n      Leverage: this.liveAccount.Leverage,\n      MasterId: this.masterId,\n      LoginId: this.masterId,\n      Depoist: 0,\n      ReferCode: this.liveAccount.IB_Code\n    };\n    this.global.openAcc(data).subscribe((res: any) => {\n      if (res.MT4Account) {\n        this.accountSuccessMsg = true;\n      } else {\n        this.accountErrorMsg = res.ERR_MSG;\n      }\n    }, err => {\n      console.log(err);\n    });\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n","<!-- Step Wizard Reference :https://www.npmjs.com/package/angular-archwizard -->\n<div class=\"row\">\n    <div class=\"col-lg-10 col-sm-12\">\n        <div class=\"stepsContainer\" id=\"live-account-step\">\n            <aw-wizard id=\"\" class=\"aw-wizard-css\" navBarLayout=\"large-filled\">\n                <aw-wizard-step stepTitle=\"Account Information\" class=\"step1\" [navigationSymbol]=\"{ symbol: '1' }\">\n                    <div class=\"step-body rounded m-3 p-3\">\n                        <div class=\"step-heading-section mb-3\">\n                            <h3 class=\"title\">Live Account</h3>\n                            <p class=\"description\">Please fill all the mandatory fields</p>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"name\" disabled required>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Country</label>\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"country\" disabled required>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Email</label>\n                                    <input type=\"email\" class=\"form-control\" [(ngModel)]=\"email\" disabled required>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"btn-row clearfix\">\n                            <button type=\"button\" awNextStep class=\"btn btn-primary btn-sm mt-3 float-right\">Next Step <span>Account confirmation </span></button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n                <aw-wizard-step stepTitle=\"Account Confirmation\" [navigationSymbol]=\"{ symbol: '2' }\">\n                    <div class=\"step-body rounded m-3 p-4\">\n                        <div class=\"step-heading-section mb-4\">\n                            <h3 class=\"title\">Account Confirmation</h3>\n                            <p class=\"description\">Please confirm your account details and click on Confirm button to configure your account\n                            </p>\n                        </div>\n                        <form #liveAccountGroup=\"ngForm\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Plan</label><span class=\"asterick\">*</span>\n                                        <select class=\"form-control\" [(ngModel)]=\"liveAccount.Plan\" name=\"Plan\" (change)=\"getPlan(liveAccount.Plan)\" required>\n                                                <option value=\"\" [disabled]=\"true\">Select Account Plan</option>\n                                                <option value=\"1\">Live</option>\n                                            </select>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label>Leverage </label><span class=\"asterick\">*</span>\n                                        <select [(ngModel)]=\"liveAccount.Leverage\" name=\"Leverage\" class=\"form-control\" required>\n                                                <option value=\"\" disabled=\"true\">Select Leverage</option>\n                                                <option *ngFor=\"let lev of allPackage\" [ngValue]=\"lev\">1 : {{lev}}</option>\n                                             </select>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                        <div class=\"btn-row clearfix\">\n                            <button type=\"button\" awPreviousStep class=\"btn btn-primary btn-sm mt-3 float-left\"> Previous Step\n                                <span>Account Information </span>\n                            </button>\n                            <button (click)=\"openLiveAccount()\" [disabled]=\"liveAccountGroup.invalid\" type=\"button\" awNextStep class=\"btn btn-primary btn-sm mt-3 float-right\">\n                                Next Step <span>Confirmation Message</span>\n                            </button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n                <aw-wizard-step stepTitle=\"Confirmation Message\" [navigationSymbol]=\"{ symbol: '3' }\">\n                    <div class=\"step-body rounded m-3 p-4\">\n                        <div class=\"step-heading-section mb-4\">\n                            <h3 class=\"title\">Confirmation Message</h3>\n                            <!-- <p class=\"description\">Please Check your confirmation message. After checking message click on finish button and go to accounts overview screen</p> -->\n                        </div>\n                        <div class=\"details-container\">\n                            <div class=\"message-area border bd-color rounded p-3\" style=\"height:100px\">\n                                <div class=\"message\" *ngIf=\"accountSuccessMsg\">Congratulations! Your live account has been created successfully.</div>\n                                <div class=\"message\" [innerHTML]=\"accountErrorMsg\"></div>\n                            </div>\n\n                        </div>\n                        <div class=\"btn-row clearfix\">\n                            <!-- <button type=\"button\" awPreviousStep class=\"btn btn-primary btn-sm mt-3 float-left\">\n                                Previous Step\n                                <span>Account Information </span>\n                            </button> -->\n                            <button type=\"button\" class=\"btn btn-primary btn-sm mt-3 float-right\" [routerLink]=\"[ '/home/accounts/overview/live-account-overview']\">\n                                Finish Step <span>Go to Accounts Overview</span>\n                            </button>\n                        </div>\n                    </div>\n                </aw-wizard-step>\n            </aw-wizard>\n        </div>\n    </div>\n    <!-- <div class=\"col-lg-4 col-sm-12\">\n        <div class=\"text-center\" style=\"position: relative; top: 50%; left: 50%; transform: translate(-50%, -50%);\">\n            <img src=\"assets/images/right_Icon.png\" class=\"\">\n        </div>\n    </div> -->\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-accounts-overview',\n  templateUrl: './accounts-overview.component.html',\n  styleUrls: ['./accounts-overview.component.scss']\n})\nexport class AccountsOverviewComponent implements OnInit {\n\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div class=\"toolbar d-none d-sm-block d-md-block d-lg-block\">\r\n    <a routerLink=\"/home/accounts/management/live-account-configuration\" class=\"btn btn-primary btn-sm \">Configure Live Account</a>\r\n    <a routerLink=\"/home/accounts/management/open-live-account\" class=\"btn btn-primary btn-sm ml-1\">Open Live Account</a>\r\n    <a routerLink=\"/home/accounts/management/open-demo-account\" class=\"btn btn-primary btn-sm ml-1\">Open Demo Account</a>\r\n</div> -->\r\n<div class=\"small-content-section bg-f\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card border-0 \">\r\n                <div class=\"card-body border-0 p-0\">\r\n                    <div class=\"tabs-container\">\r\n                        <ul class=\"tabs-heading d-flex flex-row border-bottom\">\r\n                            <li class=\"tabs-item\" routerLinkActive=\"active\">\r\n                                <a class=\" \" routerLink=\"/home/accounts/overview/live-account\">Live Account</a>\r\n                            </li>\r\n                            <li class=\"tabs-item\" routerLinkActive=\"active\">\r\n                                <a class=\" \" routerLink=\"/home/accounts/overview/demo-account\">Demo Account</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div class=\"tabs-body p-2\">\r\n                            <router-outlet></router-outlet>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { GlobalService } from './../../../../../../shared/services/global.service';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-accounts-settings-models',\n  templateUrl: './accounts-settings-models.component.html',\n  styleUrls: ['./accounts-settings-models.component.scss']\n})\nexport class AccountsSettingsModelsComponent implements OnInit {\n  title: string;\n  accountDetails: any;\n  closeBtnName: string;\n  list: any[] = [];\n  isFirstOpen = true;\n  oneAtATime = true;\n  constructor(\n    public bsModalRef: BsModalRef,\n    public global: GlobalService\n    ) { }\n\n  ngOnInit(): void {\n    console.log(this.accountDetails);\n  }\n  onChangeInvestorPassword() {\n\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">\n        <i-feather name=\"settings\"></i-feather> Settings</h4>\n    <p class=\"sub-title\">Account: {{accountDetails.MT4Account}}</p>\n    <button type=\"button\" class=\"close cursor-pointer\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n        <i-feather name=\"x\"></i-feather>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <accordion [isAnimated]=\"true\" [closeOthers]=\"oneAtATime\" class=\"modal-accordian-container\">\n        <accordion-group [isOpen]=\"isFirstOpen\" class=\"accordian-group\">\n            <div class=\"clearfix according-heading\" accordion-heading>\n                <div class=\"title\">Change Master Password </div>\n                <small class=\"text-success\">Please Use Alphanumeric Password*</small>\n            </div>\n            <app-change-master-password [accountDetail]=\"accountDetails\"></app-change-master-password>\n        </accordion-group>\n        <accordion-group class=\"accordian-group\">\n            <div class=\"clearfix according-heading\" accordion-heading>\n                <div class=\"title\">Change Investor Password</div>\n                <small class=\"text-success\">Please Use Alphanumeric Password*</small>\n            </div>\n            <app-change-investor-password [accountDetail]=\"accountDetails\"></app-change-investor-password>\n        </accordion-group>\n        <accordion-group class=\"accordian-group\">\n            <div class=\"clearfix according-heading\" accordion-heading>\n                <div class=\"title\">Change Leverage</div>\n                <small class=\"text-success\">Please Select at least one Value*</small>\n            </div>\n            <app-change-leverage [accountDetail]=\"accountDetails\"></app-change-leverage>\n        </accordion-group>\n    </accordion>\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../../shared/services/global.service';\n@Component({\n  selector: 'app-change-investor-password',\n  templateUrl: './change-investor-password.component.html',\n  styleUrls: ['./change-investor-password.component.scss']\n})\nexport class ChangeInvestorPasswordComponent implements OnInit {\n  title: string;\n  @Input() accountDetail: any;\n  closeBtnName: string;\n  list: any[] = [];\n  isFirstOpen = true;\n  oneAtATime = true;\n  submitted = false;\n  ErrorMsqBlock = false;\n  successMsqBlock = false;\n  messageToDisplay: string;\n  isPasswordLengthOk = true;\n  isPasswordPatterenOK: boolean;\n  @ViewChild('formData', {static: false}) chnageInvestorPasswordForm: NgForm;\n  constructor( public global: GlobalService) { }\n\n  ngOnInit(): void {\n    console.log(this.accountDetail);\n  }\n  onKeydown(event: any) {\n    this.isPasswordLengthOk = true;\n    this.isPasswordPatterenOK = true;\n   }\n   onblur(value) {\n     if (value.length >= 6) {\n       this.isPasswordLengthOk = true;\n     } else {\n       this.isPasswordLengthOk = false;\n     }\n   }\n  onChangeInvestorPassword() {\n    const newMPassword = this.chnageInvestorPasswordForm.value.newPassword;\n    const ConfirmMPassword = this.chnageInvestorPasswordForm.value.cpPassword;\n    if ( newMPassword !== ConfirmMPassword) {\n      this.ErrorMsqBlock = true;\n      this.messageToDisplay = 'Confirm Password Not Matched...';\n    } else {\n      const params = {\n        Account: this.accountDetail.MT4Account,\n        password: newMPassword,\n        ManagerIndex: this.accountDetail.uManager\n      };\n      this.global.changeInvestorPassword(params).subscribe(data => {\n        if (data.ERR_DEV === null && data.MSG_USER === null) {\n          this.successMsqBlock = true;\n          this.messageToDisplay = 'Investor Password has been changed successfully';\n        } else {\n          this.ErrorMsqBlock = true;\n          this.messageToDisplay = 'Failed to Update the Investor Password';\n        }\n      });\n    }\n    setTimeout(() => {\n      this.ErrorMsqBlock = false;\n      this.successMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <!-- Success Message After Submit section start -->\n        <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n            {{messageToDisplay}}\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            </button>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n            {{messageToDisplay}}\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            </button>\n        </div>\n        <!--Form Area :  Investor password change -->\n        <form class=\"\" (ngSubmit)=\" onChangeInvestorPassword()\" #formData=\"ngForm\">\n            <!-- Password form Field Start-->\n            <div class=\"form-group position-relative \">\n                <label class=\"text-size-13\" for=\"New password \">New Password</label>\n                <span class=\"asterick\">*</span>\n                <!-- <input required pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\" ngModel #newPassword=\"ngModel\" name=\"newPassword\" type=\"password\" class=\"form-control main-txt-color bg-f bd-color \" id=\"niPassword \" placeholder=\"Enter New your password\"> -->\n                <input required (keydown)=\"onKeydown($event)\" (blur)=\"onblur(newPassword.value)\" ngModel #newPassword=\"ngModel\" name=\"newPassword\" type=\"password\" class=\"form-control main-txt-color bg-f bd-color \" id=\"niPassword \" placeholder=\"Enter new password\">\n                <div>\n                    <!-- <div class=\"help-block text-danger\" *ngIf=\"newPassword.errors?.required && newPassword.touched && !newPassword.dirty \">Password Field can not be blank</div>\n                    <div class=\"help-block text-danger\" *ngIf=\"newPassword.invalid && newPassword.dirty && newPassword.errors?.pattern\">Please enter a valid password, Password must be at least 8 characters long.</div> -->\n\n                    <div class=\"help-block text-danger\" *ngIf=\"!isPasswordLengthOk && newPassword.touched\">Password must be at least 6 characters</div>\n                    <!-- <div class=\"help-block text-danger\" *ngIf=\"newPassword.invalid && newPassword.dirty && newPassword.errors?.pattern\">Please enter a valid password, Password must be at least 8 characters long.</div> -->\n                </div>\n            </div>\n            <!-- Password form Field Close-->\n            <!-- Confirm Password form Field Start-->\n            <div class=\"form-group position-relative \">\n                <label class=\"text-size-13\" for=\"cpassword \">Confirm Password</label>\n                <span class=\"asterick\">*</span>\n                <input ngModel required #cpPassword=\"ngModel\" name=\"cpPassword\" type=\"password\" class=\"form-control main-txt-color bg-f bd-color \" id=\"ciPassword \" placeholder=\"Enter confirm password\">\n                <!-- <span class=\"help-block text-danger \" *ngIf=\"cpPassword.invalid && cpPassword.touched && (newPassword !== cpPassword)\">Confirm Password should be match the new password</span> -->\n                <span class=\"help-block text-danger \" *ngIf=\"cpPassword.touched && (newPassword != cpPassword)\">New password and Confirm password should be same</span>\n            </div>\n            <!-- Confirm Password form Field Close-->\n            <div class=\"submit-btn mb-2 text-right \">\n                <button [disabled]=\"!formData.valid\" type=\"submit\" class=\"btn btn-primary btn-sm text-size-13\">Save Changes</button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../../shared/services/global.service';\n\n@Component({\n  selector: 'app-change-leverage',\n  templateUrl: './change-leverage.component.html',\n  styleUrls: ['./change-leverage.component.scss']\n})\nexport class ChangeLeverageComponent implements OnInit {\n  title: string;\n  changeLeverage = '-1';\n  leverageList: any;\n  @Input() accountDetail: any;\n  closeBtnName: string;\n  list: any[] = [];\n  isFirstOpen = true;\n  oneAtATime = true;\n  submitted = false;\n  ErrorMsqBlock = false;\n  successMsqBlock = false;\n  messageToDisplay: string;\n  @ViewChild('formData', {static: false}) chnageInvestorPasswordForm: NgForm;\n  constructor( public global: GlobalService) { }\n\n  ngOnInit(): void {\n    console.log(this.accountDetail);\n    this.checkLeverage();\n  }\n  checkLeverage() {\n    const params = {\n      PackageId: 1000\n    };\n    this.global.getLeverage(params).subscribe(data => {\n      this.leverageList = data;\n    });\n  }\n  onChangeLeverage() {\n    const params = {\n      Account: this.accountDetail.MT4Account,\n      Leverage: this.changeLeverage,\n      ManagerIndex: this.accountDetail.ManagerIndex\n    };\n    this.global.spin(true);\n    this.global.changeLev(params).subscribe(data => {\n      console.log(data);\n      if (data.Result === true) {\n        this.successMsqBlock = true;\n        this.messageToDisplay = 'Leverage Changed Successfully!';\n      } else {\n        this.ErrorMsqBlock = true;\n        this.messageToDisplay = 'Failed to change Leverage!';\n      }\n    });\n    setTimeout(() => {\n      this.ErrorMsqBlock = false;\n      this.successMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <!-- Success Message After Submit section start -->\n        <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n            {{messageToDisplay}}\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            </button>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n            {{messageToDisplay}}\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            </button>\n        </div>\n        <form (ngSubmit)=\" onChangeLeverage()\" #formData=\"ngForm\">\n            <!-- Change Leverage form Field Start-->\n            <div class=\"form-group position-relative \">\n                <label class=\"text-size-15 font-weight-400 \" for=\"New password \">Change Leverage</label>\n                <span class=\"asterick\">*</span>\n                <select class=\"form-control\" [(ngModel)]=\"changeLeverage\" name=\"leverageList\">\n                    <option value='-1'>Select Leverage</option>\n                    <option [value]=\"x\" *ngFor=\"let x of leverageList\">1:{{x}}</option>\n                  </select>\n            </div>\n            <div class=\"submit-btn mb-2 text-right \">\n                <button [disabled]=\"!formData.valid\" type=\"submit\" class=\"btn btn-primary btn-sm text-size-13\">Save Changes</button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { GlobalService } from './../../../../../../../shared/services/global.service';\n\n@Component({\n  selector: 'app-change-master-password',\n  templateUrl: './change-master-password.component.html',\n  styleUrls: ['./change-master-password.component.scss']\n})\nexport class ChangeMasterPasswordComponent implements OnInit {\n  title: string;\n  @Input() accountDetail: any;\n  // accountDetails: any;\n  closeBtnName: string;\n  list: any[] = [];\n  isFirstOpen = true;\n  oneAtATime = true;\n  submitted = false;\n  ErrorMsq = false;\n  successMsq = false;\n  messageToDisplay: string;\n  isPasswordLengthOk = true;\n  isPasswordPatterenOK: boolean;\n  @ViewChild('cmpFormData', {static: false}) chnageMasterPasswordForm: NgForm;\n  @ViewChild('cipFormData', {static: false}) chnageInvestorPasswordForm: NgForm;\n  constructor( public global: GlobalService) { }\n\n  ngOnInit(): void {\n    // console.log(this.accountDetail);\n  }\n  onKeydown(event: any) {\n   this.isPasswordLengthOk = true;\n   this.isPasswordPatterenOK = true;\n  }\n  onblur(value) {\n    if (value.length >= 6) {\n      this.isPasswordLengthOk = true;\n    } else {\n      this.isPasswordLengthOk = false;\n    }\n  }\n  onChangeMasterPassword() {\n    const newMPassword = this.chnageMasterPasswordForm.value.newPassword;\n    const ConfirmMPassword = this.chnageMasterPasswordForm.value.cpPassword;\n    if ( newMPassword !== ConfirmMPassword) {\n      this.ErrorMsq = true;\n      this.messageToDisplay = 'Confirm Password Not Matched...';\n    } else {\n      const params = {\n        Account: this.accountDetail.MT4Account,\n        password: newMPassword,\n        ManagerIndex: this.accountDetail.uManager\n      };\n      this.global.changeMasterPassword(params).subscribe(data => {\n        if (data.ERR_DEV === null && data.MSG_USER === null) {\n          this.successMsq = true;\n          this.messageToDisplay = 'Master Password has been changed successfully';\n        } else {\n          this.ErrorMsq = true;\n          this.messageToDisplay = 'Failed to update the Master Password';\n        }\n      });\n    }\n    setTimeout(() => {\n      this.ErrorMsq = false;\n      this.successMsq = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <!-- Success Message After Submit section start -->\n        <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsq\">\n            {{messageToDisplay}}\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            </button>\n        </div>\n        <!-- Error Message After Submit section start -->\n        <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsq\">\n            {{messageToDisplay}}\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            </button>\n        </div>\n        <!--Form Area :  Master password change -->\n        <form class=\"\" (ngSubmit)=\" onChangeMasterPassword()\" #cmpFormData=\"ngForm\">\n            <!-- Password form Field Start-->\n            <div class=\"form-group position-relative \">\n                <label class=\"text-size-13\" for=\"New password \">New Password</label>\n                <span class=\"asterick\">*</span>\n                <!-- <input required pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\" ngModel #nMasterPassword=\"ngModel\" name=\"newPassword\" type=\"password\" class=\"form-control main-txt-color bg-f bd-color \" id=\"nmPassword \" placeholder=\"Enter New your password\"> -->\n                <input required (keydown)=\"onKeydown($event)\" (blur)=\"onblur(nMasterPassword.value)\" ngModel #nMasterPassword=\"ngModel\" name=\"newPassword\" type=\"password\" class=\"form-control main-txt-color bg-f bd-color \" id=\"nmPassword \" placeholder=\"Enter new password\">\n                <div>\n                    <!-- <div class=\"help-block text-danger\" *ngIf=\"nMasterPassword.errors?.required && nMasterPassword.touched && !nMasterPassword.dirty \">Password Field can not be blank</div>\n                    <div class=\"help-block text-danger\" *ngIf=\"nMasterPassword.invalid && nMasterPassword.dirty && nMasterPassword.errors?.pattern\">Please enter a valid password, Password must be at least 8 characters long.</div> -->\n                    <!-- <div class=\"help-block text-danger\" *ngIf=\"!nMasterPassword.valid && nMasterPassword.touched\">Password Field can not be blank</div> -->\n                    <div class=\"help-block text-danger\" *ngIf=\"!isPasswordLengthOk && nMasterPassword.touched\">Password must be at least 6 characters</div>\n                    <!-- <div class=\"help-block text-danger\" *ngIf=\"nMasterPassword.invalid && nMasterPassword.dirty && nMasterPassword.errors?.pattern\">Please enter a valid password, Password must be at least 8 characters long.</div> -->\n                </div>\n            </div>\n            <!-- Password form Field Close-->\n            <!-- Confirm Password form Field Start-->\n            <div class=\"form-group position-relative \">\n                <label class=\"text-size-13\" for=\"cpassword \">Confirm Password</label>\n                <span class=\"asterick\">*</span>\n                <input ngModel required #cMasterPassword=\"ngModel\" name=\"cpPassword\" type=\"password\" class=\"form-control main-txt-color bg-f bd-color \" id=\"cmPassword \" placeholder=\"Enter confirm password\">\n                <span class=\"help-block text-danger \" *ngIf=\"cMasterPassword.touched && (nMasterPassword != cMasterPassword)\">New password and Confirm password should be same</span>\n            </div>\n            <!-- Confirm Password form Field Close-->\n            <div class=\"submit-btn mb-2 text-right \">\n                <button [disabled]=\"!cmpFormData.valid\" type=\"submit\" class=\"btn btn-primary btn-sm text-size-13\">Save Changes</button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-demo-account-overview',\n  templateUrl: './demo-account-overview.component.html',\n  styleUrls: ['./demo-account-overview.component.scss']\n})\nexport class DemoAccountOverviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tab-inner-content\">\n    <div class=\"table-filter-area\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-md-4 form-inline d-none d-md-block\">\n                <div class=\"form-group mb-2\">\n                    <label for=\"entries\" class=\" main-txt-color mr-1\">Show </label>\n                    <select class=\"form-control main-txt-color bd-color shadow-none\" id=\"entries\">\n                        <option>5</option>\n                        <option selected>10</option>\n                        <option>15</option>\n                        <option>20</option>\n                        <option>25</option>\n                        <option>50</option>\n                    </select>\n                    <label for=\"entries\" class=\" main-txt-color ml-1\"> Entries</label>\n                </div>\n            </div>\n            <div class=\"col-md-3 offset-md-5\">\n                <div class=\"form-group\">\n                    <!-- <label class=\"main-txt-color\" for=\"searchtext\">Search</label> -->\n                    <input type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"\" placeholder=\"Enter keyword to search\" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"table-container table-responsive mb-3\">\n        <table class=\"table table-hover main-txt-color mb-0 border-0\">\n            <thead class=\"table-header-bg table-header-color\">\n                <tr>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Account</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Name</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Phone Number</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Balance</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Credit</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Equity</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Plan</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Leverage</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Margin</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle\">Free Margin</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Action</th>\n                </tr>\n            </thead>\n\n            <tbody class=\"secondary-txt-color\">\n                <tr>\n                    <td colspan=\"11\" class=\"bd-color font-weight-400\">\n                        You dont have a demo account\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n    </div>\n</div>","import { NotificationService } from './../../../../../../shared/services/notification.service';\nimport { GlobalService } from './../../../../../../shared/services/global.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { AccountsSettingsModelsComponent } from './../accounts-settings-models/accounts-settings-models.component';\n@Component({\n  selector: 'app-live-account-overview',\n  templateUrl: './live-account-overview.component.html',\n  styleUrls: ['./live-account-overview.component.scss']\n})\nexport class LiveAccountOverviewComponent implements OnInit, OnDestroy {\n\n  liveAccountData: any[] = [];\n  LoggedParams: any;\n  accountSnapSubscription: Subscription;\n\n  // pagination Setting\n  public TotalCount = 0;\n  searchText: any; // Search Text property is used to filter text in table\n  p: any;          // Current page in pagination\n  pageSize = 10;  // Table Rows Perpage property\n  sortedLiveAccountData: any[]; // Sorted Product list array\n  order = '';     // Order property to sort coloum of table\n  reverse = true; // Reverse property is used to sort table coloum\n\n  // Model For AccounsSettingsModels Components\n  bsModalRef: BsModalRef;\n  constructor(\n    private global: GlobalService,\n    private orderPipe: OrderPipe,\n    private modalService: BsModalService,\n    private notificationService: NotificationService\n    ) {\n    this.LoggedParams = JSON.parse(localStorage.getItem('LoggedUser'));\n    // To save value inside sortedProductList\n    this.sortedLiveAccountData = orderPipe.transform(this.liveAccountData, this.order);\n    this.getAccounts();\n  }\n  setOrder(value: string) {\n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n    this.order = value;\n  }\n  onChangePageSize(value) {\n    this.pageSize = value;\n    this.p = 1;\n  }\n  ngOnInit(): void {\n  }\n  getAccounts() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n      LoginId: this.LoggedParams.sProfile.sMasterId\n    };\n    this.accountSnapSubscription = this.global.GET_PROFILE_ACCOUNTS(params).subscribe(\n      data => {\n        this.liveAccountData = data.lstAccount.map( acc => {\n          if (acc) {\n            return Object.assign(acc.sUserInfo, acc.sAccountPlan);\n          }\n        });\n      }, err => {\n        console.log(err);\n        this.notificationService.showError('Failed to get Data!', 'Error');\n      }\n    );\n  }\n  ngOnDestroy() {\n    this.accountSnapSubscription.unsubscribe();\n  }\n\n  // Pass Selected Account details to Models Component - AccountsSettingsModelsComponent\n  accountSettingsModel(selectedItem: any) {\n    // alert(accountNumber);\n    const initialState = {\n      title: 'Account Settings',\n      accountDetails: selectedItem,\n    };\n    this.bsModalRef = this.modalService.show(AccountsSettingsModelsComponent, {initialState});\n    this.bsModalRef.content.closeBtnName = 'Close';\n  }\n\n}\n\n","<div class=\"tab-inner-content\">\n    <div class=\"table-filter-area\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-md-4 form-inline d-none d-md-block\">\n                <div class=\"form-group mb-2\">\n                    <label for=\"entries\" class=\" main-txt-color mr-1\">Show </label>\n                    <select (change)=\"onChangePageSize($event.target.value)\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"entries\">\n                        <option>5</option>\n                        <option selected>10</option>\n                        <option>15</option>\n                        <option>20</option>\n                        <option>25</option>\n                        <option>50</option>\n                    </select>\n                    <label for=\"entries\" class=\" main-txt-color ml-1\"> Entries</label>\n                </div>\n            </div>\n            <div class=\"col-md-3 offset-md-5\">\n                <div class=\"form-group\">\n                    <!-- <label class=\"main-txt-color\" for=\"searchtext\">Search</label> -->\n                    <input [(ngModel)]=\"searchText\" type=\"text\" class=\"form-control main-txt-color bd-color shadow-none\" id=\"\" placeholder=\"Enter keyword to search\" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"table-container table-responsive  table-responsive table-responsive-sm  mb-3\">\n        <table class=\"table table-hover main-txt-color mb-0\">\n            <thead class=\"table-header-bg table-header-color\">\n                <tr>\n                    <th [class.active]=\"order === 'MT4Account' \" (click)=\"setOrder('MT4Account')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Account</th>\n                    <th [class.active]=\"order === 'Name' \" (click)=\"setOrder('Name')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Name</th>\n                    <!-- <th [class.active]=\"order === 'EmailID' \" (click)=\"setOrder('EmailID')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Email ID</th> -->\n                    <th [class.active]=\"order === 'Phone' \" (click)=\"setOrder('Phone')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Phone number</th>\n                    <th [class.active]=\"order === 'Balance' \" (click)=\"setOrder('Balance')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Balance</th>\n                    <th [class.active]=\"order === 'Credit' \" (click)=\"setOrder('Credit')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Credit</th>\n                    <th [class.active]=\"order === 'Equity' \" (click)=\"setOrder('Equity')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Equity</th>\n                    <th [class.active]=\"order === 'Plan' \" (click)=\"setOrder('uAccount_Name')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Plan</th>\n                    <th [class.active]=\"order === 'Leverage' \" (click)=\"setOrder('Leverage')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Leverage</th>\n                    <th [class.active]=\"order === 'Margin' \" (click)=\"setOrder('Margin')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Margin</th>\n                    <th [class.active]=\"order === 'Marginfree' \" (click)=\"setOrder('Marginfree')\" class=\"font-weight-500 bd-color text-capitalize align-middle\">Free Margin</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center\">Action</th>\n                </tr>\n            </thead>\n\n            <tbody class=\"secondary-txt-color\">\n                <tr *ngFor=\"let item of liveAccountData | orderBy:order:reverse | filter:searchText | paginate: { itemsPerPage: pageSize, currentPage: p,  totalItems: TotalCount}; let i = index \">\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.MT4Account}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.First}}</td>\n                    <!-- <td class=\"bd-color  text-capitalize font-weight-400\">{{item.EmailID}}</td> -->\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.Phone}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.Balance}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.Credit}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.Equity}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.uAccount_Name}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">1:{{item.Leverage}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.Margin}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400\">{{item.Marginfree}}</td>\n                    <td class=\"bd-color  text-capitalize font-weight-400 text-center\">\n                        <i-feather class=\"icon-size-18 primary-icons-color cursor-pointer\" name=\"settings\" (click)=\"accountSettingsModel(item)\"></i-feather>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"table-pagination text-right pt-4\">\n        <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-client-accounts-core',\n  templateUrl: './client-accounts-core.component.html',\n  styleUrls: ['./client-accounts-core.component.scss']\n})\nexport class ClientAccountsCoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","// tslint:disable-next-line: max-line-length\nimport { DemoAccountOverviewComponent } from './client-accounts-core/accounts-overview/demo-account-overview/demo-account-overview.component';\n// tslint:disable-next-line: max-line-length\nimport { LiveAccountOverviewComponent } from './client-accounts-core/accounts-overview/live-account-overview/live-account-overview.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientAccountsCoreComponent } from './client-accounts-core/client-accounts-core.component';\nimport { AccountsOverviewComponent } from './client-accounts-core/accounts-overview/accounts-overview.component';\nimport { AccountsManagementComponent } from './client-accounts-core/accounts-management/accounts-management.component';\nimport { LiveAccountConfigurationComponent\n} from './client-accounts-core/accounts-management/live-account-configuration/live-account-configuration.component';\nimport { OpenLiveAccountComponent } from './client-accounts-core/accounts-management/open-live-account/open-live-account.component';\nimport { OpenDemoAccountComponent } from './client-accounts-core/accounts-management/open-demo-account/open-demo-account.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientAccountsCoreComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'overview'\n      },\n      {\n        path: 'management',\n        component: AccountsManagementComponent,\n        data: {breadcrumb: 'Accounts Management'},\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'live-account-configuration'\n          },\n          {\n            path: 'live-account-configuration',\n            component: LiveAccountConfigurationComponent,\n            data: {title: 'Accounts Management', breadcrumb: 'Configure Account'}\n          },\n          {\n            path: 'open-live-account',\n            component: OpenLiveAccountComponent,\n            data: {title: 'Accounts Management', breadcrumb: 'Open Live Account'}\n          },\n          {\n            path: 'open-demo-account',\n            component: OpenDemoAccountComponent,\n            data: {title: 'Accounts Management', breadcrumb: 'Open Demo Account'}\n          },\n        ]\n      },\n      {\n        path: 'overview',\n        component: AccountsOverviewComponent,\n        data: {breadcrumb: 'Accounts Overview'},\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'live-account'\n          },\n          {\n            path: 'live-account',\n            component: LiveAccountOverviewComponent,\n            data: {title: 'Accounts Overview',\n            breadcrumb: 'Live Account'}\n          },\n          {\n            path: 'demo-account',\n            component: DemoAccountOverviewComponent,\n            data: {title: 'Accounts Overview',\n            breadcrumb: 'Demo Account'}\n          },\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientAccountsRoutingModule { }\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from './../../../shared/shared.module';\n\nimport { ClientAccountsRoutingModule } from './client-accounts-routing.module';\nimport { ClientAccountsCoreComponent } from './client-accounts-core/client-accounts-core.component';\nimport { AccountsOverviewComponent } from './client-accounts-core/accounts-overview/accounts-overview.component';\nimport { AccountsManagementComponent } from './client-accounts-core/accounts-management/accounts-management.component';\nimport { LiveAccountConfigurationComponent\n} from './client-accounts-core/accounts-management/live-account-configuration/live-account-configuration.component';\nimport { OpenLiveAccountComponent } from './client-accounts-core/accounts-management/open-live-account/open-live-account.component';\nimport { OpenDemoAccountComponent } from './client-accounts-core/accounts-management/open-demo-account/open-demo-account.component';\n\n\n// tslint:disable-next-line: max-line-length\nimport { LiveAccountOverviewComponent } from './client-accounts-core/accounts-overview/live-account-overview/live-account-overview.component';\n// tslint:disable-next-line: max-line-length\nimport { DemoAccountOverviewComponent } from './client-accounts-core/accounts-overview/demo-account-overview/demo-account-overview.component';\n// tslint:disable-next-line: max-line-length\nimport { AccountsSettingsModelsComponent } from './client-accounts-core/accounts-overview/accounts-settings-models/accounts-settings-models.component';\n// tslint:disable-next-line: max-line-length\nimport { ChangeMasterPasswordComponent } from './client-accounts-core/accounts-overview/accounts-settings-models/change-master-password/change-master-password.component';\n// tslint:disable-next-line: max-line-length\nimport { ChangeInvestorPasswordComponent } from './client-accounts-core/accounts-overview/accounts-settings-models/change-investor-password/change-investor-password.component';\n// tslint:disable-next-line: max-line-length\nimport { ChangeLeverageComponent } from './client-accounts-core/accounts-overview/accounts-settings-models/change-leverage/change-leverage.component';\n \n\n@NgModule({\n  declarations: [\n    ClientAccountsCoreComponent,\n    AccountsOverviewComponent,\n    AccountsManagementComponent,\n    LiveAccountConfigurationComponent,\n    OpenLiveAccountComponent,\n    OpenDemoAccountComponent,\n    LiveAccountOverviewComponent,\n    DemoAccountOverviewComponent,\n    AccountsSettingsModelsComponent,\n    ChangeMasterPasswordComponent,\n    ChangeInvestorPasswordComponent,\n    ChangeLeverageComponent,\n  ],\n  entryComponents: [\n    AccountsSettingsModelsComponent\n  ],\n  imports: [\n    CommonModule,\n    ClientAccountsRoutingModule,\n    SharedModule,\n  ]\n})\nexport class ClientAccountsModule { }\n","export class AccountVerificationModalData {\r\n    Account: string | undefined | null;\r\n    Password: string | undefined | null;\r\n    ManagerIndex: string | undefined | null;\r\n\r\n   constructor() {\r\n    this.Account = '';\r\n    this.Password = '';\r\n    this.ManagerIndex = '';\r\n   }\r\n}\r\n"," export class DemoAccountModalData{\r\n    Plan: string | undefined | null;\r\n    Amount: string | undefined | null;\r\n    password: string | undefined | null;\r\n    confirm_password: string | undefined | null;\r\n    \r\n   constructor(){\r\n    this.Plan = '';\r\n    this.Amount = '';\r\n    this.password = '';\r\n    this.confirm_password = '';\r\n   }\r\n}","export class LiveAccountModalData{\r\n    Plan: string | undefined | null;\r\n    Leverage :  string | undefined | null;\r\n    IB_Code:  string | undefined | null;\r\n    \r\n   constructor(){\r\n    this.Plan = '';\r\n    this.Leverage = '';\r\n    this.IB_Code = '';\r\n   }\r\n}"],"sourceRoot":"webpack:///"}