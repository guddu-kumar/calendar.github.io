{"version":3,"sources":["webpack:///src/app/pages/client-core/risk-manager/risk-manager-core/equity-drawdown/equity-drawdown.component.ts","webpack:///src/app/pages/client-core/risk-manager/risk-manager-core/equity-drawdown/equity-drawdown.component.html","webpack:///src/app/pages/client-core/risk-manager/risk-manager-core/profit-loss/profit-loss.component.ts","webpack:///src/app/pages/client-core/risk-manager/risk-manager-core/profit-loss/profit-loss.component.html","webpack:///src/app/pages/client-core/risk-manager/risk-manager-core/risk-manager-core.component.ts","webpack:///src/app/pages/client-core/risk-manager/risk-manager-core/risk-manager-core.component.html","webpack:///src/app/pages/client-core/risk-manager/risk-manager-core/symbol-drawdown/symbol-drawdown.component.ts","webpack:///src/app/pages/client-core/risk-manager/risk-manager-core/symbol-drawdown/symbol-drawdown.component.html","webpack:///src/app/pages/client-core/risk-manager/risk-manager-routing.module.ts","webpack:///src/app/pages/client-core/risk-manager/risk-manager.module.ts"],"names":["EquityDrawdownComponent","headerService","globalService","orderPipe","notificationService","isVisibleFormArea","actionOnPosition","isLoading","liveAccountData","stopLossOrderData","isDirectionSelected","defaultPushMail","defaultDisableTrade","defaultLimitType","IsDataNotFound","ErrorMsqBlock","successMsqBlock","TotalCount","pageSize","order","reverse","isOpenDatePicker","currentDate","Date","form","dateYMD","dateFull","dateMDY","dateRange","setDate","getDate","minDate","maxDate","subscription1","castLoggedUserDetail","subscribe","resData","LoggedParams","datepicker","hide","value","getProfileAccounts","getStopLossOrderData","cat","indexval","countVal","p","setParams","Profile","sProfile","sMasterId","Index","Count","console","log","subscription3","getRiskEquity","data","lstEquityDD","params","ProfileId","LoginId","subscription2","GET_PROFILE_ACCOUNTS","lstAccount","map","acc","Object","assign","sUserInfo","sAccountPlan","stopLossOrderForm","reset","RiskId","toString","Account","accountnumber","Value","targetLimit","sValue","oPerc_Value","limitType","oUP_DOWN","direction","oAction","oAlert_Mail","pushEmail","oAlert_Disable_Trade","disableTrade","oTimestamp","sCreadedOn","sUpdatedOn","sCreadedOn_Str","sUpdatedOn_Str","oExpiry","expiryTime","addRiskEquity","Result","resetForm","showSuccess","showError","selectedItem","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","then","result","deleteRiskEquity","setTimeout","messageToDisplay","msq","unsubscribe","toggleFormArea","setOrder","selector","templateUrl","styleUrls","static","ProfitLossComponent","getRiskPL","addRiskPL","deleteRiskPL","RiskManagerCoreComponent","SymbolDrawdownComponent","symbolsList","getRiskSymb","Symbol","symbol","addRiskSymb","deleteRiskSymb","routes","path","component","children","pathMatch","redirectTo","breadcrumb","RiskManagerRoutingModule","forChild","imports","exports","RiskManagerModule","forRoot","declarations"],"mappings":"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","file":"client-core-risk-manager-risk-manager-module-es5.js","sourcesContent":["import { NotificationService } from './../../../../../shared/services/notification.service';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { GlobalService } from './../../../../../shared/services/global.service';\nimport { HeaderService } from './../../../../../shared/services/header.service';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, ViewChild, HostListener, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup, NgForm } from '@angular/forms';\nimport { BsDatepickerDirective } from 'ngx-bootstrap';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-equity-drawdown',\n  templateUrl: './equity-drawdown.component.html',\n  styleUrls: ['./equity-drawdown.component.scss']\n})\nexport class EquityDrawdownComponent implements OnInit, OnDestroy {\n  public isVisibleFormArea = false;\n  public actionOnPosition: number[] = [0, 1, 2];\n  public LoggedParams: any;\n  public isLoading = false;\n  public liveAccountData: any[] = [];\n  public stopLossOrderData: any[] = [];\n  public subscription1: Subscription;\n  public subscription2: Subscription;\n  public subscription3: Subscription;\n  public direction: number;\n  public isDirectionSelected = false;\n  public defaultPushMail = false;\n  public defaultDisableTrade = false;\n  public defaultLimitType = 0;\n  public IsDataNotFound = false;\n// Display Message Property\n  messageToDisplay: string;\n  ErrorMsqBlock = false;\n  successMsqBlock = false;\n\n   // pagination Setting\n  public TotalCount = 0;\n  public cat;\n  public searchText: any; // Search Text property is used to filter text in table\n  public p: any;          // Current page in pagination\n  public pageSize = 5;  // Table Rows Perpage property\n  public sortedData: any[]; // Sorted Product list array\n  public order = '';     // Order property to sort coloum of table\n  public reverse = true; // Reverse property is used to sort table coloum\n  public setParams: any;\n  @ViewChild('formData', {static: false}) stopLossOrderForm: NgForm;\n  isOpenDatePicker = false;\n  currentDate = new Date();\n  minDate: Date;\n  maxDate: Date;\n  @ViewChild(BsDatepickerDirective, { static: false }) datepicker: BsDatepickerDirective;\n\n  form = new FormGroup({\n    dateYMD: new FormControl(new Date()),\n    dateFull: new FormControl(new Date()),\n    dateMDY: new FormControl(new Date()),\n    dateRange: new FormControl([\n      new Date(),\n      new Date(this.currentDate.setDate(this.currentDate.getDate() + 7))\n    ])\n  });\n\n  constructor(\n    private headerService: HeaderService,\n    private globalService: GlobalService,\n    private orderPipe: OrderPipe,\n    private notificationService: NotificationService\n  ) {\n    this.minDate = new Date();\n    this.maxDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 0);\n    this.maxDate.setDate(this.maxDate.getDate() + 2);\n\n    this.subscription1 = this.headerService.castLoggedUserDetail.subscribe(\n      resData => (this.LoggedParams = resData)\n    );\n  }\n  toggleFormArea() {\n    this.isVisibleFormArea = !this.isVisibleFormArea;\n  }\n  @HostListener('window:scroll')\n  onScrollEvent() {\n    this.datepicker.hide();\n  }\n  setOrder(value: string) {\n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n    this.order = value;\n  }\n  ngOnInit(): void {\n    this.getProfileAccounts();\n    this.getStopLossOrderData(1, this.cat);\n  }\n  getStopLossOrderData(indexval, countVal) {\n      this.isLoading = true;\n      if (countVal) {\n        this.pageSize = indexval;\n        this.p = 1;\n        this.setParams = {\n          Profile: this.LoggedParams.sProfile.sMasterId,\n          Index: this.p,\n          Count: this.pageSize\n        };\n      } else {\n        this.p = indexval;\n        this.setParams = {\n          Profile: this.LoggedParams.sProfile.sMasterId,\n          Index:  (this.p - 1) * this.pageSize + 1,\n          Count: this.p * this.pageSize\n        };\n      }\n      console.log(this.LoggedParams.sProfile.sMasterId);\n      this.subscription3 = this.globalService.getRiskEquity(this.setParams).subscribe(\n        data => {\n          if (data.Count > 0) {\n            this.TotalCount = data.Count;\n            this.stopLossOrderData = data.lstEquityDD;\n            this.isLoading = false;\n            this.IsDataNotFound = false;\n          } else {\n            this.IsDataNotFound = true;\n            this.isLoading = false;\n          }\n        }\n      );\n    }\n\n  getProfileAccounts() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n      LoginId: this.LoggedParams.sProfile.sMasterId\n    };\n    this.subscription2 = this.globalService.GET_PROFILE_ACCOUNTS(params).subscribe(\n      data => {\n        this.liveAccountData = data.lstAccount.map( acc => {\n          if (acc) {\n            return Object.assign(acc.sUserInfo, acc.sAccountPlan);\n          }\n        });\n      }\n    );\n  }\n  resetForm() {\n    this.stopLossOrderForm.reset();\n    this.isDirectionSelected = false;\n    // this.stopLossOrderForm.value.limitType = 0;\n    // this.stopLossOrderForm.form.value.limitType = 0;\n    // this.defaultLimitType = 0;\n  }\n  onSubmit() {\n    // alert(this.stopLossOrderForm.value.expiryTime);\n    this.isLoading = true;\n    const params = {\n      RiskId: 0,\n      Profile: this.LoggedParams.sProfile.sMasterId.toString(),\n      Account: this.stopLossOrderForm.value.accountnumber.toString(),\n      Value: this.stopLossOrderForm.value.targetLimit.toString(),\n      sValue: 0,\n      oPerc_Value: this.stopLossOrderForm.value.limitType,\n      oUP_DOWN: this.direction,\n      oAction: this.stopLossOrderForm.value.actionOnPosition,\n      oAlert_Mail: (this.stopLossOrderForm.value.pushEmail === false) ? 0 : 1,\n      oAlert_Disable_Trade: (this.stopLossOrderForm.value.disableTrade === false ) ? 0 : 1,\n      oTimestamp: {\n        sCreadedOn: 0,\n        sUpdatedOn: 0,\n        sCreadedOn_Str: new Date(),\n        sUpdatedOn_Str: new Date(),\n      },\n      oExpiry: {\n        sCreadedOn: 0,\n        sUpdatedOn: 0,\n        sCreadedOn_Str: this.stopLossOrderForm.value.expiryTime,\n        sUpdatedOn_Str: 0,\n      }\n    };\n    this.globalService.addRiskEquity(params).subscribe(\n      data => {\n        if (data.Result !== -1) {\n          // console.log(data);\n          this.getStopLossOrderData(1, this.cat);\n          this.resetForm();\n          // this.onSuccessMsqDisplay('Equity DD alert added successfully');\n          this.notificationService.showSuccess('Equity drawdown alert added successfully', 'Success');\n          // this.autoCloseMsqBlock();\n          this.isLoading = false;\n          // this.isVisibleFormArea = false;\n        } else {\n          // this.onErrorMsqDisplay('Failed to add equity DD');\n          this.notificationService.showError('Failed to add equity drawdown alert', 'Error');\n          this.isLoading = false;\n          // this.autoCloseMsqBlock();\n        }\n      }\n    );\n\n  }\n  onSelectDirection(direction: number) {\n    this.direction = direction;\n    this.isDirectionSelected = true;\n  }\n\n  onDelete(selectedItem) {\n    Swal.fire({\n      title: 'Are you Sure!',\n      text: 'Are you sure to delete this drawdown alert?',\n      icon: 'error',\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      cancelButtonText: 'Cancel',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n        const params = {\n          RiskId: selectedItem.RiskId,\n        };\n        console.log(params);\n        this.globalService.deleteRiskEquity(params).subscribe(data => {\n          if (data.Result === true) {\n            this.getStopLossOrderData(1, this.cat);\n            Swal.fire(\n              'Deleted!',\n              'Your drawdown alert has been deleted.',\n              'success'\n            );\n          }\n        });\n      }\n    });\n  }\n  autoCloseMsqBlock() {\n    setTimeout(() => {\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n  onCloseMsqBlock() {\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = false;\n    this.messageToDisplay = '';\n  }\n  onSuccessMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.ErrorMsqBlock = false;\n    this.successMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  onErrorMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  ngOnDestroy() {\n    this.subscription1.unsubscribe();\n    this.subscription2.unsubscribe();\n    this.subscription3.unsubscribe();\n  }\n\n}\n","<div class=\"right-tabBtn-row d-none d-sm-block d-md-block d-lg-block\">\n    <button class=\"btn btn-warning btn-sm font-weight-400 text-size-13\" (click)=\"toggleFormArea()\">\n        <i-feather class=\"icon-size-18\" name=\"dollar-sign\"></i-feather>Create New Drawdown\n    </button>\n</div>\n<div *ngIf=\"isVisibleFormArea\" class=\"stoploss-form-container\">\n    <div class=\"stoploss-from-box bg-b\">\n        <form class=\"\" (ngSubmit)=\"onSubmit()\" #formData=\"ngForm\">\n            <!-- Success Message After Submit section start -->\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n                        <strong>Success -: </strong>{{messageToDisplay}}\n                        <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                    </div>\n                </div>\n            </div>\n            <!-- Error Message After Submit section start -->\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n                        <strong>Oops... : </strong>{{messageToDisplay}}\n                        <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-5\">\n                    <div class=\"form-box pt-2\">\n                        <div class=\"row no-gutters\">\n                            <div class=\"col-md-12\">\n                                <div class=\"form-group\">\n                                    <label class=\"main-txt-color\" for=\"accountnumber\">Account Number</label>\n                                    <span class=\"asterick\">*</span>\n                                    <select required ngModel #accountnumber=\"ngModel\" name=\"accountnumber\" class=\"form-control shadow-none\" id=\"accountnumber\">\n                                        <option class=\"text-size-13\" value=\"\" [disabled]=\"true\" >Select Account Number</option>\n                                        <option class=\"text-size-13\" *ngFor=\"let acc of liveAccountData\" name=\"accounts\" [ngValue]=\"acc.MT4Account\">{{acc.MT4Account}}</option>\n                                    </select>\n                                    <span class=\"help-block text-danger \" *ngIf=\"!accountnumber.valid && accountnumber.touched  \">Please select an account Number</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-7\">\n                                <label class=\"main-txt-color\" for=\"targetLimit\">Target Limit</label>\n                                <span class=\"asterick\">*</span>\n                                <div class=\"input-group target-limit\">\n                                    <input required ngModel #targetLimit=\"ngModel\" min=\"1\" name=\"targetLimit\" id=\"targetLimit\" type=\"number\" class=\"form-control shadow-none rounded-right-0\" placeholder=\"0\">\n                                    <div class=\"input-group-append\" id=\"button-addon4\">\n                                        <select required [(ngModel)]=\"defaultLimitType\" #limitType=\"ngModel\" name=\"limitType\" id=\"limitType\" class=\"form-control shadow-none limit-type rounded-left-0\" style=\"width: 60px; height:34px\">\n                                            <option value='0' selected>%</option>\n                                            <option value='1'>$</option> \n                                        </select>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <div class=\"col-md-5\">\n                                <div class=\"direction-btn text-right\">\n                                    <label class=\"main-txt-color\" for=\"selectAccount\">Equity Direction</label>\n                                    <span class=\"asterick\">*</span>\n                                    <div class=\"btn-group\" role=\"group\">\n                                        <button (click)=\"onSelectDirection(0)\" type=\"button\" [ngClass]=\"(direction === 0 && isDirectionSelected)?'btn-success':'btn-outline-success'\" class=\"btn shadow-none\"><i-feather class=\"icon-size-20\" name=\"chevrons-up\"></i-feather>UP</button>\n                                        <button (click)=\"onSelectDirection(1)\" type=\"button\" [ngClass]=\"(direction === 1 && isDirectionSelected)?'btn-danger':'btn-outline-danger'\" class=\"btn shadow-none\"><i-feather class=\"icon-size-20\" name=\"chevrons-down\"></i-feather>Down</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-7\">\n                                <div class=\"form-group expirydate-area mt-3\">\n                                    <label class=\"main-txt-color\" for=\"selectAccount\">Expiry Date</label>\n                                    <span class=\"asterick\">*</span>\n                                    <input autocomplete=\"off\" required ngModel #expiryTime=\"ngModel\" type=\"text\" id=\"expiryTime\" name=\"expiryTime\" class=\"form-control shadow-none rounded-right-0\" placeholder=\"Select Expiry Date\" #dp=\"bsDatepicker\" bsDatepicker [isOpen]=\"isOpenDatePicker\"\n                                        [minDate]=\"minDate\" [maxDate]=\"maxDate\" [bsConfig]=\"{ dateInputFormat: 'MM/DD/YYYY '}\">\n                                    <span (click)=\"isOpenDatePicker = !isOpenDatePicker\" class=\"datePickerIcon\"><i-feather class=\"icon-size-20\" name=\"calendar\"></i-feather></span>\n                                </div>\n                            </div>\n                            <div class=\"col-md-5\">\n                                <div class=\"mt-3\">\n                                    <label class=\"main-txt-color\" for=\"selectAccount\">&nbsp;</label>\n                                    <div class=\"text-right\">\n                                        <button [disabled]=\"(!formData.valid || isDirectionSelected === false || isLoading)\" class=\"btn btn-primary btn-sm px-4 position-relative\">\n                                    <span [class.btn-spinner]=\"isLoading\"></span>Submit</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"action-area rounded\">\n                        <div class=\"title-area border-bottom bd-color\">\n                            <h5 class=\"title\">Required Action</h5>\n                            <small>You need to perform At least one Action</small>\n                        </div>\n                        <div class=\"body-area\">\n                            <div class=\"custom-control custom-radio\" *ngFor=\"let action of actionOnPosition\">\n                                <input required ngModel #actionOnPosition=\"ngModel\" type=\"radio\" id=\"customRadio{{action}}\" [value]=\"action\" name=\"actionOnPosition\" class=\"custom-control-input\">\n                                <label *ngIf=\"action === 0\" class=\"custom-control-label\" for=\"customRadio{{action}}\">Close All Position</label>\n                                <label *ngIf=\"action === 1\" class=\"custom-control-label\" for=\"customRadio{{action}}\">Close All Loss Trades</label>\n                                <label *ngIf=\"action === 2\" class=\"custom-control-label\" for=\"customRadio{{action}}\">Close All Profit Trades</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"notification-area rounded\">\n                        <div class=\"title-area border-bottom bd-color\">\n                            <h5 class=\"title\">Send Notification</h5>\n                            <small>You will receive Notification</small>\n                        </div>\n                        <div class=\"body-area\">\n                            <div class=\"custom-control custom-switch\">\n                                <input [(ngModel)]=\"defaultDisableTrade\" #disableTrade=\"ngModel\" value=\"false\" type=\"checkbox\" name=\"disableTrade\" class=\"custom-control-input\" id=\"customSwitch1\">\n                                <label class=\"custom-control-label\" for=\"customSwitch1\">Disable Trade</label>\n                            </div>\n                            <div class=\"custom-control custom-switch\">\n                                <input [(ngModel)]=\"defaultPushMail\" #pushEmail=\"ngModel\" value=\"false\" type=\"checkbox\" name=\"pushEmail\" class=\"custom-control-input\" id=\"customSwitch2\">\n                                <label class=\"custom-control-label\" for=\"customSwitch2\">Push Email</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"text-right\">\n                        <button [disabled]=\"(!formData.valid || isDirectionSelected === false || isLoading)\" class=\"btn btn-primary btn-sm px-4 py-2 position-relative\">\n                        <span [class.btn-spinner]=\"isLoading\"></span>Submit</button>\n                    </div>\n                </div>\n            </div> -->\n        </form>\n    </div>\n</div>\n\n<div class=\"tab-inner-content px-2\">\n    <div class=\"history-title \">Alert List\n        <!-- <small class=\"d-block text-size-12 \">All alerts of your equity drawdown</small> -->\n    </div>\n    <div class=\"table-filter-area \">\n        <div class=\"row no-gutters \">\n            <div class=\"col-md-4 form-inline d-none d-md-block \">\n                <div class=\"form-group mb-2 \">\n                    <label for=\"entries \" class=\" main-txt-color mr-1 \">Show </label>\n                    <select (change)=\"getStopLossOrderData($event.target.value,true)\" class=\"form-control main-txt-color bd-color shadow-none \" id=\"entries \">\n                        <option>5</option>\n                        <option>10</option>\n                        <option>15</option>\n                        <option>20</option>\n                        <option>25</option>\n                        <option>30</option>\n                        <option>50</option>\n                        <option>100</option>\n                  </select>\n                    <label for=\"entries \" class=\" main-txt-color ml-1 \"> Entries</label>\n                </div>\n            </div>\n            <div class=\"col-md-3 offset-md-5 \">\n                <div class=\"form-group \">\n                    <input [(ngModel)]=\"searchText\" type=\"text \" class=\"form-control main-txt-color bd-color shadow-none \" id=\"searchText \" placeholder=\"Enter account number to search\" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"table-container table-responsive table-responsive table-responsive-sm mb-3 \">\n        <table class=\"table table-hover main-txt-color mb-0 \">\n            <thead class=\"table-header-bg table-header-color \">\n                <tr>\n                    <th [class.active]=\"order === 'sCreadedOn_Str' \" (click)=\"setOrder('sCreadedOn_Str')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Expiry Time</th>\n                    <th [class.active]=\"order === 'Account' \" (click)=\"setOrder('Account')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Account</th>\n                    <th [class.active]=\"order === 'Value' \" (click)=\"setOrder('Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Value</th>\n                    <th [class.active]=\"order === 'oPerc_Value' \" (click)=\"setOrder('oPerc_Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Type</th>\n                    <th [class.active]=\"order === 'oAction' \" (click)=\"setOrder('oAction')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Action</th>\n                    <th [class.active]=\"order === 'oAlert_Disable_Trade' \" (click)=\"setOrder('oAlert_Disable_Trade')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Enable/Disable Trade</th>\n                    <th [class.active]=\"order === 'oAlert_Mail' \" (click)=\"setOrder('oAlert_Mail')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Alert Mail</th>\n                    <th [class.active]=\"order === 'oUP_DOWN' \" (click)=\"setOrder('oUP_DOWN')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">UP/Down</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center \">Action</th>\n                </tr>\n            </thead>\n            <tbody *ngIf=\"(!IsDataNotFound)\" class=\"secondary-txt-color \">\n                <!-- <tr *ngIf=\"(IsDataNotFound)\">\n                    <td colspan=\"9\" class=\"text-center\">\n                        <div class=\"text-size-17 font-weight-300\">Data Not Found</div>\n                    </td>\n                </tr> -->\n                <tr *ngIf=\"(isLoading)\">\n                    <td colspan=\"9\" class=\"text-center\">\n                        <div class=\"text-size-17 font-weight-300\">Loading ...</div>\n                    </td>\n                </tr>\n                <tr *ngFor=\"let item of stopLossOrderData | orderBy:order:reverse | filter:searchText | paginate: { itemsPerPage: pageSize, currentPage: p, totalItems: TotalCount}; let i = index \">\n                    <td class=\"bd-color text-capitalize font-weight-400 \">{{item.oExpiry.sCreadedOn_Str}}</td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">{{item.Account}}</td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">{{item.Value}}</td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">\n                        <span *ngIf=\"item.oPerc_Value === 0\"><i-feather class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: goldenrod\" name=\"percent\"></i-feather></span>\n                        <span *ngIf=\"item.oPerc_Value === 1\"><i-feather class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: goldenrod\" name=\"dollar-sign\"></i-feather></span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">\n                        <span *ngIf=\"item.oAction === 0\">Close All Position</span>\n                        <span *ngIf=\"item.oAction === 1\">Close All Loss Trades</span>\n                        <span *ngIf=\"item.oAction === 2\">Close All Profit Trades</span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">\n                        <span *ngIf=\"item.oAlert_Disable_Trade === 0\">Disable</span>\n                        <span *ngIf=\"item.oAlert_Disable_Trade === 1\">Enable</span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400\">\n                        <span *ngIf=\"item.oAlert_Mail === 0\">No</span>\n                        <span *ngIf=\"item.oAlert_Mail === 1\">Yes</span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">\n                        <span *ngIf=\"item.oUP_DOWN === 0\"><i-feather class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: green\" name=\"trending-up\"></i-feather> UP</span>\n                        <span *ngIf=\"item.oUP_DOWN === 1\"><i-feather class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: red\" name=\"trending-down\"></i-feather> Down</span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400 text-center \">\n                        <span><i-feather (click)=\"onDelete(item)\" tooltip=\"Delete Action\" class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: red\" name=\"trash-2\"></i-feather></span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"(IsDataNotFound)\" class=\"text-size-17 font-weight-300 text-center p-4\" style=\"background: #eff3f6;\">Data Not Found</div>\n    </div>\n    <div class=\"table-pagination text-right border-top-0 pt-4\">\n        <!-- <pagination-controls (pageChange)=\"p = $event\"></pagination-controls> -->\n        <pagination-controls (pageChange)=\"getStopLossOrderData($event,false)\"></pagination-controls>\n    </div>\n</div>","import { NotificationService } from './../../../../../shared/services/notification.service';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { GlobalService } from './../../../../../shared/services/global.service';\nimport { HeaderService } from './../../../../../shared/services/header.service';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, ViewChild, HostListener, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup, NgForm } from '@angular/forms';\nimport { BsDatepickerDirective } from 'ngx-bootstrap';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-profit-loss',\n  templateUrl: './profit-loss.component.html',\n  styleUrls: ['./profit-loss.component.scss']\n})\nexport class ProfitLossComponent implements OnInit, OnDestroy {\n  public isVisibleFormArea = false;\n  public actionOnPosition: number[] = [0, 1, 2];\n  public LoggedParams: any;\n  public isLoading = false;\n  public liveAccountData: any[] = [];\n  public stopLossOrderData: any[] = [];\n  public subscription1: Subscription;\n  public subscription2: Subscription;\n  public subscription3: Subscription;\n  public direction: number;\n  public isDirectionSelected = false;\n  public defaultPushMail = false;\n  public defaultDisableTrade = false;\n  public defaultLimitType = 0;\n  public IsDataNotFound = false;\n// Display Message Property\n  messageToDisplay: string;\n  ErrorMsqBlock = false;\n  successMsqBlock = false;\n\n   // pagination Setting\n  public TotalCount = 0;\n  public cat;\n  public searchText: any; // Search Text property is used to filter text in table\n  public p: any;          // Current page in pagination\n  public pageSize = 5;  // Table Rows Perpage property\n  public sortedData: any[]; // Sorted Product list array\n  public order = '';     // Order property to sort coloum of table\n  public reverse = true; // Reverse property is used to sort table coloum\n  public setParams: any;\n  @ViewChild('formData', {static: false}) stopLossOrderForm: NgForm;\n  isOpenDatePicker = false;\n  currentDate = new Date();\n  minDate: Date;\n  maxDate: Date;\n  @ViewChild(BsDatepickerDirective, { static: false }) datepicker: BsDatepickerDirective;\n\n  form = new FormGroup({\n    dateYMD: new FormControl(new Date()),\n    dateFull: new FormControl(new Date()),\n    dateMDY: new FormControl(new Date()),\n    dateRange: new FormControl([\n      new Date(),\n      new Date(this.currentDate.setDate(this.currentDate.getDate() + 7))\n    ])\n  });\n\n  constructor(\n    private headerService: HeaderService,\n    private globalService: GlobalService,\n    private orderPipe: OrderPipe,\n    private notificationService: NotificationService\n  ) {\n    this.minDate = new Date();\n    this.maxDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 0);\n    this.maxDate.setDate(this.maxDate.getDate() + 2);\n\n    this.subscription1 = this.headerService.castLoggedUserDetail.subscribe(\n      resData => (this.LoggedParams = resData)\n    );\n  }\n  toggleFormArea() {\n    this.isVisibleFormArea = !this.isVisibleFormArea;\n  }\n  @HostListener('window:scroll')\n  onScrollEvent() {\n    this.datepicker.hide();\n  }\n  setOrder(value: string) {\n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n    this.order = value;\n  }\n  ngOnInit(): void {\n    this.getProfileAccounts();\n    this.getStopLossOrderData(1, this.cat);\n  }\n  getStopLossOrderData(indexval, countVal) {\n      this.isLoading = true;\n      if (countVal) {\n        this.pageSize = indexval;\n        this.p = 1;\n        this.setParams = {\n          Profile: this.LoggedParams.sProfile.sMasterId,\n          Index: this.p,\n          Count: this.pageSize\n        };\n      } else {\n        this.p = indexval;\n        this.setParams = {\n          Profile: this.LoggedParams.sProfile.sMasterId,\n          Index:  (this.p - 1) * this.pageSize + 1,\n          Count: this.p * this.pageSize\n        };\n      }\n      console.log(this.LoggedParams.sProfile.sMasterId);\n      this.subscription3 = this.globalService.getRiskPL(this.setParams).subscribe(\n        data => {\n          if (data.Count > 0) {\n            this.TotalCount = data.Count;\n            this.stopLossOrderData = data.lstEquityDD;\n            this.isLoading = false;\n            this.IsDataNotFound = false;\n          } else {\n            this.IsDataNotFound = true;\n            this.isLoading = false;\n          }\n        }\n      );\n    }\n\n  getProfileAccounts() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n      LoginId: this.LoggedParams.sProfile.sMasterId\n    };\n    this.subscription2 = this.globalService.GET_PROFILE_ACCOUNTS(params).subscribe(\n      data => {\n        this.liveAccountData = data.lstAccount.map( acc => {\n          if (acc) {\n            return Object.assign(acc.sUserInfo, acc.sAccountPlan);\n          }\n        });\n      }\n    );\n  }\n  resetForm() {\n    this.stopLossOrderForm.reset();\n    this.isDirectionSelected = false;\n    // this.stopLossOrderForm.value.limitType = 0;\n    // this.stopLossOrderForm.form.value.limitType = 0;\n    // this.defaultLimitType = 0;\n  }\n  onSubmit() {\n    // alert(this.stopLossOrderForm.value.expiryTime);\n    this.isLoading = true;\n    const params = {\n      RiskId: 0,\n      Profile: this.LoggedParams.sProfile.sMasterId.toString(),\n      Account: this.stopLossOrderForm.value.accountnumber.toString(),\n      Value: this.stopLossOrderForm.value.targetLimit.toString(),\n      sValue: 0,\n      oPerc_Value: this.stopLossOrderForm.value.limitType,\n      oUP_DOWN: this.direction,\n      oAction: this.stopLossOrderForm.value.actionOnPosition,\n      oAlert_Mail: (this.stopLossOrderForm.value.pushEmail === false) ? 0 : 1,\n      oAlert_Disable_Trade: (this.stopLossOrderForm.value.disableTrade === false ) ? 0 : 1,\n      oTimestamp: {\n        sCreadedOn: 0,\n        sUpdatedOn: 0,\n        sCreadedOn_Str: new Date(),\n        sUpdatedOn_Str: new Date(),\n      },\n      oExpiry: {\n        sCreadedOn: 0,\n        sUpdatedOn: 0,\n        sCreadedOn_Str: this.stopLossOrderForm.value.expiryTime,\n        sUpdatedOn_Str: 0,\n      }\n    };\n    this.globalService.addRiskPL(params).subscribe(\n      data => {\n        if (data.Result !== -1) {\n          // console.log(data);\n          this.getStopLossOrderData(1, this.cat);\n          this.resetForm();\n          // this.onSuccessMsqDisplay('Profit loss DD alert added successfully');\n          this.notificationService.showSuccess('Profit loss drawdown alert added successfully', 'Success');\n          // this.autoCloseMsqBlock();\n          this.isLoading = false;\n          // this.isVisibleFormArea = false;\n        } else {\n          // this.onErrorMsqDisplay('Failed to add Profit loss DD');\n          this.notificationService.showError('Failed to add Profit loss drawdown alert', 'Error');\n          this.isLoading = false;\n          // this.autoCloseMsqBlock();\n        }\n      }\n    );\n\n  }\n  onSelectDirection(direction: number) {\n    this.direction = direction;\n    this.isDirectionSelected = true;\n  }\n\n  onDelete(selectedItem) {\n    Swal.fire({\n      title: 'Are you Sure!',\n      text: 'Are you sure to delete this drawdown alert?',\n      icon: 'error',\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      cancelButtonText: 'Cancel',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n        const params = {\n          RiskId: selectedItem.RiskId,\n        };\n        console.log(params);\n        this.globalService.deleteRiskPL(params).subscribe(data => {\n          if (data.Result === true) {\n            this.getStopLossOrderData(1, this.cat);\n            Swal.fire(\n              'Deleted!',\n              'Your drawdown alert has been deleted.',\n              'success'\n            );\n          }\n        });\n      }\n    });\n  }\n  autoCloseMsqBlock() {\n    setTimeout(() => {\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n  onCloseMsqBlock() {\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = false;\n    this.messageToDisplay = '';\n  }\n  onSuccessMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.ErrorMsqBlock = false;\n    this.successMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  onErrorMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  ngOnDestroy() {\n    this.subscription1.unsubscribe();\n    this.subscription2.unsubscribe();\n    this.subscription3.unsubscribe();\n  }\n\n}\n","<div class=\"right-tabBtn-row d-none d-sm-block d-md-block d-lg-block\">\n    <button class=\"btn btn-warning btn-sm font-weight-400 text-size-13\" (click)=\"toggleFormArea()\">\n        <i-feather class=\"icon-size-18\" name=\"dollar-sign\"></i-feather>Create New Drawdown\n    </button>\n</div>\n<div *ngIf=\"isVisibleFormArea\" class=\"stoploss-form-container\">\n    <div class=\"stoploss-from-box bg-b\">\n        <form class=\"\" (ngSubmit)=\"onSubmit()\" #formData=\"ngForm\">\n            <!-- Success Message After Submit section start -->\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n                        <strong>Success -: </strong>{{messageToDisplay}}\n                        <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                    </div>\n                </div>\n            </div>\n            <!-- Error Message After Submit section start -->\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n                        <strong>Oops... : </strong>{{messageToDisplay}}\n                        <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-5\">\n                    <div class=\"form-box pt-2\">\n                        <div class=\"row no-gutters\">\n                            <div class=\"col-md-12\">\n                                <div class=\"form-group\">\n                                    <label class=\"main-txt-color\" for=\"accountnumber\">Account Number</label>\n                                    <span class=\"asterick\">*</span>\n                                    <select required ngModel #accountnumber=\"ngModel\" name=\"accountnumber\" class=\"form-control shadow-none\" id=\"accountnumber\">\n                                        <option class=\"text-size-13\" value=\"\" [disabled]=\"true\" >Select Account Number</option>\n                                        <option class=\"text-size-13\" *ngFor=\"let acc of liveAccountData\" name=\"accounts\" [ngValue]=\"acc.MT4Account\">{{acc.MT4Account}}</option>\n                                    </select>\n                                    <span class=\"help-block text-danger \" *ngIf=\"!accountnumber.valid && accountnumber.touched  \">Please Select An account Number</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-7\">\n                                <label class=\"main-txt-color\" for=\"targetLimit\">Target Limit</label>\n                                <span class=\"asterick\">*</span>\n                                <div class=\"input-group target-limit\">\n                                    <input required ngModel #targetLimit=\"ngModel\" min=\"1\" name=\"targetLimit\" id=\"targetLimit\" type=\"number\" class=\"form-control shadow-none rounded-right-0\" placeholder=\"0\">\n                                    <div class=\"input-group-append\" id=\"button-addon4\">\n                                        <select required [(ngModel)]=\"defaultLimitType\" #limitType=\"ngModel\" name=\"limitType\" id=\"limitType\" class=\"form-control shadow-none limit-type rounded-left-0\" style=\"width: 60px; height:34px\">\n                                            <option value='0' selected>%</option>\n                                            <option value='1'>$</option> \n                                        </select>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <div class=\"col-md-5\">\n                                <div class=\"direction-btn text-right\">\n                                    <label class=\"main-txt-color\" for=\"selectAccount\">Equity Direction</label>\n                                    <span class=\"asterick\">*</span>\n                                    <div class=\"btn-group\" role=\"group\">\n                                        <button (click)=\"onSelectDirection(0)\" type=\"button\" [ngClass]=\"(direction === 0 && isDirectionSelected)?'btn-success':'btn-outline-success'\" class=\"btn shadow-none\"><i-feather class=\"icon-size-20\" name=\"chevrons-up\"></i-feather>UP</button>\n                                        <button (click)=\"onSelectDirection(1)\" type=\"button\" [ngClass]=\"(direction === 1 && isDirectionSelected)?'btn-danger':'btn-outline-danger'\" class=\"btn shadow-none\"><i-feather class=\"icon-size-20\" name=\"chevrons-down\"></i-feather>Down</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-7\">\n                                <div class=\"form-group expirydate-area mt-3\">\n                                    <label class=\"main-txt-color\" for=\"selectAccount\">Expiry Date</label>\n                                    <span class=\"asterick\">*</span>\n                                    <input autocomplete=\"off\" required ngModel #expiryTime=\"ngModel\" type=\"text\" id=\"expiryTime\" name=\"expiryTime\" class=\"form-control shadow-none rounded-right-0\" placeholder=\"Select Expiry Date\" #dp=\"bsDatepicker\" bsDatepicker [isOpen]=\"isOpenDatePicker\"\n                                        [minDate]=\"minDate\" [maxDate]=\"maxDate\" [bsConfig]=\"{ dateInputFormat: 'MM/DD/YYYY ' }\">\n                                    <span (click)=\"isOpenDatePicker = !isOpenDatePicker\" class=\"datePickerIcon\"><i-feather class=\"icon-size-20\" name=\"calendar\"></i-feather></span>\n                                </div>\n                            </div>\n                            <div class=\"col-md-5\">\n                                <div class=\"mt-3\">\n                                    <label class=\"main-txt-color\" for=\"selectAccount\">&nbsp;</label>\n                                    <div class=\"text-right\">\n                                        <button [disabled]=\"(!formData.valid || isDirectionSelected === false || isLoading)\" class=\"btn btn-primary btn-sm px-4 position-relative\">\n                                    <span [class.btn-spinner]=\"isLoading\"></span>Submit</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"action-area rounded\">\n                        <div class=\"title-area border-bottom bd-color\">\n                            <h5 class=\"title\">Required Action</h5>\n                            <small>You need to perform At least one Action</small>\n                        </div>\n                        <div class=\"body-area\">\n                            <div class=\"custom-control custom-radio\" *ngFor=\"let action of actionOnPosition\">\n                                <input required ngModel #actionOnPosition=\"ngModel\" type=\"radio\" id=\"customRadio{{action}}\" [value]=\"action\" name=\"actionOnPosition\" class=\"custom-control-input\">\n                                <label *ngIf=\"action === 0\" class=\"custom-control-label\" for=\"customRadio{{action}}\">Close All Position</label>\n                                <label *ngIf=\"action === 1\" class=\"custom-control-label\" for=\"customRadio{{action}}\">Close All Loss Trades</label>\n                                <label *ngIf=\"action === 2\" class=\"custom-control-label\" for=\"customRadio{{action}}\">Close All Profit Trades</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"notification-area rounded\">\n                        <div class=\"title-area border-bottom bd-color\">\n                            <h5 class=\"title\">Send Notification</h5>\n                            <small>You will receive Notification</small>\n                        </div>\n                        <div class=\"body-area\">\n                            <div class=\"custom-control custom-switch\">\n                                <input [(ngModel)]=\"defaultDisableTrade\" #disableTrade=\"ngModel\" value=\"false\" type=\"checkbox\" name=\"disableTrade\" class=\"custom-control-input\" id=\"customSwitch1\">\n                                <label class=\"custom-control-label\" for=\"customSwitch1\">Disable Trade</label>\n                            </div>\n                            <div class=\"custom-control custom-switch\">\n                                <input [(ngModel)]=\"defaultPushMail\" #pushEmail=\"ngModel\" value=\"false\" type=\"checkbox\" name=\"pushEmail\" class=\"custom-control-input\" id=\"customSwitch2\">\n                                <label class=\"custom-control-label\" for=\"customSwitch2\">Push Email</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n<div class=\"tab-inner-content px-2\">\n    <div class=\"history-title \">Alert List\n        <!-- <small class=\"d-block text-size-12 \">All alerts of your Profit/Loss drawdown</small> -->\n    </div>\n    <div class=\"table-filter-area \">\n        <div class=\"row no-gutters \">\n            <div class=\"col-md-4 form-inline d-none d-md-block \">\n                <div class=\"form-group mb-2 \">\n                    <label for=\"entries \" class=\" main-txt-color mr-1 \">Show </label>\n                    <select (change)=\"getStopLossOrderData($event.target.value,true)\" class=\"form-control main-txt-color bd-color shadow-none \" id=\"entries \">\n                        <option>5</option>\n                        <option>10</option>\n                        <option>15</option>\n                        <option>20</option>\n                        <option>25</option>\n                        <option>30</option>\n                        <option>50</option>\n                        <option>100</option>\n                  </select>\n                    <label for=\"entries \" class=\" main-txt-color ml-1 \"> Entries</label>\n                </div>\n            </div>\n            <div class=\"col-md-3 offset-md-5 \">\n                <div class=\"form-group \">\n                    <input [(ngModel)]=\"searchText\" type=\"text \" class=\"form-control main-txt-color bd-color shadow-none \" id=\"searchText \" placeholder=\"Enter account number to search \" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"table-container table-responsive table-responsive table-responsive-sm mb-3 \">\n        <table class=\"table table-hover main-txt-color mb-0 \">\n            <thead class=\"table-header-bg table-header-color \">\n                <tr>\n                    <th [class.active]=\"order === 'sCreadedOn_Str' \" (click)=\"setOrder('sCreadedOn_Str')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Expiry Time</th>\n                    <th [class.active]=\"order === 'Account' \" (click)=\"setOrder('Account')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Account</th>\n                    <th [class.active]=\"order === 'Value' \" (click)=\"setOrder('Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Value</th>\n                    <th [class.active]=\"order === 'oPerc_Value' \" (click)=\"setOrder('oPerc_Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Type</th>\n                    <th [class.active]=\"order === 'oAction' \" (click)=\"setOrder('oAction')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Action To Perform</th>\n                    <th [class.active]=\"order === 'oAlert_Disable_Trade' \" (click)=\"setOrder('oAlert_Disable_Trade')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Enable/Disable Trade</th>\n                    <th [class.active]=\"order === 'oAlert_Mail' \" (click)=\"setOrder('oAlert_Mail')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Alert Mail</th>\n                    <th [class.active]=\"order === 'oUP_DOWN' \" (click)=\"setOrder('oUP_DOWN')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">UP/Down</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center \">Action</th>\n                </tr>\n            </thead>\n            <tbody *ngIf=\"(!IsDataNotFound)\" class=\"secondary-txt-color \">\n                <tr *ngIf=\"(isLoading)\">\n                    <td colspan=\"9\" class=\"text-center\">\n                        <div class=\"text-size-17 font-weight-300\">Loading ...</div>\n                    </td>\n                </tr>\n                <tr *ngFor=\"let item of stopLossOrderData | orderBy:order:reverse | filter:searchText | paginate: { itemsPerPage: pageSize, currentPage: p, totalItems: TotalCount}; let i = index \">\n                    <td class=\"bd-color text-capitalize font-weight-400 \">{{item.oExpiry.sCreadedOn_Str}}</td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">{{item.Account}}</td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">{{item.Value}}</td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">\n                        <span *ngIf=\"item.oPerc_Value === 0\"><i-feather class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: goldenrod\" name=\"percent\"></i-feather></span>\n                        <span *ngIf=\"item.oPerc_Value === 1\"><i-feather class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: goldenrod\" name=\"dollar-sign\"></i-feather></span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">\n                        <span *ngIf=\"item.oAction === 0\">Close All Position</span>\n                        <span *ngIf=\"item.oAction === 1\">Close All Loss Trades</span>\n                        <span *ngIf=\"item.oAction === 2\">Close All Profit Trades</span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">\n                        <span *ngIf=\"item.oAlert_Disable_Trade === 0\">Disable</span>\n                        <span *ngIf=\"item.oAlert_Disable_Trade === 1\">Enable</span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400\">\n                        <span *ngIf=\"item.oAlert_Mail === 0\">No</span>\n                        <span *ngIf=\"item.oAlert_Mail === 1\">Yes</span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">\n                        <span *ngIf=\"item.oUP_DOWN === 0\"><i-feather class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: green\" name=\"trending-up\"></i-feather> UP</span>\n                        <span *ngIf=\"item.oUP_DOWN === 1\"><i-feather class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: red\" name=\"trending-down\"></i-feather> Down</span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400 text-center \">\n                        <span><i-feather (click)=\"onDelete(item)\" tooltip=\"Delete Action\" class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: red\" name=\"trash-2\"></i-feather></span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"(IsDataNotFound)\" class=\"text-size-17 font-weight-300 text-center p-4\" style=\"background: #eff3f6;\">Data Not Found</div>\n    </div>\n    <div class=\"table-pagination text-right border-top-0 pt-4\">\n        <pagination-controls (pageChange)=\"getStopLossOrderData($event,false)\"></pagination-controls>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-risk-manager-core',\n  templateUrl: './risk-manager-core.component.html',\n  styleUrls: ['./risk-manager-core.component.scss']\n})\nexport class RiskManagerCoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"small-content-section bg-f\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card border-0 \">\n                <div class=\"card-body border-0 p-0\">\n                    <div class=\"tabs-container\">\n                        <ul class=\"tabs-heading d-flex flex-row border-bottom\">\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/risk-manager/equity-drawdown\">\n                                    <span class=\"material-icons\">timeline</span>\n                                    <span class=\"tab-text\">Equity Drawdown</span>\n                                </a>\n                            </li>\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/risk-manager/symbol-drawdown\">\n                                    <span class=\"material-icons\">equalizer</span>\n                                    <span class=\"tab-text\">Symbol Drawdown</span>\n                                </a>\n                            </li>\n                            <li class=\"tabs-item item-with-icon\" routerLinkActive=\"active\">\n                                <a class=\"p-3\" routerLink=\"/home/risk-manager/profit-loss\">\n                                    <span class=\"material-icons\">monetization_on</span>\n                                    <span class=\"tab-text\">Profit/Loss</span>\n                                </a>\n                            </li>\n                        </ul>\n                        <div class=\"tabs-body p-2\">\n                            <router-outlet></router-outlet>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NotificationService } from './../../../../../shared/services/notification.service';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { GlobalService } from './../../../../../shared/services/global.service';\nimport { HeaderService } from './../../../../../shared/services/header.service';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, ViewChild, HostListener, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup, NgForm } from '@angular/forms';\nimport { BsDatepickerDirective } from 'ngx-bootstrap';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-symbol-drawdown',\n  templateUrl: './symbol-drawdown.component.html',\n  styleUrls: ['./symbol-drawdown.component.scss']\n})\nexport class SymbolDrawdownComponent implements OnInit, OnDestroy {\n  // tslint:disable-next-line: max-line-length\n  public symbolsList: any[] = ['USDCAD', 'NZDUSD', 'EURJPY', 'GBPJPY', 'AUDJPY', 'CADJPY', 'CHFJPY', 'NZDJPY', 'EURAUD', 'GBPAUD', 'EURCAD', 'GBPCAD', 'AUDCAD', 'NZDCAD', 'EURCHF', 'GBPCHF', 'AUDCHF', 'CADCHF', 'NZDCHF', 'EURNZD'];\n  public isVisibleFormArea = false;\n  public actionOnPosition: number[] = [0, 1, 2];\n  public LoggedParams: any;\n  public isLoading = false;\n  public liveAccountData: any[] = [];\n  public stopLossOrderData: any[] = [];\n  public subscription1: Subscription;\n  public subscription2: Subscription;\n  public subscription3: Subscription;\n  public direction: number;\n  public isDirectionSelected = false;\n  public defaultPushMail = false;\n  public defaultDisableTrade = false;\n  public defaultLimitType = 0;\n  public IsDataNotFound = false;\n// Display Message Property\n  messageToDisplay: string;\n  ErrorMsqBlock = false;\n  successMsqBlock = false;\n\n   // pagination Setting\n  public TotalCount = 0;\n  public cat;\n  public searchText: any; // Search Text property is used to filter text in table\n  public p: any;          // Current page in pagination\n  public pageSize = 5;  // Table Rows Perpage property\n  public sortedData: any[]; // Sorted Product list array\n  public order = '';     // Order property to sort coloum of table\n  public reverse = true; // Reverse property is used to sort table coloum\n  public setParams: any;\n  @ViewChild('formData', {static: false}) stopLossOrderForm: NgForm;\n  isOpenDatePicker = false;\n  currentDate = new Date();\n  minDate: Date;\n  maxDate: Date;\n  @ViewChild(BsDatepickerDirective, { static: false }) datepicker: BsDatepickerDirective;\n\n  form = new FormGroup({\n    dateYMD: new FormControl(new Date()),\n    dateFull: new FormControl(new Date()),\n    dateMDY: new FormControl(new Date()),\n    dateRange: new FormControl([\n      new Date(),\n      new Date(this.currentDate.setDate(this.currentDate.getDate() + 7))\n    ])\n  });\n\n  constructor(\n    private headerService: HeaderService,\n    private globalService: GlobalService,\n    private orderPipe: OrderPipe,\n    private notificationService: NotificationService\n  ) {\n    this.minDate = new Date();\n    this.maxDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 0);\n    this.maxDate.setDate(this.maxDate.getDate() + 2);\n\n    this.subscription1 = this.headerService.castLoggedUserDetail.subscribe(\n      resData => (this.LoggedParams = resData)\n    );\n  }\n  toggleFormArea() {\n    this.isVisibleFormArea = !this.isVisibleFormArea;\n  }\n  @HostListener('window:scroll')\n  onScrollEvent() {\n    this.datepicker.hide();\n  }\n  setOrder(value: string) {\n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n    this.order = value;\n  }\n  ngOnInit(): void {\n    this.getProfileAccounts();\n    this.getStopLossOrderData(1, this.cat);\n  }\n  getStopLossOrderData(indexval, countVal) {\n      this.isLoading = true;\n      if (countVal) {\n        this.pageSize = indexval;\n        this.p = 1;\n        this.setParams = {\n          Profile: this.LoggedParams.sProfile.sMasterId,\n          Index: this.p,\n          Count: this.pageSize\n        };\n      } else {\n        this.p = indexval;\n        this.setParams = {\n          Profile: this.LoggedParams.sProfile.sMasterId,\n          Index:  (this.p - 1) * this.pageSize + 1,\n          Count: this.p * this.pageSize\n        };\n      }\n      console.log(this.LoggedParams.sProfile.sMasterId);\n      this.subscription3 = this.globalService.getRiskSymb(this.setParams).subscribe(\n        data => {\n          if (data.Count > 0) {\n            this.TotalCount = data.Count;\n            this.stopLossOrderData = data.lstEquityDD;\n            this.isLoading = false;\n            this.IsDataNotFound = false;\n          } else {\n            this.IsDataNotFound = true;\n            this.isLoading = false;\n          }\n        }\n      );\n    }\n\n  getProfileAccounts() {\n    const params = {\n      ProfileId: this.LoggedParams.sProfile.sMasterId,\n      LoginId: this.LoggedParams.sProfile.sMasterId\n    };\n    this.subscription2 = this.globalService.GET_PROFILE_ACCOUNTS(params).subscribe(\n      data => {\n        this.liveAccountData = data.lstAccount.map( acc => {\n          if (acc) {\n            return Object.assign(acc.sUserInfo, acc.sAccountPlan);\n          }\n        });\n      }\n    );\n  }\n  resetForm() {\n    this.stopLossOrderForm.reset();\n    this.isDirectionSelected = false;\n    // this.stopLossOrderForm.value.limitType = 0;\n    // this.stopLossOrderForm.form.value.limitType = 0;\n    // this.defaultLimitType = 0;\n  }\n  onSubmit() {\n    // alert(this.stopLossOrderForm.value.expiryTime);\n    this.isLoading = true;\n    const params = {\n      RiskId: 0,\n      Profile: this.LoggedParams.sProfile.sMasterId.toString(),\n      Account: this.stopLossOrderForm.value.accountnumber.toString(),\n      Value: this.stopLossOrderForm.value.targetLimit.toString(),\n      Symbol : this.stopLossOrderForm.value.symbol,\n      sValue: 0,\n      oPerc_Value: this.stopLossOrderForm.value.limitType,\n      oUP_DOWN: this.direction,\n      oAction: this.stopLossOrderForm.value.actionOnPosition,\n      oAlert_Mail: (this.stopLossOrderForm.value.pushEmail === false) ? 0 : 1,\n      oAlert_Disable_Trade: (this.stopLossOrderForm.value.disableTrade === false ) ? 0 : 1,\n      oTimestamp: {\n        sCreadedOn: 0,\n        sUpdatedOn: 0,\n        sCreadedOn_Str: new Date(),\n        sUpdatedOn_Str: new Date(),\n      },\n      oExpiry: {\n        sCreadedOn: 0,\n        sUpdatedOn: 0,\n        sCreadedOn_Str: this.stopLossOrderForm.value.expiryTime,\n        sUpdatedOn_Str: 0,\n      }\n    };\n    this.globalService.addRiskSymb(params).subscribe(\n      data => {\n        if (data.Result !== -1) {\n          // console.log(data);\n          this.getStopLossOrderData(1, this.cat);\n          this.resetForm();\n          // this.onSuccessMsqDisplay('symbol DD alert added successfully');\n          this.notificationService.showSuccess('Symbol drawdown alert added successfully', 'Success');\n          // this.autoCloseMsqBlock();\n          this.isLoading = false;\n          // this.isVisibleFormArea = false;\n        } else {\n          // this.onErrorMsqDisplay('Failed to add symbol DD');\n          this.notificationService.showError('Failed to add Symbol drawdown alert', 'Error');\n          this.isLoading = false;\n          // this.autoCloseMsqBlock();\n        }\n      }\n    );\n\n  }\n  onSelectDirection(direction: number) {\n    this.direction = direction;\n    this.isDirectionSelected = true;\n  }\n\n  onDelete(selectedItem) {\n    Swal.fire({\n      title: 'Are you Sure!',\n      text: 'Are you sure to delete this drawdown alert?',\n      icon: 'error',\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      cancelButtonText: 'Cancel',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n    }).then((result) => {\n      if (result.value) {\n        const params = {\n          RiskId: selectedItem.RiskId,\n        };\n        console.log(params);\n        this.globalService.deleteRiskSymb(params).subscribe(data => {\n          if (data.Result === true) {\n            this.getStopLossOrderData(1, this.cat);\n            Swal.fire(\n              'Deleted!',\n              'Your drawdown alert has been deleted.',\n              'success'\n            );\n          }\n        });\n      }\n    });\n  }\n  autoCloseMsqBlock() {\n    setTimeout(() => {\n      this.successMsqBlock = false;\n      this.ErrorMsqBlock = false;\n      this.messageToDisplay = '';\n    }, 10000);\n  }\n  onCloseMsqBlock() {\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = false;\n    this.messageToDisplay = '';\n  }\n  onSuccessMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.ErrorMsqBlock = false;\n    this.successMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  onErrorMsqDisplay(msq: string) {\n    this.messageToDisplay = '';\n    this.successMsqBlock = false;\n    this.ErrorMsqBlock = true;\n    this.messageToDisplay = msq;\n  }\n  ngOnDestroy() {\n    this.subscription1.unsubscribe();\n    this.subscription2.unsubscribe();\n    this.subscription3.unsubscribe();\n  }\n\n}\n","<div class=\"right-tabBtn-row d-none d-sm-block d-md-block d-lg-block\">\n    <button class=\"btn btn-warning btn-sm font-weight-400 text-size-13\" (click)=\"toggleFormArea()\">\n        <i-feather class=\"icon-size-18\" name=\"dollar-sign\"></i-feather>Create New Drawdown\n    </button>\n</div>\n<div *ngIf=\"isVisibleFormArea\" class=\"stoploss-form-container\">\n    <div class=\"stoploss-from-box bg-b\">\n        <form class=\"\" (ngSubmit)=\"onSubmit()\" #formData=\"ngForm\">\n            <!-- Success Message After Submit section start -->\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" *ngIf=\"successMsqBlock\">\n                        <strong>Success -: </strong>{{messageToDisplay}}\n                        <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                    </div>\n                </div>\n            </div>\n            <!-- Error Message After Submit section start -->\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" *ngIf=\"ErrorMsqBlock\">\n                        <strong>Oops... : </strong>{{messageToDisplay}}\n                        <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><i-feather (click)=\"onCloseMsqBlock()\" class=\"close-btn\" name=\"x\"></i-feather></button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-5\">\n                    <div class=\"form-box pt-2\">\n                        <div class=\"row no-gutters\">\n                            <div class=\"col-md-12\">\n                                <div class=\"form-group\">\n                                    <label class=\"main-txt-color\" for=\"accountnumber\">Account Number</label>\n                                    <span class=\"asterick\">*</span>\n                                    <select required ngModel #accountnumber=\"ngModel\" name=\"accountnumber\" class=\"form-control shadow-none\" id=\"accountnumber\">\n                                        <option class=\"text-size-13\" value=\"\" [disabled]=\"true\" >Select Account Number</option>\n                                        <option class=\"text-size-13\" *ngFor=\"let acc of liveAccountData\" name=\"accounts\" [ngValue]=\"acc.MT4Account\">{{acc.MT4Account}}</option>\n                                    </select>\n                                    <span class=\"help-block text-danger \" *ngIf=\"!accountnumber.valid && accountnumber.touched  \">Please select an account Number</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"main-txt-color\" for=\"symbol\">Select Symbol</label>\n                                    <span class=\"asterick\">*</span>\n                                    <select required ngModel #symbol=\"ngModel\" name=\"symbol\" class=\"form-control shadow-none\" id=\"symbol\">\n                                        <option class=\"text-size-13\" value=\"\" [disabled]=\"true\" >Select Symbol</option>\n                                        <option class=\"text-size-13\" *ngFor=\"let item of symbolsList\" name=\"accounts\" [ngValue]=\"item\">{{item}}</option>\n                                    </select>\n                                    <span class=\"help-block text-danger \" *ngIf=\"!symbol.valid && symbol.touched  \">Please select at least one Symbol</span>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group expirydate-area text-right\">\n                                    <label class=\"main-txt-color\" for=\"selectAccount\">Expiry Date</label>\n                                    <span class=\"asterick\">*</span>\n                                    <input autocomplete=\"off\" required ngModel #expiryTime=\"ngModel\" type=\"text\" id=\"expiryTime\" name=\"expiryTime\" class=\"form-control shadow-none rounded-right-0\" placeholder=\"Select Expiry Date\" #dp=\"bsDatepicker\" bsDatepicker [isOpen]=\"isOpenDatePicker\"\n                                        [minDate]=\"minDate\" [maxDate]=\"maxDate\" [bsConfig]=\"{ dateInputFormat: 'MM/DD/YYYY ' }\">\n                                    <span (click)=\"isOpenDatePicker = !isOpenDatePicker\" class=\"datePickerIcon\"><i-feather class=\"icon-size-20\" name=\"calendar\"></i-feather></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <label class=\"main-txt-color\" for=\"targetLimit\">Target Limit</label>\n                                <span class=\"asterick\">*</span>\n                                <div class=\"input-group target-limit\">\n                                    <input required ngModel #targetLimit=\"ngModel\" min=\"1\" name=\"targetLimit\" id=\"targetLimit\" type=\"number\" class=\"form-control shadow-none rounded-right-0\" placeholder=\"0\">\n                                    <div class=\"input-group-append\" id=\"button-addon4\">\n                                        <select required [(ngModel)]=\"defaultLimitType\" #limitType=\"ngModel\" name=\"limitType\" id=\"limitType\" class=\"form-control shadow-none limit-type rounded-left-0\" style=\"width: 60px; height:34px\">\n                                            <option value='0' selected>%</option>\n                                            <option value='1'>$</option> \n                                        </select>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"direction-btn text-right\">\n                                    <label class=\"main-txt-color\" for=\"selectAccount\">Equity Direction</label>\n                                    <span class=\"asterick\">*</span>\n                                    <div class=\"btn-group\" role=\"group\">\n                                        <button (click)=\"onSelectDirection(0)\" type=\"button\" [ngClass]=\"(direction === 0 && isDirectionSelected)?'btn-success':'btn-outline-success'\" class=\"btn shadow-none\"><i-feather class=\"icon-size-20\" name=\"chevrons-up\"></i-feather>UP</button>\n                                        <button (click)=\"onSelectDirection(1)\" type=\"button\" [ngClass]=\"(direction === 1 && isDirectionSelected)?'btn-danger':'btn-outline-danger'\" class=\"btn shadow-none\"><i-feather class=\"icon-size-20\" name=\"chevrons-down\"></i-feather>Down</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"action-area rounded\">\n                        <div class=\"title-area border-bottom bd-color\">\n                            <h5 class=\"title\">Required Action</h5>\n                            <small>You need to perform At least one Action</small>\n                        </div>\n                        <div class=\"body-area\">\n                            <div class=\"custom-control custom-radio\" *ngFor=\"let action of actionOnPosition\">\n                                <input required ngModel #actionOnPosition=\"ngModel\" type=\"radio\" id=\"customRadio{{action}}\" [value]=\"action\" name=\"actionOnPosition\" class=\"custom-control-input\">\n                                <label *ngIf=\"action === 0\" class=\"custom-control-label\" for=\"customRadio{{action}}\">Close All Position</label>\n                                <label *ngIf=\"action === 1\" class=\"custom-control-label\" for=\"customRadio{{action}}\">Close All Loss Trades</label>\n                                <label *ngIf=\"action === 2\" class=\"custom-control-label\" for=\"customRadio{{action}}\">Close All Profit Trades</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"notification-area rounded\">\n                        <div class=\"title-area border-bottom bd-color\">\n                            <h5 class=\"title\">Send Notification</h5>\n                            <small>You will receive Notification</small>\n                        </div>\n                        <div class=\"body-area\">\n                            <div class=\"custom-control custom-switch\">\n                                <input [(ngModel)]=\"defaultDisableTrade\" #disableTrade=\"ngModel\" value=\"false\" type=\"checkbox\" name=\"disableTrade\" class=\"custom-control-input\" id=\"customSwitch1\">\n                                <label class=\"custom-control-label\" for=\"customSwitch1\">Disable Trade</label>\n                            </div>\n                            <div class=\"custom-control custom-switch\">\n                                <input [(ngModel)]=\"defaultPushMail\" #pushEmail=\"ngModel\" value=\"false\" type=\"checkbox\" name=\"pushEmail\" class=\"custom-control-input\" id=\"customSwitch2\">\n                                <label class=\"custom-control-label\" for=\"customSwitch2\">Push Email</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-5\">\n                    <div class=\"\">\n                        <label class=\"main-txt-color font-weight-500\" for=\"selectAccount\">&nbsp;</label>\n                        <div class=\"text-right\">\n                            <button [disabled]=\"(!formData.valid || isDirectionSelected === false || isLoading)\" class=\"btn btn-primary btn-sm px-4 position-relative\">\n                        <span [class.btn-spinner]=\"isLoading\"></span>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n<div class=\"tab-inner-content px-2\">\n    <div class=\"history-title \">Alert List\n        <!-- <small class=\"d-block text-size-12 \">All alerts of your Symbol drawdown</small> -->\n    </div>\n    <div class=\"table-filter-area \">\n        <div class=\"row no-gutters \">\n            <div class=\"col-md-4 form-inline d-none d-md-block \">\n                <div class=\"form-group mb-2 \">\n                    <label for=\"entries \" class=\" main-txt-color mr-1 \">Show </label>\n                    <select (change)=\"getStopLossOrderData($event.target.value,true)\" class=\"form-control main-txt-color bd-color shadow-none \" id=\"entries \">\n                        <option>5</option>\n                        <option>10</option>\n                        <option>15</option>\n                        <option>20</option>\n                        <option>25</option>\n                        <option>30</option>\n                        <option>50</option>\n                        <option>100</option>\n                  </select>\n                    <label for=\"entries \" class=\" main-txt-color ml-1 \"> Entries</label>\n                </div>\n            </div>\n            <div class=\"col-md-3 offset-md-5 \">\n                <div class=\"form-group \">\n                    <input [(ngModel)]=\"searchText\" type=\"text \" class=\"form-control main-txt-color bd-color shadow-none \" id=\"searchText \" placeholder=\"Enter account number to search\" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"table-container table-responsive table-responsive table-responsive-sm mb-3 \">\n        <table class=\"table table-hover main-txt-color mb-0 \">\n            <thead class=\"table-header-bg table-header-color \">\n                <tr>\n                    <th [class.active]=\"order === 'sCreadedOn_Str' \" (click)=\"setOrder('sCreadedOn_Str')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Expiry Time</th>\n                    <th [class.active]=\"order === 'Account' \" (click)=\"setOrder('Account')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Account</th>\n                    <th [class.active]=\"order === 'Symbol' \" (click)=\"setOrder('Symbol')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Symbol</th>\n                    <th [class.active]=\"order === 'Value' \" (click)=\"setOrder('Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Value</th>\n                    <th [class.active]=\"order === 'oPerc_Value' \" (click)=\"setOrder('oPerc_Value')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Type</th>\n                    <th [class.active]=\"order === 'oAction' \" (click)=\"setOrder('oAction')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Action</th>\n                    <th [class.active]=\"order === 'oAlert_Disable_Trade' \" (click)=\"setOrder('oAlert_Disable_Trade')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Enable/Disable Trade</th>\n                    <th [class.active]=\"order === 'oAlert_Mail' \" (click)=\"setOrder('oAlert_Mail')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">Alert Mail</th>\n                    <th [class.active]=\"order === 'oUP_DOWN' \" (click)=\"setOrder('oUP_DOWN')\" class=\"font-weight-500 bd-color text-capitalize align-middle \">UP/Down</th>\n                    <th class=\"font-weight-500 bd-color text-capitalize align-middle text-center \">Action</th>\n                </tr>\n            </thead>\n            <tbody *ngIf=\"(!IsDataNotFound)\" class=\"secondary-txt-color \">\n                <tr *ngIf=\"(isLoading)\">\n                    <td colspan=\"9\" class=\"text-center\">\n                        <div class=\"text-size-17 font-weight-300\">Loading ...</div>\n                    </td>\n                </tr>\n                <tr *ngFor=\"let item of stopLossOrderData | orderBy:order:reverse | filter:searchText | paginate: { itemsPerPage: pageSize, currentPage: p, totalItems: TotalCount}; let i = index \">\n                    <td class=\"bd-color text-capitalize font-weight-400\">{{item.oExpiry.sCreadedOn_Str}}</td>\n                    <td class=\"bd-color text-capitalize font-weight-400\">{{item.Account}}</td>\n                    <td class=\"bd-color text-capitalize font-weight-400\">{{item.Symbol}}</td>\n                    <td class=\"bd-color text-capitalize font-weight-400\">{{item.Value}}</td>\n                    <td class=\"bd-color text-capitalize font-weight-400\">\n                        <span *ngIf=\"item.oPerc_Value === 0\"><i-feather class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: goldenrod\" name=\"percent\"></i-feather></span>\n                        <span *ngIf=\"item.oPerc_Value === 1\"><i-feather class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: goldenrod\" name=\"dollar-sign\"></i-feather></span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">\n                        <span *ngIf=\"item.oAction === 0\">Close All Position</span>\n                        <span *ngIf=\"item.oAction === 1\">Close All Loss Trades</span>\n                        <span *ngIf=\"item.oAction === 2\">Close All Profit Trades</span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">\n                        <span *ngIf=\"item.oAlert_Disable_Trade === 0\">Disable</span>\n                        <span *ngIf=\"item.oAlert_Disable_Trade === 1\">Enable</span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400\">\n                        <span *ngIf=\"item.oAlert_Mail === 0\">No</span>\n                        <span *ngIf=\"item.oAlert_Mail === 1\">Yes</span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400 \">\n                        <span *ngIf=\"item.oUP_DOWN === 0\"><i-feather class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: green\" name=\"trending-up\"></i-feather> UP</span>\n                        <span *ngIf=\"item.oUP_DOWN === 1\"><i-feather class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: red\" name=\"trending-down\"></i-feather> Down</span>\n                    </td>\n                    <td class=\"bd-color text-capitalize font-weight-400 text-center \">\n                        <span><i-feather (click)=\"onDelete(item)\" tooltip=\"Delete Action\" class=\"icon-size-17 primary-icons-color cursor-pointer\" style=\"color: red\" name=\"trash-2\"></i-feather></span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"(IsDataNotFound)\" class=\"text-size-17 font-weight-300 text-center p-4\" style=\"background: #eff3f6;\">Data Not Found</div>\n    </div>\n    <div class=\"table-pagination text-right border-top-0 pt-4\">\n        <!-- <pagination-controls (pageChange)=\"p = $event\"></pagination-controls> -->\n        <pagination-controls (pageChange)=\"getStopLossOrderData($event,false)\"></pagination-controls>\n    </div>\n</div>","import { ProfitLossComponent } from './risk-manager-core/profit-loss/profit-loss.component';\nimport { SymbolDrawdownComponent } from './risk-manager-core/symbol-drawdown/symbol-drawdown.component';\nimport { EquityDrawdownComponent } from './risk-manager-core/equity-drawdown/equity-drawdown.component';\nimport { RiskManagerCoreComponent } from './risk-manager-core/risk-manager-core.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RiskManagerCoreComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'equity-drawdown'\n      },\n      {\n        path: 'equity-drawdown',\n        component: EquityDrawdownComponent,\n        data: {title: 'Risk Manager', breadcrumb: 'Equity Drawdown'}\n      },\n      {\n        path: 'symbol-drawdown',\n        component: SymbolDrawdownComponent,\n        data: {title: 'Risk Manager', breadcrumb: 'Symbol Drawdown'}\n      },\n      {\n        path: 'profit-loss',\n        component: ProfitLossComponent,\n        data: {title: 'Risk Manager', breadcrumb: 'Profit Loss'}\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RiskManagerRoutingModule { }\n","import { SharedModule } from './../../../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RiskManagerRoutingModule } from './risk-manager-routing.module';\nimport { RiskManagerCoreComponent } from './risk-manager-core/risk-manager-core.component';\nimport { EquityDrawdownComponent } from './risk-manager-core/equity-drawdown/equity-drawdown.component';\nimport { SymbolDrawdownComponent } from './risk-manager-core/symbol-drawdown/symbol-drawdown.component';\nimport { ProfitLossComponent } from './risk-manager-core/profit-loss/profit-loss.component';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n@NgModule({\n  declarations: [RiskManagerCoreComponent, EquityDrawdownComponent, SymbolDrawdownComponent, ProfitLossComponent],\n  imports: [\n    CommonModule,\n    RiskManagerRoutingModule,\n    SharedModule,\n    BsDatepickerModule.forRoot(),\n  ]\n})\nexport class RiskManagerModule { }\n"]}